{"version":3,"sources":["producers/prod_atom_builder.js"],"names":["$","Drupal","atomizer","producers","atom_builderC","_viewer","onNucletAddButton","event","id","target","split","nuclet","viewer","atom","addNuclet","setValenceRings","createProtonLists","setEditNuclet","render","hoverProtons","visibleProtons","nuclets","az","hasOwnProperty","protons","p","length","active","push","visible","createNucletAttachItem","nucletAttach","label","getElementsByTagName","div","innerHTML","state","button","document","createElement","setAttribute","classList","add","addEventListener","appendChild","createNucletList","$nucletFormBlock","insertAfter","$nucletList","find","conf","attr","nucletAngleSlider","value","attachAngle","nucletAngleValue","nucletDelete","nucletAngle","remove","addClass","removeClass","nucletAttach0","nucletAttach1","editNuclet","addNucletToList","shell","numProtons","numNeutral","proton","type","out","name","grow0","grow1","html","$nucletButtons","click","e","nucletName","getNuclet","hasClass","highlightedProton","highlightedFace","highlightedIcosa","highlightedOuterFace","mouseMode","context","hoverInnerFaces","hoverOuterFaces","changeNucletAngle","deleteNuclet","$radios","tagName","changeNucletState","this","val","console","log","createView","nucletC","atomC","userAtomNid","localStorage","getItem","view","loadAtom","ghostProton","makeProton","x","y","z","setDefaults","userAtomFile","selectyml","select","querySelector","mouseClick","which","preventDefault","intersects","controls","findIntersects","object","optional","material","showStats","undefined","parent","objects","oldFaces","face","i","geometry","faces","index","reactiveState","indexOf","splice","icosaFaces","createGeometryFaces","compConf","rotation","nucletGroup","hoverObjects","hovered","theme","get","color","setHex","parseInt","replace","colorsNeedUpdate","elementsNeedUpdate","dynamic","verticesNeedUpdate","atomLoaded","setItem","nid","icosaOutFaces","jQuery"],"mappings":"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","file":"../../producers/prod_atom_builder.js","sourcesContent":["/**\n * @file - prod_atom_builder.js\n *\n * This is a 'producer' which allows users to build atoms.\n * This module provides functions to handle deleting/adding nuclets,\n * changing a nuclets slider angle, etc.\n */\n\n(function ($) {\n\n  Drupal.atomizer.producers.atom_builderC = function (_viewer) {\n    var viewer = _viewer;\n    var atom;\n\n    var mouseMode = 'none';\n    var editNuclet;\n\n    var nucletAngle =       $('#nuclet--attachAngle', viewer.context)[0];\n    var nucletAngleSlider = $('#nuclet--attachAngle--az-slider', viewer.context)[0]\n    var nucletAngleValue =  $('#nuclet--attachAngle--az-value', viewer.context)[0];\n    var nucletDelete =      $('#nuclet--delete', viewer.context)[0];\n\n    var nucletAttach0 =     $('#edit-nuclet-grow-0', viewer.context)[0];\n    var nucletAttach1 =     $('#edit-nuclet-grow-1', viewer.context)[0];\n\n    var $nucletList =  $('#nuclet--list');\n    var $nucletFormBlock = $('#blocks--nuclet-form');\n\n    var $controlsForm = $('.az-controls-form', viewer.context);\n\n    var hoverInnerFaces = [];\n    var hoverOuterFaces = [];\n    var hoverProtons = [];\n    var visibleProtons = [];\n    var highlightedProton;\n    var highlightedFace;\n    var highlightedIcosa;\n    var highlightedOuterFace;\n\n    /**\n     * User has changed the nuclet angle slider.\n     *\n     * @param event\n     */\n    function onAngleChanged(event) {\n      viewer.atom.changeNucletAngle(editNuclet.az.id, event.target.value);\n      viewer.render();\n    }\n\n    /**\n     * User pressed the Delete button on the nuclet edit form.\n     *\n     * @param event\n     */\n    function onNucletDelete(event) {\n      // Delete the protons from the\n      viewer.atom.deleteNuclet(editNuclet.az.id);\n      delete viewer.atom.az().nuclets[editNuclet.az.id];\n      createNucletList(viewer.atom.atom);\n      createProtonLists();\n      viewer.render();\n\n      $nucletFormBlock.addClass('az-hidden');\n    }\n\n    /**\n     * User pressed a nuclet Add button - so add a nuclet.\n     * @param event\n     */\n    function onNucletAddButton(event) {\n      var id = event.target.id.split('-',2)[1];\n      var nuclet = viewer.atom.addNuclet(id);\n      viewer.atom.setValenceRings();\n      createProtonLists();\n      setEditNuclet(nuclet);\n      viewer.render();\n    }\n\n    /**\n     * Return the objects which are active for hovering\n     *\n     * @returns {*}\n     */\n    var hoverObjects = function hoverObjects() {\n      switch (mouseMode) {\n        case 'none':\n          return null;\n        case 'protons':\n          return hoverProtons;\n        case 'nuclets':\n          return visibleProtons;\n        case 'inner-faces':\n          return viewer.objects.icosaFaces;\n        case 'outer-faces':\n          return hoverOuterFaces;\n      }\n    };\n\n    /**\n     * User has hovered over a proton, set transparency to .5.\n     *\n     * @param event\n     */\n    var hovered = function hovered(objects) {\n      switch (mouseMode) {\n        case 'none':\n          return [];\n        case 'protons':\n          var opacity = viewer.theme.get('proton--opacity');\n\n          // If there is already a highlighted proton\n          if (highlightedProton) {\n            // Return if the proton is already highlighted\n            if (objects.length && highlightedProton == objects[0]) return;\n\n            var proton = highlightedProton.object;\n\n            // Change the proton back to it's original color and visibility.\n            var color = viewer.theme.get('proton-' + proton.az.type + '--color');\n            proton.material.color.setHex(parseInt(color.replace(/#/, \"0x\")), 16);\n            proton.material.visible = proton.az.visible;\n          }\n\n          if (objects.length) {\n            // Return if this proton isn't optional\n            if (!objects[0].object.az.optional || !objects[0].object.az.active) return;\n\n            // Highlight the proton\n            highlightedProton = objects[0];\n            highlightedProton.object.material.visible = true;\n            var color = viewer.theme.get('proton-ghost--color');\n            highlightedProton.object.material.color.setHex(parseInt(color.replace(/#/, \"0x\")), 16);\n          }\n          break;\n\n        case 'nuclets':\n//      Get the nuclet form working, display all current nuclets in a tree.\n          break;\n\n        case 'inner-faces':\n          var opacity = viewer.theme.get('icosaFaces--opacity--az-slider');\n\n          // If there is already a highlighted proton\n          if (highlightedFace) {\n            if (objects.length && highlightedFace == objects[0]) return;\n            highlightedFace.color.setHex(parseInt(\"0x00ff00\"));\n            highlightedIcosa.geometry.colorsNeedUpdate = true;\n            highlightedFace = null;\n          }\n\n          if (objects.length) {\n            highlightedFace = objects[0].face;\n            highlightedIcosa = objects[0].object;\n            highlightedFace.color.setHex(parseInt(\"0x00ffff\"));\n            highlightedIcosa.geometry.colorsNeedUpdate = true;\n            highlightedIcosa.geometry.elementsNeedUpdate = true;\n            highlightedIcosa.geometry.dynamic = true;\n            highlightedIcosa.geometry.verticesNeedUpdate = true;\n          }\n          break;\n\n        case 'outer-faces':\n          var opacity = viewer.theme.get(' icosaOutFaces--opacity');\n\n          // If there is already a highlighted proton\n          if (highlightedOuterFace) {\n            if (objects.length && highlightedOuterFace == objects[0]) return;\n            highlightedOuterFace.color.setHex(parseInt(\"0xff00ff\"));\n            highlightedOuterFace = null;\n          }\n\n          if (objects.length) {\n            highlightedOuterFace = objects[0].face;\n            highlightedOuterFace.color.setHex(parseInt(\"0xffff00\"));\n          }\n          objects[0].object.geometry.colorsNeedUpdate = true;\n          break;\n      }\n    };\n\n    /**\n     * User has clicked somewhere in the scene with the mouse.\n     *\n     * If they right clicked on a proton, find the parent nuclet and popup the nuclet edit form.\n     * If they right clicked anywhere else, pop down the nuclet edit form.\n     *\n     * @param event\n     * @returns {boolean}\n     */\n    var mouseClick = function mouseClick(event) {\n      switch (event.which) {\n\n        case 1:       // Left mouse click\n        case 3:       // Right click\n          event.preventDefault();\n          switch (mouseMode) {\n            case 'none':\n              break;\n\n            case 'protons':\n              var intersects = viewer.controls.findIntersects(hoverProtons);\n              if (intersects.length) {\n                var proton = intersects[0].object;\n                if (proton.az.optional) {\n                  proton.az.visible = !proton.az.visible;\n                  proton.material.visible = proton.az.visible;\n                  viewer.atom.setValenceRings();\n                  createProtonLists();\n                  viewer.render();\n                }\n                viewer.atom.showStats();\n              }\n              break;\n\n            case 'nuclets':\n              var intersects = viewer.controls.findIntersects(visibleProtons);\n              if (intersects.length == 0) {\n                // Pop down the nuclet edit dialog.\n                $nucletFormBlock.addClass('az-hidden');\n                editNuclet = undefined;\n                return false;\n              } else {\n                // Initialize to current nuclet.\n                editNuclet = intersects[0].object.parent.parent;\n                $nucletFormBlock.removeClass('az-hidden');\n                $nucletFormBlock.insertAfter($nucletList.find('.' + editNuclet.name));\n                setEditNuclet(editNuclet);\n                return false;\n              }\n              break;\n\n            case 'inner-faces':\n              var objects = viewer.controls.findIntersects(hoverInnerFaces);\n              if (objects.length) {\n                var oldFaces = objects[0].object;\n                var face = objects[0].face;\n\n                for (var i = 0; i < oldFaces.geometry.faces.length; i++) {\n                  if (oldFaces.geometry.faces[i] === face) {\n                    var index = oldFaces.geometry.reactiveState.indexOf(i);\n                    if (index > -1) {\n                      oldFaces.geometry.reactiveState.splice(index, 1);\n                    } else {\n                      oldFaces.geometry.reactiveState.push(i);\n                    }\n                    break;\n                  }\n                }\n\n                viewer.objects.icosaFaces = null;\n                var faces = viewer.nuclet.createGeometryFaces(\n                  oldFaces.name,\n                  1,\n                  oldFaces.geometry,\n                  oldFaces.geometry.compConf.rotation || null,\n                  oldFaces.geometry.reactiveState\n                );\n                var nucletGroup = oldFaces.parent;\n                viewer.objects[oldFaces.name] = [];\n                viewer.objects[oldFaces.name].push(faces);\n                faces.geometry.reactiveState = oldFaces.geometry.reactiveState;\n                faces.geometry.compConf = oldFaces.geometry.compConf;\n                nucletGroup.remove(oldFaces);\n                nucletGroup.add(faces);\n                viewer.render();\n              }\n              break;\n          }\n      }\n    };\n\n    /**\n     * Create the visibleProtons and hoverProtons lists.\n     */\n    function createProtonLists() {\n      hoverProtons = [];\n      visibleProtons = [];\n      var nuclets = viewer.atom.az().nuclets;\n      for (var id in nuclets) {\n        if (nuclets.hasOwnProperty(id)) {\n          var protons = nuclets[id].az.protons;\n          for (var p = 0; p < protons.length; p++) {\n            if (protons[p]) {\n              if (protons[p].az.active)  hoverProtons.push(protons[p]);\n              if (protons[p].az.visible)  visibleProtons.push(protons[p]);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Create the button or label for a grow point\n     *\n     * @param id\n     * @param nucletAttach\n     */\n    function createNucletAttachItem(id, nucletAttach) {\n      var label = nucletAttach.getElementsByTagName('LABEL')[0];\n      var div = nucletAttach.getElementsByTagName('DIV')[0];\n\n      label.innerHTML = id;\n\n      if (viewer.atom.az().nuclets[id]) {\n        div.innerHTML = viewer.atom.az().nuclets[id].az.state;\n      } else {\n        div.innerHTML = '';\n        var button = document.createElement('input');\n        button.setAttribute('type', 'button');\n        button.setAttribute('name', 'nuclet-add-' + id + '-button');\n        button.setAttribute('value', 'Add');\n        button.classList.add('nuclet-list-button');\n        button.id = 'nuclet-' + id;\n        button.addEventListener('click', onNucletAddButton);\n        nucletAttach.getElementsByTagName('DIV')[0].appendChild(button);\n      }\n    }\n\n    /**\n     * Carry out the selection of a new nuclet to edit.\n     *\n     * @param nuclet\n     */\n    function setEditNuclet(nuclet) {\n      var id = nuclet.az.id;\n      createNucletList(viewer.atom.atom);\n      $nucletFormBlock.insertAfter($nucletList.find('.nuclet-' + id));\n//    var nucletLabel = document.getElementById('nuclet--id');\n//    nucletLabel.innerHTML = '<span class=\"az-label\">Nuclet ID: </span><span class=\"az-id\"> ' + id + '</span>';\n      // Set the state of the nuclet\n      if (nuclet.az.conf.state != 'hydrogen' && nuclet.az.conf.state != 'helium') {\n        $('#nuclet--state--' + nuclet.az.conf.state).attr('checked', true);\n        nucletAngleSlider.value = nuclet.az.conf.attachAngle || 1;\n        nucletAngleValue.value = nuclet.az.conf.attachAngle || 1;\n      }\n\n      // Show/Hide the delete, angle and attach points\n      if (id == 'N0') {\n        nucletDelete.classList.add('az-hidden');\n        nucletAngle.classList.add('az-hidden');\n      } else {\n        nucletDelete.classList.remove('az-hidden');\n        nucletAngle.classList.remove('az-hidden');\n      }\n\n      if (nuclet.az.conf.state != 'initial' &&\n          nuclet.az.conf.state != 'final') {\n        $('#nuclet--grow-label').addClass('az-hidden');\n        $('#edit-nuclet-grow-0').addClass('az-hidden');\n        $('#edit-nuclet-grow-1').addClass('az-hidden');\n      }\n      else {\n        $('#nuclet--grow-label').removeClass('hidden');\n        $('#edit-nuclet-grow-0').removeClass('az-hidden');\n        $('#edit-nuclet-grow-1').removeClass('az-hidden');\n      }\n      createNucletAttachItem(id + '0', nucletAttach0);\n      createNucletAttachItem(id + '1', nucletAttach1);\n      editNuclet = nuclet;\n    }\n\n    /**\n     * Create a list of nuclets for the nuclet edit form.\n     */\n    function createNucletList(atom) {\n      /**\n       * Recursive function to extract a nuclets information.\n       *\n       * @param id\n       * @param spacing\n       * @returns {string}\n       */\n      function addNucletToList(id, shell) {\n        var nuclet = atom.az.nuclets[id];\n        var numProtons = 0;\n        var numNeutral = 0;\n        for (var p in nuclet.az.protons) {\n          var proton = nuclet.az.protons[p];\n          if (proton.az && proton.az.visible) {\n            if (proton.az.type == 'neutral') {\n              numNeutral++;\n            }\n            else {\n              numProtons++;\n            }\n          }\n        }\n        var out = '<div class=\"nuclet shell-' + shell + ' ' + nuclet.name + '\">' +\n          id + ' ' + nuclet.az.state +\n          ' - ' + numProtons;\n        if (numNeutral) {\n          out += ' - ' + numNeutral;\n        }\n        out += '</div>\\n';\n\n        // Recursively add the children nuclets.\n        var grow0 = atom.az.nuclets[id + '0'];\n        var grow1 = atom.az.nuclets[id + '1'];\n        if (grow0 || grow1) {\n          if (grow0) { out += addNucletToList(id + '0', shell + 1); }\n          if (grow1) { out += addNucletToList(id + '1', shell + 1); }\n        }\n        return out;\n      }\n\n      // Save the nuclet form before overwriting the list.\n      $nucletFormBlock.insertAfter($('#blocks--nuclet-list'));\n\n      $nucletList.html(addNucletToList('N0', 0));\n\n      $nucletButtons = $nucletList.find('.nuclet');\n      $nucletButtons.click(function(e) {\n        var nucletName = e.target.innerHTML.split(' ')[0];\n        var nuclet = viewer.atom.getNuclet(nucletName);\n        if ($nucletFormBlock.hasClass('az-hidden') || nuclet !== editNuclet) {\n          setEditNuclet(nuclet);\n          $nucletFormBlock.removeClass('az-hidden');\n        }\n        else {\n          $nucletFormBlock.addClass('az-hidden');\n        }\n      });\n    }\n\n    /**\n     * Set Default values for any forms.\n     */\n    function setDefaults() {\n      userAtomFile = localStorage.getItem('atomizer_builder_atom_nid');\n      if (userAtomFile && userAtomFile != 'undefined') {\n        var selectyml = $('#atom--selectyml', viewer.context)[0];\n        if (selectyml) {\n          select = selectyml.querySelector('select');\n          select.value = userAtomFile;\n        }\n      }\n    }\n\n    var atomLoaded = function atomLoaded(atom) {\n      localStorage.setItem('atomizer_builder_atom_nid', atom.az.nid);\n      createProtonLists();\n      if (viewer.objects.icosaFaces) {\n        hoverInnerFaces = viewer.objects.icosaFaces;\n      }\n      if (viewer.objects.icosaOutFaces) {\n        hoverOuterFaces = viewer.objects.icosaOutFaces;\n      }\n      createNucletList(atom);\n    };\n\n    /**\n     * Create the view - add any objects to scene.\n     */\n    var createView = function () {\n      viewer.nuclet = Drupal.atomizer.nucletC(viewer);\n      viewer.atom = Drupal.atomizer.atomC(viewer);\n\n      // Load and display the default atom\n      var userAtomNid = localStorage.getItem('atomizer_builder_atom_nid');\n      viewer.view.atom = viewer.atom.loadAtom((!userAtomNid || userAtomNid == 'undefined') ? 73 : userAtomNid);\n\n      // Create the ghost proton.  Displayed when hovering over attachment points.  Initially hidden\n      viewer.view.ghostProton = viewer.nuclet.makeProton({type: 'ghost'}, 1, {x: 300, y: 50, z: 0}, {state: 'default'});\n    };\n\n\n    /////////// Attach event listeners\n\n    // Add Event Listener to attachAngle slider\n    nucletAngleSlider.addEventListener('input', onAngleChanged);\n    nucletDelete.addEventListener('click', onNucletDelete);\n\n    // Add event listeners to the nuclet edit form state radio buttons\n    var $radios = $('#edit-nuclet-state .az-control-radios', viewer.context);\n    $radios.click(function (event) {\n      if (event.target.tagName == 'INPUT') {\n        editNuclet = viewer.atom.changeNucletState(editNuclet, event.target.value);\n        createProtonLists();\n        viewer.render();\n        setEditNuclet(editNuclet);\n      }\n      $(this).attr('id', $(this).attr('id') + '--' + $(this).val());\n    });\n\n    // Add event listeners to mode form\n    var $radios = $('#blocks--mouse-mode .az-control-radios', viewer.context);\n    $radios.click(function (event) {\n      if (event.target.tagName == 'INPUT') {\n        console.log('mode: ' + event.target.value);\n        mouseMode = event.target.value;\n        $(this).attr('id', $(this).id + '--' + $(this).val());\n        if ($(this).attr('checked') == 'checked') {\n          mouseMode = $(this).val();\n        }\n      }\n    });\n\n    return {\n      createView: createView,\n      setDefaults: setDefaults,\n      mouseClick: mouseClick,\n      hoverObjects: hoverObjects,\n      hovered: hovered,\n      atomLoaded: atomLoaded\n    };\n  };\n\n})(jQuery);\n"]}