THREE.BlendCharacter=function(){this.weightSchedule=[],this.warpSchedule=[],this.load=function(i,t){var e=this;(new THREE.ObjectLoader).load(i,function(n){if(n.traverse(function(i){i instanceof THREE.SkinnedMesh&&(e.skinnedMesh=i)}),THREE.SkinnedMesh.call(e,e.skinnedMesh.geometry,e.skinnedMesh.material),void 0!=e.skinnedMesh){e.material.skinning=!0,e.mixer=new THREE.AnimationMixer(e),e.mixer=e.mixer;for(var s=0;s<e.geometry.animations.length;++s)e.mixer.clipAction(e.geometry.animations[s]);void 0!==t&&t()}else console.log("unable to find skinned mesh in "+i)})},this.loadJSON=function(i,t){var e=this;(new THREE.JSONLoader).load(i,function(i,n){var s=n[0];s.skinning=!0,THREE.SkinnedMesh.call(e,i,s);var o=new THREE.AnimationMixer(e);e.mixer=o;for(var r=0;r<i.animations.length;++r)o.clipAction(i.animations[r]);void 0!==t&&t()})},this.update=function(i){this.mixer.update(i)},this.play=function(i,t){return this.mixer.clipAction(i).setEffectiveWeight(t).play()},this.crossfade=function(i,t,e){this.mixer.stopAllAction();var n=this.play(i,1),s=this.play(t,1);n.crossFadeTo(s,e,!1)},this.warp=function(i,t,e){this.mixer.stopAllAction();var n=this.play(i,1),s=this.play(t,1);n.crossFadeTo(s,e,!0)},this.applyWeight=function(i,t){this.mixer.clipAction(i).setEffectiveWeight(t)},this.getWeight=function(i){return this.mixer.clipAction(i).getEffectiveWeight()},this.pauseAll=function(){this.mixer.timeScale=0},this.unPauseAll=function(){this.mixer.timeScale=1},this.stopAll=function(){this.mixer.stopAllAction()},this.showModel=function(i){this.visible=i}},THREE.BlendCharacter.prototype=Object.create(THREE.SkinnedMesh.prototype),THREE.BlendCharacter.prototype.constructor=THREE.BlendCharacter,THREE.BlendCharacter.prototype.getForward=function(){var i=new THREE.Vector3;return function(){return i.set(-this.matrix.elements[8],-this.matrix.elements[9],-this.matrix.elements[10]),i}};
//# sourceMappingURL=../maps/threejs/BlendCharacter.js.map
