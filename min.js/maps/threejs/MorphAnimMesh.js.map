{"version":3,"sources":["threejs/MorphAnimMesh.js"],"names":["THREE","MorphAnimMesh","geometry","material","Mesh","call","this","type","mixer","AnimationMixer","activeAction","prototype","Object","create","constructor","setDirectionForward","timeScale","setDirectionBackward","playAnimation","label","fps","stop","clip","AnimationClip","findByName","Error","action","clipAction","tracks","length","duration","play","updateAnimation","delta","update","copy","source"],"mappings":"AAIAA,MAAMC,cAAgB,SAAWC,EAAUC,GAE1CH,MAAMI,KAAKC,KAAMC,KAAMJ,EAAUC,GAEjCG,KAAKC,KAAO,gBAEZD,KAAKE,MAAQ,IAAIR,MAAMS,eAAgBH,MACvCA,KAAKI,aAAe,MAGrBV,MAAMC,cAAcU,UAAYC,OAAOC,OAAQb,MAAMI,KAAKO,WAC1DX,MAAMC,cAAcU,UAAUG,YAAcd,MAAMC,cAElDD,MAAMC,cAAcU,UAAUI,oBAAsB,WAEnDT,KAAKE,MAAMQ,UAAY,GAIxBhB,MAAMC,cAAcU,UAAUM,qBAAuB,WAEpDX,KAAKE,MAAMQ,WAAa,GAIzBhB,MAAMC,cAAcU,UAAUO,cAAgB,SAAWC,EAAOC,GAE3Dd,KAAKI,eAERJ,KAAKI,aAAaW,OAClBf,KAAKI,aAAe,MAIrB,IAAIY,EAAOtB,MAAMuB,cAAcC,WAAYlB,KAAMa,GAEjD,IAAKG,EAQJ,MAAM,IAAIG,MAAO,mCAAqCN,EAAQ,mCAN9D,IAAIO,EAASpB,KAAKE,MAAMmB,WAAYL,GACpCI,EAAOV,UAAcM,EAAKM,OAAOC,OAAST,EAAQE,EAAKQ,SACvDxB,KAAKI,aAAegB,EAAOK,QAU7B/B,MAAMC,cAAcU,UAAUqB,gBAAkB,SAAWC,GAE1D3B,KAAKE,MAAM0B,OAAQD,IAIpBjC,MAAMC,cAAcU,UAAUwB,KAAO,SAAWC,GAM/C,OAJApC,MAAMI,KAAKO,UAAUwB,KAAK9B,KAAMC,KAAM8B,GAEtC9B,KAAKE,MAAQ,IAAIR,MAAMS,eAAgBH,MAEhCA","file":"../../threejs/MorphAnimMesh.js","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MorphAnimMesh = function ( geometry, material ) {\n\n\tTHREE.Mesh.call( this, geometry, material );\n\n\tthis.type = 'MorphAnimMesh';\n\n\tthis.mixer = new THREE.AnimationMixer( this );\n\tthis.activeAction = null;\n};\n\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\n\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\n\n\tthis.mixer.timeScale = 1.0;\n\n};\n\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\n\n\tthis.mixer.timeScale = -1.0;\n\n};\n\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\n\n\tif( this.activeAction ) {\n\n\t\tthis.activeAction.stop();\n\t\tthis.activeAction = null;\n\t\t\n\t}\n\n\tvar clip = THREE.AnimationClip.findByName( this, label );\n\n\tif ( clip ) {\n\n\t\tvar action = this.mixer.clipAction( clip );\n\t\taction.timeScale = ( clip.tracks.length * fps ) / clip.duration;\n\t\tthis.activeAction = action.play();\n\n\t} else {\n\n\t\tthrow new Error( 'THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()' );\n\n\t}\n\n};\n\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\n\n\tthis.mixer.update( delta );\n\n};\n\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\n\n\tTHREE.Mesh.prototype.copy.call( this, source );\n\n\tthis.mixer = new THREE.AnimationMixer( this );\n\n\treturn this;\n\n};\n"]}