{"version":3,"sources":["threejs/animation/MMDPhysics.js"],"names":["THREE","MMDPhysics","mesh","params","this","helper","PhysicsHelper","unitStep","maxStepNum","world","bodies","constraints","init","prototype","constructor","initWorld","initRigidBodies","initConstraints","reset","config","Ammo","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","cache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","btVector3","geometry","rigidBodies","i","length","b","RigidBody","push","bodyA","rigidBodyIndex1","bodyB","rigidBodyIndex2","c","Constraint","update","delta","stepTime","updateRigidBodies","stepSimulation","updateBones","updateFromBone","updateBone","warmup","cycles","threeVector3s","threeMatrix4s","threeQuaternions","transforms","quaternions","vector3s","allocThreeVector3","pop","Vector3","freeThreeVector3","v","allocThreeMatrix4","Matrix4","freeThreeMatrix4","m","allocThreeQuaternion","Quaternion","freeThreeQuaternion","q","allocTransform","btTransform","freeTransform","t","allocQuaternion","btQuaternion","freeQuaternion","allocVector3","freeVector3","setIdentity","getBasis","getRotation","getBasisAsMatrix3","quaternionToMatrix3","getOrigin","setOrigin","setValue","x","y","z","copyOrigin","t1","t2","o","setBasis","setRotation","setBasisFromMatrix3","matrix3ToQuaternion","setOriginFromArray3","a","setBasisFromArray3","setEulerZYX","setBasisFromArray4","array4ToQuaternion","setX","setY","setZ","setW","multiplyTransforms","m1","m2","o1","o2","v1","multiplyMatrix3ByVector3","v2","addVector3","m3","multiplyMatrices3","inverseTransform","transposeMatrix3","negativeVector3","v10","rowOfMatrix3","v11","v12","v20","columnOfMatrix3","v21","v22","dotVectors3","v4","v0","w","xx","yy","zz","xy","yz","zx","xw","yw","zw","s","Math","sqrt","body","bone","boneOffsetForm","boneOffsetFormInverse","bones","skeleton","boneIndex","Bone","shape","p","shapeType","btSphereShape","width","btBoxShape","height","depth","btCapsuleShape","generateShape","weight","type","localInertia","calculateLocalInertia","position","rotation","boneForm","getWorldPosition","toArray","form","state","btDefaultMotionState","info","btRigidBodyConstructionInfo","set_m_friction","friction","set_m_restitution","restriction","btRigidBody","setCollisionFlags","getCollisionFlags","setActivationState","setDamping","positionDamping","rotationDamping","setSleepingThresholds","addRigidBody","groupIndex","groupTarget","setTransformFromBone","setPositionFromBone","updateBoneRotation","updateBonePosition","updateMatrixWorld","getBoneTransform","getWorldQuaternion","tr","getWorldTransformForBone","getMotionState","getWorldTransform","tr2","setCenterOfMassTransform","setWorldTransform","thQ","thQ2","thQ3","set","setFromRotationMatrix","matrixWorld","conjugate","multiply","matrix","quaternion","copy","thV","worldToLocal","add","constraint","formA","formB","formInverseA","formInverseB","formA2","formB2","btGeneric6DofSpringConstraint","lll","lul","all","aul","translationLimitation1","translationLimitation2","rotationLimitation1","rotationLimitation2","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","springPosition","enableSpring","setStiffness","springRotation","addConstraint"],"mappings":"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","file":"../../../threejs/animation/MMDPhysics.js","sourcesContent":["/**\n * @author takahiro / https://github.com/takahirox\n *\n * Dependencies\n *  - Ammo.js https://github.com/kripken/ammo.js\n *\n *\n * MMD specific Physics class.\n *\n * See THREE.MMDLoader for the passed parameter list of RigidBody/Constraint.\n *\n *\n * TODO\n *  - use Physijs http://chandlerprall.github.io/Physijs/\n *    and improve the performance by making use of Web worker.\n *  - if possible, make this class being non-MMD specific.\n */\n\nTHREE.MMDPhysics = function ( mesh, params ) {\n\n\tthis.mesh = mesh;\n\tthis.helper = new THREE.MMDPhysics.PhysicsHelper();\n\n\t/*\n\t * Note: Default 1 / 65 unit step is a workaround that\n\t *       some bones go wrong at near 60fps if it's 1 / 60.\n\t *       Be careful that small unitStep could cause heavy\n\t *       physics calculation.\n\t */\n\tthis.unitStep = ( params && params.unitStep ) ? params.unitStep : 1 / 65;\n\tthis.maxStepNum = ( params && params.maxStepNum ) ? params.maxStepNum : 3;\n\n\tthis.world = null;\n\tthis.bodies = [];\n\tthis.constraints = [];\n\n\tthis.init();\n\n};\n\nTHREE.MMDPhysics.prototype = {\n\n\tconstructor: THREE.MMDPhysics,\n\n\tinit: function () {\n\n\t\tthis.initWorld();\n\t\tthis.initRigidBodies();\n\t\tthis.initConstraints();\n\t\tthis.reset();\n\n\t},\n\n\tinitWorld: function () {\n\n\t\tvar config = new Ammo.btDefaultCollisionConfiguration();\n\t\tvar dispatcher = new Ammo.btCollisionDispatcher( config );\n\t\tvar cache = new Ammo.btDbvtBroadphase();\n\t\tvar solver = new Ammo.btSequentialImpulseConstraintSolver();\n\t\tvar world = new Ammo.btDiscreteDynamicsWorld( dispatcher, cache, solver, config );\n\t\tworld.setGravity( new Ammo.btVector3( 0, -10 * 10, 0 ) );\n\t\tthis.world = world;\n\n\t},\n\n\tinitRigidBodies: function () {\n\n\t\tvar bodies = this.mesh.geometry.rigidBodies;\n\n\t\tfor ( var i = 0; i < bodies.length; i++ ) {\n\n\t\t\tvar b = new THREE.MMDPhysics.RigidBody( this.mesh, this.world, bodies[ i ], this.helper );\n\t\t\tthis.bodies.push( b );\n\n\t\t}\n\n\t},\n\n\tinitConstraints: function () {\n\n\t\tvar constraints = this.mesh.geometry.constraints;\n\n\t\tfor ( var i = 0; i < constraints.length; i++ ) {\n\n\t\t\tvar params = constraints[ i ];\n\t\t\tvar bodyA = this.bodies[ params.rigidBodyIndex1 ];\n\t\t\tvar bodyB = this.bodies[ params.rigidBodyIndex2 ];\n\t\t\tvar c = new THREE.MMDPhysics.Constraint( this.mesh, this.world, bodyA, bodyB, params, this.helper );\n\t\t\tthis.constraints.push( c );\n\n\t\t}\n\n\n\t},\n\n\tupdate: function ( delta ) {\n\n\t\tvar unitStep = this.unitStep;\n\t\tvar stepTime = delta;\n\t\tvar maxStepNum = ( ( delta / unitStep ) | 0 ) + 1;\n\n\t\tif ( maxStepNum > this.maxStepNum ) {\n\n\t\t\tmaxStepNum = this.maxStepNum;\n\n\t\t}\n\n\t\tthis.updateRigidBodies();\n\t\tthis.world.stepSimulation( stepTime, maxStepNum, unitStep );\n\t\tthis.updateBones();\n\n\t},\n\n\tupdateRigidBodies: function () {\n\n\t\tfor ( var i = 0; i < this.bodies.length; i++ ) {\n\n\t\t\tthis.bodies[ i ].updateFromBone();\n\n\t\t}\n\n\t},\n\n\tupdateBones: function () {\n\n\t\tfor ( var i = 0; i < this.bodies.length; i++ ) {\n\n\t\t\tthis.bodies[ i ].updateBone();\n\n\t\t}\n\n\t},\n\n\treset: function () {\n\n\t\tfor ( var i = 0; i < this.bodies.length; i++ ) {\n\n\t\t\tthis.bodies[ i ].reset();\n\n\t\t}\n\n\t},\n\n\twarmup: function ( cycles ) {\n\n\t\tfor ( var i = 0; i < cycles; i++ ) {\n\n\t\t\tthis.update( 1 );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * This helper class responsibilies are\n *\n * 1. manage Ammo.js and Three.js object resources and\n *    improve the performance and the memory consumption by\n *    reusing objects.\n *\n * 2. provide simple Ammo object operations.\n */\nTHREE.MMDPhysics.PhysicsHelper = function () {\n\n\t// for Three.js\n\tthis.threeVector3s = [];\n\tthis.threeMatrix4s = [];\n\tthis.threeQuaternions = [];\n\n\t// for Ammo.js\n\tthis.transforms = [];\n\tthis.quaternions = [];\n\tthis.vector3s = [];\n\n};\n\nTHREE.MMDPhysics.PhysicsHelper.prototype = {\n\n\tallocThreeVector3: function () {\n\n\t\treturn ( this.threeVector3s.length > 0 ) ? this.threeVector3s.pop() : new THREE.Vector3();\n\n\t},\n\n\tfreeThreeVector3: function ( v ) {\n\n\t\tthis.threeVector3s.push( v );\n\n\t},\n\n\tallocThreeMatrix4: function () {\n\n\t\treturn ( this.threeMatrix4s.length > 0 ) ? this.threeMatrix4s.pop() : new THREE.Matrix4();\n\n\t},\n\n\tfreeThreeMatrix4: function ( m ) {\n\n\t\tthis.threeMatrix4s.push( m );\n\n\t},\n\n\tallocThreeQuaternion: function () {\n\n\t\treturn ( this.threeQuaternions.length > 0 ) ? this.threeQuaternions.pop() : new THREE.Quaternion();\n\n\t},\n\n\tfreeThreeQuaternion: function ( q ) {\n\n\t\tthis.threeQuaternions.push( q );\n\n\t},\n\n\tallocTransform: function () {\n\n\t\treturn ( this.transforms.length > 0 ) ? this.transforms.pop() : new Ammo.btTransform();\n\n\t},\n\n\tfreeTransform: function ( t ) {\n\n\t\tthis.transforms.push( t );\n\n\t},\n\n\tallocQuaternion: function () {\n\n\t\treturn ( this.quaternions.length > 0 ) ? this.quaternions.pop() : new Ammo.btQuaternion();\n\n\t},\n\n\tfreeQuaternion: function ( q ) {\n\n\t\tthis.quaternions.push( q );\n\n\t},\n\n\tallocVector3: function () {\n\n\t\treturn ( this.vector3s.length > 0 ) ? this.vector3s.pop() : new Ammo.btVector3();\n\n\t},\n\n\tfreeVector3: function ( v ) {\n\n\t\tthis.vector3s.push( v );\n\n\t},\n\n\tsetIdentity: function ( t ) {\n\n\t\tt.setIdentity();\n\n\t},\n\n\tgetBasis: function ( t ) {\n\n\t\tvar q = this.allocQuaternion();\n\t\tt.getBasis().getRotation( q );\n\t\treturn q;\n\n\t},\n\n\tgetBasisAsMatrix3: function ( t ) {\n\n\t\tvar q = this.getBasis( t );\n\t\tvar m = this.quaternionToMatrix3( q );\n\t\tthis.freeQuaternion( q );\n\t\treturn m;\n\n\t},\n\n\tgetOrigin: function( t ) {\n\n\t\treturn t.getOrigin();\n\n\t},\n\n\tsetOrigin: function( t, v ) {\n\n\t\tt.getOrigin().setValue( v.x(), v.y(), v.z() );\n\n\t},\n\n\tcopyOrigin: function( t1, t2 ) {\n\n\t\tvar o = t2.getOrigin();\n\t\tthis.setOrigin( t1, o );\n\n\t},\n\n\tsetBasis: function( t, q ) {\n\n\t\tt.setRotation( q );\n\n\t},\n\n\tsetBasisFromMatrix3: function( t, m ) {\n\n\t\tvar q = this.matrix3ToQuaternion( m );\n\t\tthis.setBasis( t, q );\n\t\tthis.freeQuaternion( q );\n\n\t},\n\n\tsetOriginFromArray3: function ( t, a ) {\n\n\t\tt.getOrigin().setValue( a[ 0 ], a[ 1 ], a[ 2 ] );\n\n\t},\n\n\tsetBasisFromArray3: function ( t, a ) {\n\n\t\tt.getBasis().setEulerZYX( a[ 0 ], a[ 1 ], a[ 2 ] );\n\n\t},\n\n\tsetBasisFromArray4: function ( t, a ) {\n\n\t\tvar q = this.array4ToQuaternion( a );\n\t\tthis.setBasis( t, q );\n\t\tthis.freeQuaternion( q );\n\n\t},\n\n\tarray4ToQuaternion: function( a ) {\n\n\t\tvar q = this.allocQuaternion();\n\t\tq.setX( a[ 0 ] );\n\t\tq.setY( a[ 1 ] );\n\t\tq.setZ( a[ 2 ] );\n\t\tq.setW( a[ 3 ] );\n\t\treturn q;\n\n\t},\n\n\tmultiplyTransforms: function ( t1, t2 ) {\n\n\t\tvar t = this.allocTransform();\n\t\tthis.setIdentity( t );\n\n\t\tvar m1 = this.getBasisAsMatrix3( t1 );\n\t\tvar m2 = this.getBasisAsMatrix3( t2 );\n\n\t\tvar o1 = this.getOrigin( t1 );\n\t\tvar o2 = this.getOrigin( t2 );\n\n\t\tvar v1 = this.multiplyMatrix3ByVector3( m1, o2 );\n\t\tvar v2 = this.addVector3( v1, o1 );\n\t\tthis.setOrigin( t, v2 );\n\n\t\tvar m3 = this.multiplyMatrices3( m1, m2 );\n\t\tthis.setBasisFromMatrix3( t, m3 );\n\n\t\tthis.freeVector3( v1 );\n\t\tthis.freeVector3( v2 );\n\n\t\treturn t;\n\n\t},\n\n\tinverseTransform: function ( t ) {\n\n\t\tvar t2 = this.allocTransform();\n\n\t\tvar m1 = this.getBasisAsMatrix3( t );\n\t\tvar o = this.getOrigin( t );\n\n\t\tvar m2 = this.transposeMatrix3( m1 );\n\t\tvar v1 = this.negativeVector3( o );\n\t\tvar v2 = this.multiplyMatrix3ByVector3( m2, v1 );\n\n\t\tthis.setOrigin( t2, v2 );\n\t\tthis.setBasisFromMatrix3( t2, m2 );\n\n\t\tthis.freeVector3( v1 );\n\t\tthis.freeVector3( v2 );\n\n\t\treturn t2;\n\n\t},\n\n\tmultiplyMatrices3: function ( m1, m2 ) {\n\n\t\tvar m3 = [];\n\n\t\tvar v10 = this.rowOfMatrix3( m1, 0 );\n\t\tvar v11 = this.rowOfMatrix3( m1, 1 );\n\t\tvar v12 = this.rowOfMatrix3( m1, 2 );\n\n\t\tvar v20 = this.columnOfMatrix3( m2, 0 );\n\t\tvar v21 = this.columnOfMatrix3( m2, 1 );\n\t\tvar v22 = this.columnOfMatrix3( m2, 2 );\n\n\t\tm3[ 0 ] = this.dotVectors3( v10, v20 );\n\t\tm3[ 1 ] = this.dotVectors3( v10, v21 );\n\t\tm3[ 2 ] = this.dotVectors3( v10, v22 );\n\t\tm3[ 3 ] = this.dotVectors3( v11, v20 );\n\t\tm3[ 4 ] = this.dotVectors3( v11, v21 );\n\t\tm3[ 5 ] = this.dotVectors3( v11, v22 );\n\t\tm3[ 6 ] = this.dotVectors3( v12, v20 );\n\t\tm3[ 7 ] = this.dotVectors3( v12, v21 );\n\t\tm3[ 8 ] = this.dotVectors3( v12, v22 );\n\n\t\tthis.freeVector3( v10 );\n\t\tthis.freeVector3( v11 );\n\t\tthis.freeVector3( v12 );\n\t\tthis.freeVector3( v20 );\n\t\tthis.freeVector3( v21 );\n\t\tthis.freeVector3( v22 );\n\n\t\treturn m3;\n\n\t},\n\n\taddVector3: function( v1, v2 ) {\n\n\t\tvar v = this.allocVector3();\n\t\tv.setValue( v1.x() + v2.x(), v1.y() + v2.y(), v1.z() + v2.z() );\n\t\treturn v;\n\n\t},\n\n\tdotVectors3: function( v1, v2 ) {\n\n\t\treturn v1.x() * v2.x() + v1.y() * v2.y() + v1.z() * v2.z();\n\n\t},\n\n\trowOfMatrix3: function( m, i ) {\n\n\t\tvar v = this.allocVector3();\n\t\tv.setValue( m[ i * 3 + 0 ], m[ i * 3 + 1 ], m[ i * 3 + 2 ] );\n\t\treturn v;\n\n\t},\n\n\tcolumnOfMatrix3: function( m, i ) {\n\n\t\tvar v = this.allocVector3();\n\t\tv.setValue( m[ i + 0 ], m[ i + 3 ], m[ i + 6 ] );\n\t\treturn v;\n\n\t},\n\n\tnegativeVector3: function( v ) {\n\n\t\tvar v2 = this.allocVector3();\n\t\tv2.setValue( -v.x(), -v.y(), -v.z() );\n\t\treturn v2;\n\n\t},\n\n\tmultiplyMatrix3ByVector3: function ( m, v ) {\n\n\t\tvar v4 = this.allocVector3();\n\n\t\tvar v0 = this.rowOfMatrix3( m, 0 );\n\t\tvar v1 = this.rowOfMatrix3( m, 1 );\n\t\tvar v2 = this.rowOfMatrix3( m, 2 );\n\t\tvar x = this.dotVectors3( v0, v );\n\t\tvar y = this.dotVectors3( v1, v );\n\t\tvar z = this.dotVectors3( v2, v );\n\n\t\tv4.setValue( x, y, z );\n\n\t\tthis.freeVector3( v0 );\n\t\tthis.freeVector3( v1 );\n\t\tthis.freeVector3( v2 );\n\n\t\treturn v4;\n\n\t},\n\n\ttransposeMatrix3: function( m ) {\n\n\t\tvar m2 = [];\n\t\tm2[ 0 ] = m[ 0 ];\n\t\tm2[ 1 ] = m[ 3 ];\n\t\tm2[ 2 ] = m[ 6 ];\n\t\tm2[ 3 ] = m[ 1 ];\n\t\tm2[ 4 ] = m[ 4 ];\n\t\tm2[ 5 ] = m[ 7 ];\n\t\tm2[ 6 ] = m[ 2 ];\n\t\tm2[ 7 ] = m[ 5 ];\n\t\tm2[ 8 ] = m[ 8 ];\n\t\treturn m2;\n\n\t},\n\n\tquaternionToMatrix3: function ( q ) {\n\n\t\tvar m = [];\n\n\t\tvar x = q.x();\n\t\tvar y = q.y();\n\t\tvar z = q.z();\n\t\tvar w = q.w();\n\n\t\tvar xx = x * x;\n\t\tvar yy = y * y;\n\t\tvar zz = z * z;\n\n\t\tvar xy = x * y;\n\t\tvar yz = y * z;\n\t\tvar zx = z * x;\n\n\t\tvar xw = x * w;\n\t\tvar yw = y * w;\n\t\tvar zw = z * w;\n\n\t\tm[ 0 ] = 1 - 2 * ( yy + zz );\n\t\tm[ 1 ] = 2 * ( xy - zw );\n\t\tm[ 2 ] = 2 * ( zx + yw );\n\t\tm[ 3 ] = 2 * ( xy + zw );\n\t\tm[ 4 ] = 1 - 2 * ( zz + xx );\n\t\tm[ 5 ] = 2 * ( yz - xw );\n\t\tm[ 6 ] = 2 * ( zx - yw );\n\t\tm[ 7 ] = 2 * ( yz + xw );\n\t\tm[ 8 ] = 1 - 2 * ( xx + yy );\n\n\t\treturn m;\n\n\t},\n\n\tmatrix3ToQuaternion: function( m ) {\n\n\t\tvar t = m[ 0 ] + m[ 4 ] + m[ 8 ];\n\t\tvar s, x, y, z, w;\n\n\t\tif( t > 0 ) {\n\n\t\t\ts = Math.sqrt( t + 1.0 ) * 2;\n\t\t\tw = 0.25 * s;\n\t\t\tx = ( m[ 7 ] - m[ 5 ] ) / s;\n\t\t\ty = ( m[ 2 ] - m[ 6 ] ) / s; \n\t\t\tz = ( m[ 3 ] - m[ 1 ] ) / s; \n\n\t\t} else if( ( m[ 0 ] > m[ 4 ] ) && ( m[ 0 ] > m[ 8 ] ) ) {\n\n\t\t\ts = Math.sqrt( 1.0 + m[ 0 ] - m[ 4 ] - m[ 8 ] ) * 2;\n\t\t\tw = ( m[ 7 ] - m[ 5 ] ) / s;\n\t\t\tx = 0.25 * s;\n\t\t\ty = ( m[ 1 ] + m[ 3 ] ) / s;\n\t\t\tz = ( m[ 2 ] + m[ 6 ] ) / s;\n\n\t\t} else if( m[ 4 ] > m[ 8 ] ) {\n\n\t\t\ts = Math.sqrt( 1.0 + m[ 4 ] - m[ 0 ] - m[ 8 ] ) * 2;\n\t\t\tw = ( m[ 2 ] - m[ 6 ] ) / s;\n\t\t\tx = ( m[ 1 ] + m[ 3 ] ) / s;\n\t\t\ty = 0.25 * s;\n\t\t\tz = ( m[ 5 ] + m[ 7 ] ) / s;\n\n\t\t} else {\n\n\t\t\ts = Math.sqrt( 1.0 + m[ 8 ] - m[ 0 ] - m[ 4 ] ) * 2;\n\t\t\tw = ( m[ 3 ] - m[ 1 ] ) / s;\n\t\t\tx = ( m[ 2 ] + m[ 6 ] ) / s;\n\t\t\ty = ( m[ 5 ] + m[ 7 ] ) / s;\n\t\t\tz = 0.25 * s;\n\n\t\t}\n\n\t\tvar q = this.allocQuaternion();\n\t\tq.setX( x );\n\t\tq.setY( y );\n\t\tq.setZ( z );\n\t\tq.setW( w );\n\t\treturn q;\n\n\t},\n\n};\n\nTHREE.MMDPhysics.RigidBody = function ( mesh, world, params, helper ) {\n\n\tthis.mesh  = mesh;\n\tthis.world = world;\n\tthis.params = params;\n\tthis.helper = helper;\n\n\tthis.body = null;\n\tthis.bone = null;\n\tthis.boneOffsetForm = null;\n\tthis.boneOffsetFormInverse = null;\n\n\tthis.init();\n\n};\n\nTHREE.MMDPhysics.RigidBody.prototype = {\n\n\tconstructor: THREE.MMDPhysics.RigidBody,\n\n\tinit: function () {\n\n\t\tfunction generateShape ( p ) {\n\n\t\t\tswitch( p.shapeType ) {\n\n\t\t\t\tcase 0:\n\t\t\t\t\treturn new Ammo.btSphereShape( p.width );\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn new Ammo.btBoxShape( new Ammo.btVector3( p.width, p.height, p.depth ) );\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn new Ammo.btCapsuleShape( p.width, p.height );\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow 'unknown shape type ' + p.shapeType;\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar helper = this.helper;\n\t\tvar params = this.params;\n\t\tvar bones = this.mesh.skeleton.bones;\n\t\tvar bone = ( params.boneIndex === -1 ) ? new THREE.Bone() : bones[ params.boneIndex ];\n\n\t\tvar shape = generateShape( params );\n\t\tvar weight = ( params.type === 0 ) ? 0 : params.weight;\n\t\tvar localInertia = helper.allocVector3();\n\t\tlocalInertia.setValue( 0, 0, 0 );\n\n\t\tif( weight !== 0 ) {\n\n\t\t\tshape.calculateLocalInertia( weight, localInertia );\n\n\t\t}\n\n\t\tvar boneOffsetForm = helper.allocTransform();\n\t\thelper.setIdentity( boneOffsetForm );\n\t\thelper.setOriginFromArray3( boneOffsetForm, params.position );\n\t\thelper.setBasisFromArray3( boneOffsetForm, params.rotation );\n\n\t\tvar boneForm = helper.allocTransform();\n\t\thelper.setIdentity( boneForm );\n\t\thelper.setOriginFromArray3( boneForm, bone.getWorldPosition().toArray() );\n\n\t\tvar form = helper.multiplyTransforms( boneForm, boneOffsetForm );\n\t\tvar state = new Ammo.btDefaultMotionState( form );\n\n\t\tvar info = new Ammo.btRigidBodyConstructionInfo( weight, state, shape, localInertia );\n\t\tinfo.set_m_friction( params.friction );\n\t\tinfo.set_m_restitution( params.restriction );\n\n\t\tvar body = new Ammo.btRigidBody( info );\n\n\t\tif ( params.type === 0 ) {\n\n\t\t\tbody.setCollisionFlags( body.getCollisionFlags() | 2 );\n\t\t\tbody.setActivationState( 4 );\n\n\t\t}\n\n\t\tbody.setDamping( params.positionDamping, params.rotationDamping );\n\t\tbody.setSleepingThresholds( 0, 0 );\n\n\t\tthis.world.addRigidBody( body, 1 << params.groupIndex, params.groupTarget );\n\n\t\tthis.body = body;\n\t\tthis.bone = bone;\n\t\tthis.boneOffsetForm = boneOffsetForm;\n\t\tthis.boneOffsetFormInverse = helper.inverseTransform( boneOffsetForm );\n\n\t\thelper.freeVector3( localInertia );\n\t\thelper.freeTransform( form );\n\t\thelper.freeTransform( boneForm );\n\n\t},\n\n\treset: function () {\n\n\t\tthis.setTransformFromBone();\n\n\t},\n\n\tupdateFromBone: function () {\n\n\t\tif ( this.params.boneIndex === -1 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.params.type === 0 ) {\n\n\t\t\tthis.setTransformFromBone();\n\n\t\t}\n\n\t\tif ( this.params.type === 2 ) {\n\n\t\t\tthis.setPositionFromBone();\n\n\t\t}\n\n\t},\n\n\tupdateBone: function () {\n\n\t\tif ( this.params.type === 0 || this.params.boneIndex === -1 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.updateBoneRotation();\n\n\t\tif ( this.params.type === 1 ) {\n\n\t\t\tthis.updateBonePosition();\n\n\t\t}\n\n\t\tthis.bone.updateMatrixWorld( true );\n\n\t},\n\n\tgetBoneTransform: function () {\n\n\t\tvar helper = this.helper;\n\t\tvar p = this.bone.getWorldPosition();\n\t\tvar q = this.bone.getWorldQuaternion();\n\n\t\tvar tr = helper.allocTransform();\n\t\thelper.setOriginFromArray3( tr, p.toArray() );\n\t\thelper.setBasisFromArray4( tr, q.toArray() );\n\n\t\tvar form = helper.multiplyTransforms( tr, this.boneOffsetForm );\n\n\t\thelper.freeTransform( tr );\n\n\t\treturn form;\n\n\t},\n\n\tgetWorldTransformForBone: function () {\n\n\t\tvar helper = this.helper;\n\n\t\tvar tr = helper.allocTransform();\n\t\tthis.body.getMotionState().getWorldTransform( tr );\n\t\tvar tr2 = helper.multiplyTransforms( tr, this.boneOffsetFormInverse );\n\n\t\thelper.freeTransform( tr );\n\n\t\treturn tr2;\n\n\t},\n\n\tsetTransformFromBone: function () {\n\n\t\tvar helper = this.helper;\n\t\tvar form = this.getBoneTransform();\n\n\t\t// TODO: check the most appropriate way to set\n\t\t//this.body.setWorldTransform( form );\n\t\tthis.body.setCenterOfMassTransform( form );\n\t\tthis.body.getMotionState().setWorldTransform( form );\n\n\t\thelper.freeTransform( form );\n\n\t},\n\n\tsetPositionFromBone: function () {\n\n\t\tvar helper = this.helper;\n\t\tvar form = this.getBoneTransform();\n\n\t\tvar tr = helper.allocTransform();\n\t\tthis.body.getMotionState().getWorldTransform( tr );\n\t\thelper.copyOrigin( tr, form );\n\n\t\t// TODO: check the most appropriate way to set\n\t\t//this.body.setWorldTransform( tr );\n\t\tthis.body.setCenterOfMassTransform( tr );\n\t\tthis.body.getMotionState().setWorldTransform( tr );\n\n\t\thelper.freeTransform( tr );\n\t\thelper.freeTransform( form );\n\n\t},\n\n\tupdateBoneRotation: function () {\n\n\t\tthis.bone.updateMatrixWorld( true );\n\n\t\tvar helper = this.helper;\n\n\t\tvar tr = this.getWorldTransformForBone();\n\t\tvar q = helper.getBasis( tr );\n\n\t\tvar thQ = helper.allocThreeQuaternion();\n\t\tvar thQ2 = helper.allocThreeQuaternion();\n\t\tvar thQ3 = helper.allocThreeQuaternion();\n\n\t\tthQ.set( q.x(), q.y(), q.z(), q.w() );\n\t\tthQ2.setFromRotationMatrix( this.bone.matrixWorld );\n\t\tthQ2.conjugate()\n\t\tthQ2.multiply( thQ );\n\n\t\t//this.bone.quaternion.multiply( thQ2 );\n\n\t\tthQ3.setFromRotationMatrix( this.bone.matrix );\n\t\tthis.bone.quaternion.copy( thQ2.multiply( thQ3 ) );\n\n\t\thelper.freeThreeQuaternion( thQ );\n\t\thelper.freeThreeQuaternion( thQ2 );\n\t\thelper.freeThreeQuaternion( thQ3 );\n\n\t\thelper.freeQuaternion( q );\n\t\thelper.freeTransform( tr );\n\n\t},\n\n\tupdateBonePosition: function () {\n\n\t\tvar helper = this.helper;\n\n\t\tvar tr = this.getWorldTransformForBone();\n\n\t\tvar thV = helper.allocThreeVector3();\n\n\t\tvar o = helper.getOrigin( tr );\n\t\tthV.set( o.x(), o.y(), o.z() );\n\n\t\tvar v = this.bone.worldToLocal( thV );\n\t\tthis.bone.position.add( v );\n\n\t\thelper.freeThreeVector3( thV );\n\n\t\thelper.freeTransform( tr );\n\n\t}\n\n};\n\nTHREE.MMDPhysics.Constraint = function ( mesh, world, bodyA, bodyB, params, helper ) {\n\n\tthis.mesh  = mesh;\n\tthis.world = world;\n\tthis.bodyA = bodyA;\n\tthis.bodyB = bodyB;\n\tthis.params = params;\n\tthis.helper = helper;\n\n\tthis.constraint = null;\n\n\tthis.init();\n\n};\n\nTHREE.MMDPhysics.Constraint.prototype = {\n\n\tconstructor: THREE.MMDPhysics.Constraint,\n\n\tinit: function () {\n\n\t\tvar helper = this.helper;\n\t\tvar params = this.params;\n\t\tvar bodyA = this.bodyA;\n\t\tvar bodyB = this.bodyB;\n\n\t\tvar form = helper.allocTransform();\n\t\thelper.setIdentity( form );\n\t\thelper.setOriginFromArray3( form, params.position );\n\t\thelper.setBasisFromArray3( form, params.rotation );\n\n\t\tvar formA = helper.allocTransform();\n\t\tvar formB = helper.allocTransform();\n\n\t\tbodyA.body.getMotionState().getWorldTransform( formA );\n\t\tbodyB.body.getMotionState().getWorldTransform( formB );\n\n\t\tvar formInverseA = helper.inverseTransform( formA );\n\t\tvar formInverseB = helper.inverseTransform( formB );\n\n\t\tvar formA2 = helper.multiplyTransforms( formInverseA, form );\n\t\tvar formB2 = helper.multiplyTransforms( formInverseB, form );\n\n\t\tvar constraint = new Ammo.btGeneric6DofSpringConstraint( bodyA.body, bodyB.body, formA2, formB2, true );\n\n\t\tvar lll = helper.allocVector3();\n\t\tvar lul = helper.allocVector3();\n\t\tvar all = helper.allocVector3();\n\t\tvar aul = helper.allocVector3();\n\n\t\tlll.setValue( params.translationLimitation1[ 0 ],\n\t\t              params.translationLimitation1[ 1 ],\n\t\t              params.translationLimitation1[ 2 ] );\n\t\tlul.setValue( params.translationLimitation2[ 0 ],\n\t\t              params.translationLimitation2[ 1 ],\n\t\t              params.translationLimitation2[ 2 ] );\n\t\tall.setValue( params.rotationLimitation1[ 0 ],\n\t\t              params.rotationLimitation1[ 1 ],\n\t\t              params.rotationLimitation1[ 2 ] );\n\t\taul.setValue( params.rotationLimitation2[ 0 ],\n\t\t              params.rotationLimitation2[ 1 ],\n\t\t              params.rotationLimitation2[ 2 ] );\n\n\t\tconstraint.setLinearLowerLimit( lll );\n\t\tconstraint.setLinearUpperLimit( lul );\n\t\tconstraint.setAngularLowerLimit( all );\n\t\tconstraint.setAngularUpperLimit( aul );\n\n\t\tfor ( var i = 0; i < 3; i++ ) {\n\n\t\t\tif( params.springPosition[ i ] !== 0 ) {\n\n\t\t\t\tconstraint.enableSpring( i, true );\n\t\t\t\tconstraint.setStiffness( i, params.springPosition[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < 3; i++ ) {\n\n\t\t\tif( params.springRotation[ i ] !== 0 ) {\n\n\t\t\t\tconstraint.enableSpring( i + 3, true );\n\t\t\t\tconstraint.setStiffness( i + 3, params.springRotation[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.world.addConstraint( constraint, true );\n\t\tthis.constraint = constraint;\n\n\t\thelper.freeTransform( form );\n\t\thelper.freeTransform( formA );\n\t\thelper.freeTransform( formB );\n\t\thelper.freeTransform( formInverseA );\n\t\thelper.freeTransform( formInverseB );\n\t\thelper.freeTransform( formA2 );\n\t\thelper.freeTransform( formB2 );\n\t\thelper.freeVector3( lll );\n\t\thelper.freeVector3( lul );\n\t\thelper.freeVector3( all );\n\t\thelper.freeVector3( aul );\n\n\t}\n\n};\n"]}