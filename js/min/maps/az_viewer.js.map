{"version":3,"sources":["az_viewer.js"],"names":["$","Drupal","atomizer","producers","viewerC","makeSpotLight","name","v","spotLight","THREE","SpotLight","c","position","set","x","y","z","castShadow","getDataAttr","canvasContainer","attr","el","parentElement","classList","contains","attributes","pairs","value","split","pair","hasOwnProperty","pieces","ambient","spotlights","viewer","objects","context","atomizerId","toLowerCase","fullScreen","render","renderer","scene","camera","makeScene","containerId","replace","dataAttr","canvas","getElementsByTagName","canvasWidth","clientWidth","canvasRatio","canvasHeight","windowRatio","window","innerHeight","innerWidth","height","producer","view","Scene","controls","controlsC","parameters","antialias","WebGLRenderer","setClearColor","theme","get","setSize","shadowEnabled","appendChild","domElement","addEventListener","width","setViewport","aspect","updateProjectionMatrix","PerspectiveCamera","zoom","lookAt","init","AmbientLight","add","i","nuclet","nucletC","shapes","shapesC","sprites","spritesC","animation","animationC","makeObject","lambert","color","opacity","transparent","depth","rotation","Math","PI","createView","hover","scrollX","scrollY","this","focus","scrollTo","blur","keyup","event","keyCode","screenfull","toggle","addClass","removeClass","preventDefault","dblclick","exit","behaviors","atomizer_viewer","attach","settings","each","$dialog","hasClass","buttonClicked","target","id","request","views","defaultView","themeC","jQuery"],"mappings":"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","file":"../az_viewer.js","sourcesContent":["/**\n * @file - az_viewer.js\n *\n */\n\n\n// Initialize namespace for viewer classes in js/producers directory\n\n(function ($) {\n\n  Drupal.atomizer.producers = {};\n\n  Drupal.atomizer.viewerC = function (atomizer) {\n\n    var ambient;\n    var spotlights = [];\n    var viewer = {\n      objects: {},\n      context: $('#az-id-' + atomizer.atomizerId.toLowerCase())\n    };\n    var fullScreen = false;\n\n//Physijs.scripts.worker = '/modules/custom/atomizer/js/physijs/physijs_worker.js';\n//Physijs.scripts.ammo =   '/modules/custom/atomizer/js/libs/ammo.js';\n\n    var render = function render () {\n//    viewer.scene.simulate();\n      viewer.renderer.render(viewer.scene, viewer.camera);\n    };\n\n    /**\n     * Create a spotlight.\n     *\n     * @param v\n     * @returns {THREE.SpotLight}\n     */\n    function makeSpotLight(name, v) {\n      var spotLight = new THREE.SpotLight(v.c);\n      spotLight.position.set(v.x || -40, v.y || 60, v.z || -10);\n      spotLight.castShadow = true;\n      spotLight.name = name;\n      return spotLight;\n    }\n\n    /**\n     * Search backward up the parent chain and extract an data-az attributes.\n     *\n     * @param canvasContainer\n     */\n    function getDataAttr(canvasContainer) {\n      var attr = {};\n      // Look for a parent with class 'az-atomizer'\n      var el = canvasContainer;\n      while ((el = el.parentElement) && !el.classList.contains('az-view-mode-atomizer'));\n      if (el && el.attributes['data-az']) {\n        var value = el.attributes['data-az'].value;\n        var pairs = value.split(' ');\n        for (var pair in pairs) {\n          if (!pairs.hasOwnProperty(pair)) continue;\n          var pieces = pairs[pair].split('-');\n          attr[pieces[0]] = pieces[1];\n        }\n      }\n      return attr;\n    }\n\n    var makeScene = function () {\n\n      // Canvas size is set through CSS.\n      // Retrieve canvas dimensions and set renderer size to that.\n\n      var containerId = viewer.atomizer.atomizerId.replace(/[ _]/g, '-').toLowerCase() + '-canvas-wrapper';\n      viewer.canvasContainer = $('#' + containerId)[0];\n      viewer.dataAttr = getDataAttr(viewer.canvasContainer);\n      viewer.canvas = viewer.canvasContainer.getElementsByTagName('canvas')[0];\n      viewer.canvasWidth = viewer.canvasContainer.clientWidth;\n      if (!viewer.atomizer.canvasRatio || viewer.atomizer.canvasRatio === 'window') {\n        var windowRatio = window.innerHeight / window.innerWidth;\n        viewer.canvasHeight = viewer.canvasWidth * windowRatio;\n      } else {\n        viewer.canvasHeight = viewer.canvasWidth * viewer.atomizer.canvasRatio;\n      }\n      viewer.canvas.height = viewer.canvasHeight;\n\n      // Create the producer.\n      viewer.producer = Drupal.atomizer.producers[viewer.view.producer + 'C'](viewer);\n\n      // Create and position the scene\n      viewer.scene = new THREE.Scene();\n//    viewer.scene = new Physijs.Scene();\n      viewer.scene.position.set(0,0,0);\n\n      // Make controls\n      viewer.controls = Drupal.atomizer.controlsC(viewer);\n\n      // Create the renderer\n      var parameters = {\n        antialias: true,\n        canvas: viewer.canvas\n      };\n      viewer.renderer = new THREE.WebGLRenderer(parameters);\n      viewer.renderer.setClearColor(viewer.theme.get('renderer--color'), 1.0);\n      viewer.renderer.setSize(viewer.canvasWidth, viewer.canvasHeight);\n      viewer.renderer.shadowEnabled = true;\n\n      // add the output of the renderer to the html element\n      viewer.canvasContainer.appendChild(viewer.renderer.domElement);\n\n      window.addEventListener('resize', function () {\n        // Get container width and calculate new height\n        viewer.canvasWidth  = viewer.canvasContainer.clientWidth;\n        if (!viewer.atomizer.canvasRatio || viewer.atomizer.canvasRatio === 'window') {\n          var windowRatio = window.innerHeight / window.innerWidth;\n          viewer.canvasHeight = viewer.canvasWidth * windowRatio;\n        } else {\n          viewer.canvasHeight = viewer.canvasWidth * viewer.atomizer.canvasRatio;\n        }\n        viewer.canvas.width = viewer.canvasWidth;\n        viewer.canvas.height = viewer.canvasHeight;\n\n        // Tell the renderer and camera about the new canvas size.\n        viewer.renderer.setSize(viewer.canvas.width, viewer.canvas.height);\n        viewer.renderer.setViewport(0, 0, viewer.canvas.width, viewer.canvas.height);\n        viewer.camera.aspect = viewer.canvas.width / viewer.canvas.height;\n        viewer.camera.updateProjectionMatrix();\n        viewer.render();\n      });\n      // Create camera, and point it at the scene\n      viewer.camera = new THREE.PerspectiveCamera(\n        viewer.theme.get('camera--perspective'),\n        viewer.canvasWidth / viewer.canvasHeight,\n        .1, 10000\n      );\n      zoom = (viewer.dataAttr['zoom']) ? viewer.dataAttr['zoom'] : 1;\n      viewer.camera.position.set(\n        zoom * viewer.theme.get('camera--position', 'x'),\n        zoom * viewer.theme.get('camera--position', 'y'),\n        zoom * viewer.theme.get('camera--position', 'z')\n      );\n      viewer.camera.lookAt(viewer.scene.position);\n\n      // Add the trackball and page controls\n      viewer.controls.init();\n\n      // Create an ambient light and 3 spotlights\n      ambient = new THREE.AmbientLight(viewer.theme.get('ambient--color'));\n      ambient.name = 'ambient';\n      viewer.scene.add(ambient);\n\n      for (var i = 1; i < 4; i++) {\n        spotlights[i] = makeSpotLight('spotlight-' + i, {\n          c: viewer.theme.get('spotlight-' + i + '--color'),\n          x: viewer.theme.get('spotlight-' + i + '--position', 'x'),\n          y: viewer.theme.get('spotlight-' + i + '--position', 'y'),\n          z: viewer.theme.get('spotlight-' + i + '--position', 'z')\n        });\n        viewer.scene.add(spotlights[i]);\n      }\n\n      // Initialize the nuclet, shapes, and sprites modules\n      viewer.nuclet = Drupal.atomizer.nucletC(viewer);\n      viewer.shapes = Drupal.atomizer.shapesC(viewer);\n      viewer.sprites = Drupal.atomizer.spritesC(viewer);\n      viewer.animation = Drupal.atomizer.animationC(viewer);\n\n      // Make the back plane\n      var color = viewer.theme.get('plane--color');\n      viewer.scene.add(viewer.nuclet.makeObject('plane',\n        {\n          lambert: {\n            color: viewer.theme.get('plane--color'),\n            opacity: viewer.theme.get('plane--opacity'),\n            transparent: true\n          }\n        },\n        {\n          width: viewer.theme.get('plane--width'),\n          depth: viewer.theme.get('plane--depth')\n        },\n        {\n          x: viewer.theme.get('plane--position', 'x'),\n          y: viewer.theme.get('plane--position', 'y'),\n          z: viewer.theme.get('plane--position', 'z'),\n          rotation: {x: -0.5 * Math.PI}\n        }\n      ));\n\n      viewer.producer.createView();\n\n      // Render the initial image\n      render();\n    };\n\n\n    viewer.context.hover(function () {\n      var x = window.scrollX;\n      var y = window.scrollY;\n      this.focus();\n      window.scrollTo(x, y);\n    }, function () {\n      this.blur();\n    }).keyup(function (event) {\n      switch (event.keyCode) {\n        case 70: // F\n          fullScreen = !fullScreen;\n          screenfull.toggle(viewer.context[0]);\n          if (fullScreen) {\n            viewer.context.addClass('az-fullscreen');\n          }\n          else {\n            viewer.context.removeClass('az-fullscreen');\n          }\n          event.preventDefault();\n          break;\n\n//    case 88: // X\n//    case 27: // escape\n//      if (localStorage.imagerFullScreen === 'TRUE') {\n//        screenfull.exit();\n//      }\n//      else {\n//      }\n//      event.preventDefault();\n//      break;\n      }\n    });\n\n    viewer.context.dblclick(function () {\n      if (fullScreen) {\n        fullScreen = false;\n        viewer.context.removeClass('az-fullscreen');\n        screenfull.exit();\n      }\n    });\n\n    Drupal.behaviors.atomizer_viewer = {\n      // Attach functions are executed by Drupal upon page load or ajax loads.\n      attach: function (context, settings) {\n        var $dialogs = $('.az-dialog');\n        $dialogs.each(function ($dialog) {\n          if (!$(this).hasClass('az-dialog-processed')) {\n            $(this).addClass('az-dialog-processed');\n//          viewer.context.append($(this));\n          }\n        });\n      }\n    };\n\n    viewer.buttonClicked = function buttonClicked (target) {\n      if (target.id === 'viewer--fullScreen') {\n        fullScreen = !fullScreen;\n        if (fullScreen) {\n          screenfull.request(viewer.context[0]);\n          viewer.context.addClass('az-fullscreen');\n        }\n        else {\n          screenfull.exit();\n          viewer.context.removeClass('az-fullscreen');\n        }\n      }\n    };\n\n    // Attach functions for external use\n    viewer.render = render;\n    viewer.makeScene = makeScene;\n    viewer.atomizer = atomizer;\n    viewer.view = atomizer.views[atomizer.defaultView];\n\n    // Load theme\n    viewer.theme = Drupal.atomizer.themeC(viewer, makeScene);\n\n    return viewer;\n  };\n\n})(jQuery);\n"]}