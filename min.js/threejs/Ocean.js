THREE.Ocean=function(e,r,t,i){function a(e,r){return void 0!==e?e:r}this.changed=!0,this.initial=!0,this.oceanCamera=new THREE.OrthographicCamera,this.oceanCamera.position.z=1,this.renderer=e,this.renderer.clearColor(16777215),this.scene=new THREE.Scene,i=i||{},this.clearColor=a(i.CLEAR_COLOR,[1,1,1,0]),this.geometryOrigin=a(i.GEOMETRY_ORIGIN,[-1e3,-1e3]),this.sunDirectionX=a(i.SUN_DIRECTION[0],-1),this.sunDirectionY=a(i.SUN_DIRECTION[1],1),this.sunDirectionZ=a(i.SUN_DIRECTION[2],1),this.oceanColor=a(i.OCEAN_COLOR,new THREE.Vector3(.004,.016,.047)),this.skyColor=a(i.SKY_COLOR,new THREE.Vector3(3.2,9.6,12.8)),this.exposure=a(i.EXPOSURE,.35),this.geometryResolution=a(i.GEOMETRY_RESOLUTION,32),this.geometrySize=a(i.GEOMETRY_SIZE,2e3),this.resolution=a(i.RESOLUTION,64),this.floatSize=a(i.SIZE_OF_FLOAT,4),this.windX=a(i.INITIAL_WIND[0],10),this.windY=a(i.INITIAL_WIND[1],10),this.size=a(i.INITIAL_SIZE,250),this.choppiness=a(i.INITIAL_CHOPPINESS,1.5),this.matrixNeedsUpdate=!1;var s=a(i.USE_HALF_FLOAT,!1)?THREE.HalfFloatType:THREE.FloatType,n={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:s},o={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:s},h={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,wrapS:THREE.RepeatWrapping,wrapT:THREE.RepeatWrapping,format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:s};this.initialSpectrumFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,h),this.spectrumFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pingPhaseFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pongPhaseFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pingTransformFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pongTransformFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.displacementMapFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,n),this.normalMapFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,n);var u=THREE.ShaderLib.ocean_sim_vertex,l=THREE.ShaderLib.ocean_subtransform,m=THREE.UniformsUtils.clone(l.uniforms);this.materialOceanHorizontal=new THREE.ShaderMaterial({uniforms:m,vertexShader:u.vertexShader,fragmentShader:"#define HORIZONTAL \n"+l.fragmentShader}),this.materialOceanHorizontal.uniforms.u_transformSize={value:this.resolution},this.materialOceanHorizontal.uniforms.u_subtransformSize={value:null},this.materialOceanHorizontal.uniforms.u_input={value:null},this.materialOceanHorizontal.depthTest=!1;var f=THREE.ShaderLib.ocean_subtransform,p=THREE.UniformsUtils.clone(f.uniforms);this.materialOceanVertical=new THREE.ShaderMaterial({uniforms:p,vertexShader:u.vertexShader,fragmentShader:f.fragmentShader}),this.materialOceanVertical.uniforms.u_transformSize={value:this.resolution},this.materialOceanVertical.uniforms.u_subtransformSize={value:null},this.materialOceanVertical.uniforms.u_input={value:null},this.materialOceanVertical.depthTest=!1;var c=THREE.ShaderLib.ocean_initial_spectrum,E=THREE.UniformsUtils.clone(c.uniforms);this.materialInitialSpectrum=new THREE.ShaderMaterial({uniforms:E,vertexShader:u.vertexShader,fragmentShader:c.fragmentShader}),this.materialInitialSpectrum.uniforms.u_wind={value:new THREE.Vector2},this.materialInitialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialInitialSpectrum.depthTest=!1;var d=THREE.ShaderLib.ocean_phase,T=THREE.UniformsUtils.clone(d.uniforms);this.materialPhase=new THREE.ShaderMaterial({uniforms:T,vertexShader:u.vertexShader,fragmentShader:d.fragmentShader}),this.materialPhase.uniforms.u_resolution={value:this.resolution},this.materialPhase.depthTest=!1;var S=THREE.ShaderLib.ocean_spectrum,R=THREE.UniformsUtils.clone(S.uniforms);this.materialSpectrum=new THREE.ShaderMaterial({uniforms:R,vertexShader:u.vertexShader,fragmentShader:S.fragmentShader}),this.materialSpectrum.uniforms.u_initialSpectrum={value:null},this.materialSpectrum.uniforms.u_resolution={value:this.resolution},this.materialSpectrum.depthTest=!1;var g=THREE.ShaderLib.ocean_normals,H=THREE.UniformsUtils.clone(g.uniforms);this.materialNormal=new THREE.ShaderMaterial({uniforms:H,vertexShader:u.vertexShader,fragmentShader:g.fragmentShader}),this.materialNormal.uniforms.u_displacementMap={value:null},this.materialNormal.uniforms.u_resolution={value:this.resolution},this.materialNormal.depthTest=!1;var v=THREE.ShaderLib.ocean_main,O=THREE.UniformsUtils.clone(v.uniforms);this.materialOcean=new THREE.ShaderMaterial({uniforms:O,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader}),this.materialOcean.uniforms.u_geometrySize={value:this.resolution},this.materialOcean.uniforms.u_displacementMap={value:this.displacementMapFramebuffer.texture},this.materialOcean.uniforms.u_normalMap={value:this.normalMapFramebuffer.texture},this.materialOcean.uniforms.u_oceanColor={value:this.oceanColor},this.materialOcean.uniforms.u_skyColor={value:this.skyColor},this.materialOcean.uniforms.u_sunDirection={value:new THREE.Vector3(this.sunDirectionX,this.sunDirectionY,this.sunDirectionZ)},this.materialOcean.uniforms.u_exposure={value:this.exposure},this.materialOceanHorizontal.blending=0,this.materialOceanVertical.blending=0,this.materialInitialSpectrum.blending=0,this.materialPhase.blending=0,this.materialSpectrum.blending=0,this.materialNormal.blending=0,this.materialOcean.blending=0,this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2)),this.scene.add(this.screenQuad),this.generateSeedPhaseTexture(),this.generateMesh()},THREE.Ocean.prototype.generateMesh=function(){var e=new THREE.PlaneBufferGeometry(this.geometrySize,this.geometrySize,this.geometryResolution,this.geometryResolution);e.rotateX(-Math.PI/2),this.oceanMesh=new THREE.Mesh(e,this.materialOcean)},THREE.Ocean.prototype.render=function(){this.scene.overrideMaterial=null,this.changed&&this.renderInitialSpectrum(),this.renderWavePhase(),this.renderSpectrum(),this.renderSpectrumFFT(),this.renderNormalMap(),this.scene.overrideMaterial=null},THREE.Ocean.prototype.generateSeedPhaseTexture=function(){this.pingPhase=!0;for(var e=new window.Float32Array(this.resolution*this.resolution*4),r=0;r<this.resolution;r++)for(var t=0;t<this.resolution;t++)e[r*this.resolution*4+4*t]=2*Math.random()*Math.PI,e[r*this.resolution*4+4*t+1]=0,e[r*this.resolution*4+4*t+2]=0,e[r*this.resolution*4+4*t+3]=0;this.pingPhaseTexture=new THREE.DataTexture(e,this.resolution,this.resolution,THREE.RGBAFormat),this.pingPhaseTexture.wrapS=THREE.ClampToEdgeWrapping,this.pingPhaseTexture.wrapT=THREE.ClampToEdgeWrapping,this.pingPhaseTexture.type=THREE.FloatType,this.pingPhaseTexture.needsUpdate=!0},THREE.Ocean.prototype.renderInitialSpectrum=function(){this.scene.overrideMaterial=this.materialInitialSpectrum,this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY),this.materialInitialSpectrum.uniforms.u_size.value=this.size,this.renderer.render(this.scene,this.oceanCamera,this.initialSpectrumFramebuffer,!0)},THREE.Ocean.prototype.renderWavePhase=function(){this.scene.overrideMaterial=this.materialPhase,this.screenQuad.material=this.materialPhase,this.initial?(this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture,this.initial=!1):this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime,this.materialPhase.uniforms.u_size.value=this.size,this.renderer.render(this.scene,this.oceanCamera,this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer),this.pingPhase=!this.pingPhase},THREE.Ocean.prototype.renderSpectrum=function(){this.scene.overrideMaterial=this.materialSpectrum,this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer.texture,this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture,this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness,this.materialSpectrum.uniforms.u_size.value=this.size,this.renderer.render(this.scene,this.oceanCamera,this.spectrumFramebuffer)},THREE.Ocean.prototype.renderSpectrumFFT=function(){var e=Math.log(this.resolution)/Math.log(2);this.scene.overrideMaterial=this.materialOceanHorizontal;for(r=0;r<e;r++)0===r?(this.materialOceanHorizontal.uniforms.u_input.value=this.spectrumFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer)):r%2==1?(this.materialOceanHorizontal.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.render(this.scene,this.oceanCamera,this.pongTransformFramebuffer)):(this.materialOceanHorizontal.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer));this.scene.overrideMaterial=this.materialOceanVertical;for(var r=e;r<2*e;r++)r===2*e-1?(this.materialOceanVertical.uniforms.u_input.value=e%2==0?this.pingTransformFramebuffer.texture:this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.render(this.scene,this.oceanCamera,this.displacementMapFramebuffer)):r%2==1?(this.materialOceanVertical.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.render(this.scene,this.oceanCamera,this.pongTransformFramebuffer)):(this.materialOceanVertical.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,r%e+1),this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer))},THREE.Ocean.prototype.renderNormalMap=function(){this.scene.overrideMaterial=this.materialNormal,this.changed&&(this.materialNormal.uniforms.u_size.value=this.size),this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer.texture,this.renderer.render(this.scene,this.oceanCamera,this.normalMapFramebuffer,!0)};
//# sourceMappingURL=../maps/threejs/Ocean.js.map
