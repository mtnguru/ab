{"version":3,"sources":["az_theme.js"],"names":["$","Drupal","atomizer","themeC","_viewer","callback","viewer","currentSet","defaultSet","themeDirectory","saveMessage","context","loadYml","results","localStorage","setItem","data","filename","val","ymlContents","filepath","name","reset","description","JSON","parse","stringify","savedYml","response","innerHTML","base","doAjax","directory","component","updateThemeSelect","select","hasChildNodes","removeChild","lastChild","file","filelist","opt","document","createElement","appendChild","createTextNode","value","replace","setTimeout","saveTheme","theme","settings","sortedKeys","Object","keys","sort","key","controlsOnly","updateAll","def","id","prototype","toString","call","defaultValue","comp","split","ind","indexOf","applyControl","element","console","log","className","args","argNames","length","renderer","setClearColor","THREE","Color","parseInt","camera","fov","updateProjectionMatrix","scene","traverse","node","nodeNames","ok","charAt","radians","Math","PI","rotation","position","scale","set","geometry","PlaneBufferGeometry","opacity","visible","transparent","az","active","material","i","children","materials","linewidth","wireframeLinewidth","color","setHex","render","themeFile","getItem","view","defaultTheme","themePath","buttonClicked","target","classList","remove","add","x","get","y","z","lookAt","index","idArgs","sid","controls","getDefault","type","getCurrentControls","getYmlDirectory","jQuery"],"mappings":"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","file":"../az_theme.js","sourcesContent":["/**\n * @file - az_theme.js\n *\n * Class to manage and apply settings\n * Sets the color, position, opacity, linewidth, or rendered items.\n */\n\n(function($) {\n  'use strict';\n\n  Drupal.atomizer.themeC = function (_viewer, callback) {\n    var viewer = _viewer;\n    var currentSet = {};\n    var defaultSet = {};\n    var themeDirectory = viewer.atomizer.themeDirectory;\n    var currentThemeName = '';\n//var nucletNames = ['monolet', 'tetralet', 'octalet', 'icosalet', 'decalet'];\n    var saveMessage = $('#theme--message', viewer.context)[0];\n\n    /**\n     * Load a theme yml file and make it the current theme set.\n     *\n     * @param results\n     */\n    var loadYml = function (results) {\n      // Save the theme file name in browser local storage.\n      localStorage.setItem('atomizer_theme_file', results[0].data.filename);\n\n      // Set the theme select list to the currently loaded file.\n      $('#blocks--theme select.form-select').val(results[0].data.filename);\n\n      if (results[0].ymlContents) {\n        results[0].ymlContents.filepath = results[0].data.filepath;\n        defaultSet = results[0].ymlContents;\n\n        if (currentSet.name) {\n          reset(false, false);\n          currentSet.name = defaultSet.name;\n          currentSet.description = defaultSet.description;\n          currentSet.filepath = defaultSet.filepath;\n        } else {\n          currentSet = JSON.parse(JSON.stringify(defaultSet));\n          reset(true, true);\n        }\n\n        // This is a hack, the callback is only run the first time the theme file is loaded.\n        if (callback) {\n          callback();\n          callback = null;\n        }\n      }\n    };\n\n    /**\n     * The current theme set was saved, now re-list the theme set directory with AJAX.\n     *\n     * @param response\n     */\n// The current theme set has been saved,\n    var savedYml = function (response) {\n      saveMessage.innerHTML = '.... Loading Theme list';\n      Drupal.atomizer.base.doAjax(\n        '/ajax-ab/listDirectory',\n        {\n          directory: themeDirectory,\n          component: 'theme'\n        },\n        updateThemeSelect\n      );\n    };\n\n    /**\n     * Update the theme select widget.\n     *\n     * @param response\n     */\n    var updateThemeSelect = function updateThemeSelect(response) {\n      var select = $('#theme--selectyml--select', viewer.context)[0];\n\n      // Remove current options from theme select widget\n      while (select.hasChildNodes()) {\n        select.removeChild(select.lastChild);\n      }\n\n      // Create and append the new select option list\n      for (var file in response[0].filelist) {\n        var opt = document.createElement('option');\n        opt.appendChild( document.createTextNode(response[0].filelist[file]));\n        opt.value = file;\n        select.appendChild(opt);\n      }\n\n      // Set select to the currently selected file\n      select.value = currentSet.filepath.replace(/^.*[\\\\\\/]/, '');\n\n      // Clear the Name and File name fields\n      var inputs = $('#theme--saveNewName', viewer.context)[0].value = '';\n\n      saveMessage.innerHTML = 'Theme saved successfully';\n      setTimeout(function () { saveMessage.innerHTML = ''; }, 3000);\n    };\n\n    /**\n     * Overwrite the current theme set.\n     *\n     * @param theme\n     */\n    var saveTheme = function (theme) {\n\n      var settings = theme.settings;\n      var sortedKeys = Object.keys(settings).sort();\n      delete theme.settings;\n      theme.settings = {};\n      for (var key in sortedKeys) {\n        var pname = sortedKeys[key];\n        theme.settings[sortedKeys[key]] = settings[sortedKeys[key]];\n      }\n      // Verify they entered a name.  If not popup an alert. return\n      Drupal.atomizer.base.doAjax(\n        '/ajax-ab/saveYml',\n        { name: theme.name,\n          component: 'theme',\n          filepath: theme.filepath,\n          ymlContents: theme },\n        savedYml\n      );\n      return;\n    };\n\n    /**\n     * Reset the current settings to the default.\n     *\n     * @param controlsOnly - only update the controls, not the objects in the scene.\n     * @param updateAll - update everything to the current theme even if current == default.\n     */\n    var reset = function reset(controlsOnly, updateAll) {\n      var def;\n      for (var id in currentSet.settings) {\n        // if defaultValue defines an array then set all elements.\n        if (Object.prototype.toString.call(currentSet.settings[id].defaultValue) === '[object Array]') {  // If it's an array\n          var comp = id.split('--');\n          var ind = 'xyz'.indexOf(comp[2]);\n          def = defaultSet.settings[id].defaultValue[ind];\n          if (updateAll || currentSet.settings[id].defaultValue[ind] != def) {\n            if (!controlsOnly) {\n              applyControl(id, def);\n            }\n            var element;\n\n            element = $('#' + id)[0];\n            if (element) element.value = def;\n\n            element = $('#' + id + '--az-value')[0];\n            if (element) element.value = def;\n          }\n          // else defaultValue is not an array, set the one value\n        } else {\n          if (defaultSet.settings[id]) {\n            def = defaultSet.settings[id].defaultValue;\n          } else {\n//        alert('Error: No defaultValue found for ' + id + ' in ' + defaultSet.filepath);\n            console.log('Error: No defaultValue found for ' + id + ' in ' + defaultSet.filepath);\n          }\n          if (updateAll || currentSet.settings[id].defaultValue != def) {\n            if (!controlsOnly) {\n              applyControl(id, defaultSet.settings[id].defaultValue);\n            }\n            var element = $('#' + id)[0];\n            if (element) {\n              if (element.className.indexOf('az-control-range') > -1) {\n                $('#' + id + '--az-slider').val(def);\n                $('#' + id + '--az-value').val(def);\n              } else {\n                element.value = def;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    /**\n     * Apply a control setting to the proper scene elements.\n     *\n     * @param id\n     * @param value\n     */\n    var applyControl = function applyControl(id, value) {\n      var args = id.split(\"--\");\n      var argNames = args[0].split(\"-\");\n      // Set the currentSet\n      if (args.length === 4) {\n        currentSet.settings[args[0] + '--' + args[1] + '--' + args[2] + '--' + args[3]].defaultValue = value;\n      } else if (args.length === 3) {\n        currentSet.settings[args[0] + '--' + args[1] + '--' + args[2]].defaultValue = value;\n      } else {\n        currentSet.settings[args[0] + '--' + args[1]].defaultValue = value;\n      }\n\n      switch (argNames[0]) {\n\n        case 'renderer':\n          viewer.renderer.setClearColor(new THREE.Color(parseInt(value.replace(/^#/, ''), 16)), 1);\n          break;\n\n        case 'camera':\n          if (args[1] == 'perspective') {\n            viewer.camera.fov = value;\n            viewer.camera.updateProjectionMatrix();\n          }\n          break;\n\n//    case 'ambient':\n//      node.color.setHex(parseInt(value.replace(/#/, \"0x\")), 16);\n//      break;\n\n        default:\n          viewer.scene.traverse(function (node) {\n            var nodeNames = node.name.split(\"-\");\n            var ok = false;\n            if (args[0] == 'atom') {\n              if (nodeNames[0] == 'atom') {\n                ok = true;\n              }\n            } else if (args[0] == 'decahedron') {\n              if (nodeNames[0] == 'lithium') {\n                ok = true;\n              }\n            } else if (args[0].indexOf('wireframe') > -1 &&\n              args[1] == 'scale'                &&\n              nodeNames[0].indexOf('face') > -1 &&\n              nodeNames[0].charAt(0) == args[0].charAt(0)) {\n              ok = true;\n            } else {\n              if (argNames.length == 2) {\n                if (args[0] == node.name) {\n                  ok = true;\n                }\n              } else if (nodeNames[0] == argNames[0]) {\n                ok = true;\n              }\n            }\n\n            if (ok) {\n              switch (args[1]) {\n\n                case 'rotation':\n                  var radians = value / 360 * 2 * Math.PI;\n                  node.rotation[args[2]] = radians + (node.rotation['init_' + args[2]] || 0);\n                  break;\n\n                case 'position':\n                  node.position[args[2]] = value;\n                  break;\n\n                case 'scale':\n//              var scale = (node.scaleInit) ? value * node.scaleInit : value;\n                  var scale = value;\n                  console.log('applyControl  configuration ' + scale);\n                  node.scale.set(scale, scale, scale);\n                  break;\n\n                case 'width':\n                case 'depth':\n                  if (argNames[0] == 'plane') {\n                    node.geometry = THREE.PlaneBufferGeometry(currentSet['plane--width'], currentSet['plane--depth']);\n                  }\n                  break;\n\n                case 'opacity':\n                  var opacity =     value;\n                  var visible =     (value > .02);\n                  var transparent = (value < .97);\n                  if (argNames[0] == 'proton') {\n                    if (node.az.active) {\n                      node.material.opacity = opacity;\n                      node.material.visible = visible;\n                      node.material.transparent = transparent;\n                    }\n                  } else if (argNames[0].indexOf('Wireframe') > -1) {\n                    if (node.name == 'dodecaWireframe' ||\n                      node.name == 'dodecaOutWireframe' ||\n                      node.name == 'hexaWireframe') {\n                      for (var i = 0; i < node.children.length; i++) {\n                        node.children[i].material.opacity = opacity;\n                        node.children[i].material.visible = visible;\n                        node.children[i].material.transparent = transparent;\n                      }\n                    } else {\n                      node.material.opacity = opacity;\n                      node.material.visible = visible;\n                      node.material.transparent = transparent;\n                    }\n                  } else {\n                    if (node.material.materials) {\n                      node.material.materials[1].opacity = opacity;\n                      node.material.materials[1].visible = visible;\n                      node.material.materials[1].transparent = transparent;\n                    }\n                    else if (node.material[0]) {\n                      node.material[0].opacity = opacity;\n                      node.material[0].visible = visible;\n                      node.material[0].transparent = transparent;\n                    } else {\n                      node.material.opacity = opacity;\n                      node.material.visible = visible;\n                      node.material.transparent = transparent;\n                    }\n                  }\n                  break;\n\n                case 'linewidth':\n                  if (argNames[0].indexOf('Wireframe') > -1) {\n                    if (node.name == 'dodecaWireframe' ||\n                      node.name == 'dodecaOutWireframe' ||\n                      node.name == 'hexaWireframe') {\n                      for (var i = 0; i < node.children.length; i++) {\n                        node.children[i].material.linewidth = value;\n                        node.children[i].material.visible = (value >.05);\n                      }\n                    } else {\n                      node.material.visible = (value >.05);\n                      node.material.wireframeLinewidth = value;\n                    }\n                  } else {\n                    node.material.linewidth = value;\n                    node.material.visible = (value >.05);\n                  }\n                  break;\n\n                case 'color':\n                  switch (argNames[0]) {\n                    case 'ambient':\n                    case 'spotlight':\n                      node.color.setHex(parseInt(value.replace(/#/, \"0x\")), 16);\n                      break;\n                    default:\n                      if (argNames[0].indexOf('Wireframe') > -1) {\n                        if (node.name == 'dodecaWireframe' ||\n                          node.name == 'dodecaOutWireframe' ||\n                          node.name == 'hexaWireframe') {\n                          for (var i = 0; i < node.children.length; i++) {\n                            node.children[i].material.color.setHex(parseInt(value.replace(/#/, \"0x\")), 16);\n                          }\n                        } else {\n                          node.material.color.setHex(parseInt(value.replace(/#/, \"0x\")), 16);\n                        }\n                      } else {\n                        if (node.material.materials) {\n                          for (var i = 0; i < node.material.materials.length; i++) {\n                            node.material.materials[i].color.setHex(parseInt(value.replace(/#/, \"0x\")), 16);\n                          }\n                        }\n                        else {\n                          node.material.color.setHex(parseInt(value.replace(/#/, \"0x\")), 16);\n                        }\n                      }\n                      break;\n                  }\n                  break;\n\n              }\n            }\n          });\n          break;\n      }\n      viewer.render();\n    };\n\n    /**\n     * Set the theme of an element externally\n     *\n     * Used when initializing controls - creates a default theme set with all values,\n     * The set initially loaded may be incomplete due to changes and not have a default value.\n     *\n     * @param value\n     * @param id\n     * @param type\n     */\n    var set = function set(value, id, type) {\n      if (!currentSet.settings[id]) {\n        currentSet.settings[id] = {\n          'defaultValue': value,\n          'type': type\n        }\n      } else {\n//    currentSet.settings[id]['defaultValue'] = value;\n      }\n    };\n\n    var setBaseSetting = function set(value, id) {\n      currentSet.settings[id]['baseSetting'] = value;\n    };\n\n    /**\n     * Get the theme for an element\n     *\n     * @param id\n     * @param index\n     * @returns {*}\n     */\n    var get = function get(id, index) {\n      var idArgs = id.split('--');\n      var sid = id;\n      if (index) {\n        sid += '--' + index;\n      }\n      if (idArgs[1] == 'position' || idArgs[1] == 'rotation') {\n        sid += '--az-slider';\n      }\n      if (currentSet.settings[sid]) {\n        return currentSet.settings[sid]['defaultValue'];\n      } else {\n        return viewer.controls.getDefault(sid, index);\n      }\n    };\n\n    var buttonClicked = function buttonClicked (target) {\n      switch (target.id) {\n        case 'theme--saveButton':\n          saveTheme(currentSet);\n          break;\n        case 'theme--saveNewButton':\n          var name = $('#theme--saveNewName').val();\n          if (name.length) {\n            var filename = name.replace(/[|&;$%@\"<>()+,]/g, \"\").replace(/[ -]/g, '_');\n            if (filename.indexOf('.yml') == -1) {\n              filename += '.yml';\n            }\n            // Save the yml file\n\n            currentSet.name = name;\n            currentSet.filepath = themeDirectory + '/' + filename;\n            saveMessage.classList.remove('az-error');\n            saveMessage.innerHTML = '.... Saving theme';\n\n            saveTheme(currentSet);\n\n            setTimeout(function () { saveMessage.innerHTML = '' }, 3000)\n          } else {\n            saveMessage.innerHTML = 'Please enter a Name....';\n            saveMessage.classList.add('az-error');\n          }\n          break;\n        case 'theme--reset':\n          reset();\n          break;\n        case 'theme--cameraReset':\n          viewer.camera.position.x = viewer.theme.get('camera--position', 'x');\n          viewer.camera.position.y = viewer.theme.get('camera--position', 'y');\n          viewer.camera.position.z = viewer.theme.get('camera--position', 'z');\n          viewer.camera.lookAt(viewer.scene.position);\n          viewer.render();\n          break;\n      }\n    };\n\n    // Get theme file from browser local storage if it exists.\n    var themeFile = localStorage.getItem('atomizer_theme_file');\n    if (!themeFile || themeFile == 'undefined') {\n      themeFile = viewer.view.defaultTheme;\n    }\n    viewer.view.themePath = viewer.atomizer.themeDirectory + '/' + themeFile;\n\n    // Load theme file\n    Drupal.atomizer.base.doAjax(\n      '/ajax-ab/loadYml',\n      { filepath: viewer.view.themePath,\n        filename: themeFile,\n        directory: themeDirectory,\n        component: 'theme'\n      },\n      loadYml\n    );\n\n    // Return references to functions available for external use.\n    return {\n      buttonClicked: buttonClicked,\n      applyControl: applyControl,\n      loadYml: loadYml,\n      get: get,\n      set: set,\n      getCurrentControls: function() { return currentSet.settings; },\n      getYmlDirectory:    function () { return themeDirectory; }\n    };\n  };\n})(jQuery);\n\n"]}