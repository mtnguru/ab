{"version":3,"sources":["threejs/Gyroscope.js"],"names":["THREE","Gyroscope","Object3D","call","this","prototype","Object","create","constructor","updateMatrixWorld","translationObject","Vector3","quaternionObject","Quaternion","scaleObject","translationWorld","quaternionWorld","scaleWorld","force","matrixAutoUpdate","updateMatrix","matrixWorldNeedsUpdate","parent","matrixWorld","multiplyMatrices","matrix","decompose","compose","copy","i","l","children","length"],"mappings":"AAIAA,MAAMC,UAAY,WAEjBD,MAAME,SAASC,KAAMC,OAItBJ,MAAMC,UAAUI,UAAYC,OAAOC,OAAQP,MAAME,SAASG,WAC1DL,MAAMC,UAAUI,UAAUG,YAAcR,MAAMC,UAE9CD,MAAMC,UAAUI,UAAUI,kBAAsB,WAE/C,IAAIC,EAAoB,IAAIV,MAAMW,QAC9BC,EAAmB,IAAIZ,MAAMa,WAC7BC,EAAc,IAAId,MAAMW,QAExBI,EAAmB,IAAIf,MAAMW,QAC7BK,EAAkB,IAAIhB,MAAMa,WAC5BI,EAAa,IAAIjB,MAAMW,QAE3B,OAAO,SAA4BO,GAElCd,KAAKe,kBAAoBf,KAAKgB,gBAIzBhB,KAAKiB,wBAA0BH,KAEd,OAAhBd,KAAKkB,QAETlB,KAAKmB,YAAYC,iBAAkBpB,KAAKkB,OAAOC,YAAanB,KAAKqB,QAEjErB,KAAKmB,YAAYG,UAAWX,EAAkBC,EAAiBC,GAC/Db,KAAKqB,OAAOC,UAAWhB,EAAmBE,EAAkBE,GAE5DV,KAAKmB,YAAYI,QAASZ,EAAkBH,EAAkBK,IAK9Db,KAAKmB,YAAYK,KAAMxB,KAAKqB,QAK7BrB,KAAKiB,wBAAyB,EAE9BH,GAAQ,GAMT,IAAM,IAAIW,EAAI,EAAGC,EAAI1B,KAAK2B,SAASC,OAAQH,EAAIC,EAAGD,IAEjDzB,KAAK2B,SAAUF,GAAIpB,kBAAmBS,IA7CK","file":"../../threejs/Gyroscope.js","sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.Gyroscope = function () {\n\n\tTHREE.Object3D.call( this );\n\n};\n\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\nTHREE.Gyroscope.prototype.constructor = THREE.Gyroscope;\n\nTHREE.Gyroscope.prototype.updateMatrixWorld = ( function () {\n\n\tvar translationObject = new THREE.Vector3();\n\tvar quaternionObject = new THREE.Quaternion();\n\tvar scaleObject = new THREE.Vector3();\n\n\tvar translationWorld = new THREE.Vector3();\n\tvar quaternionWorld = new THREE.Quaternion();\n\tvar scaleWorld = new THREE.Vector3();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\n\n\t\t// update matrixWorld\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent !== null ) {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\tthis.matrixWorld.decompose( translationWorld, quaternionWorld, scaleWorld );\n\t\t\t\tthis.matrix.decompose( translationObject, quaternionObject, scaleObject );\n\n\t\t\t\tthis.matrixWorld.compose( translationWorld, quaternionObject, scaleWorld );\n\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t}\n\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t};\n\n}() );\n"]}