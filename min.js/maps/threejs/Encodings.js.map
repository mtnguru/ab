{"version":3,"sources":["threejs/Encodings.js"],"names":["THREE","Encodings","undefined","toHalf","Error","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","e","scale","Math","pow","RGBEByteToRGBHalf"],"mappings":"AAKAA,MAAMC,UAAY,WAChB,QAAqBC,IAAjBF,MAAMG,OAAuB,MAAM,IAAIC,MAAM,6EAGnDJ,MAAMC,UAAUI,mBAAqB,SAAUC,EAAaC,EAAcC,EAAWC,GACnF,IAAIC,EAAIJ,EAAYC,EAAa,GAC7BI,EAAQC,KAAKC,IAAI,EAAKH,EAAI,KAAS,IAEvCF,EAAUC,EAAW,GAAKH,EAAYC,EAAa,GAAKI,EACxDH,EAAUC,EAAW,GAAKH,EAAYC,EAAa,GAAKI,EACxDH,EAAUC,EAAW,GAAKH,EAAYC,EAAa,GAAKI,GAG1DX,MAAMC,UAAUa,kBAAoB,SAAUR,EAAaC,EAAcC,EAAWC,GAClF,IAAIC,EAAIJ,EAAYC,EAAa,GAC7BI,EAAQC,KAAKC,IAAI,EAAKH,EAAI,KAAS,IAEvCF,EAAUC,EAAW,GAAKT,MAAMG,OAAQG,EAAYC,EAAa,GAAKI,GACtEH,EAAUC,EAAW,GAAKT,MAAMG,OAAQG,EAAYC,EAAa,GAAKI,GACtEH,EAAUC,EAAW,GAAKT,MAAMG,OAAQG,EAAYC,EAAa,GAAKI","file":"../../threejs/Encodings.js","sourcesContent":["/**\n * @author Ben Houston / http://clara.io / bhouston\n * @author Prashant Sharma / spidersharma03\n */\n\nTHREE.Encodings = function() {\n  if( THREE.toHalf === undefined ) throw new Error(\"THREE.Encodings is required for HDRCubeMapLoader when loading half data.\");\n}\n\nTHREE.Encodings.RGBEByteToRGBFloat = function( sourceArray, sourceOffset, destArray, destOffset ) {\n  var e = sourceArray[sourceOffset+3];\n  var scale = Math.pow(2.0, e - 128.0) / 255.0;\n\n  destArray[destOffset+0] = sourceArray[sourceOffset+0] * scale;\n  destArray[destOffset+1] = sourceArray[sourceOffset+1] * scale;\n  destArray[destOffset+2] = sourceArray[sourceOffset+2] * scale;\n}\n\nTHREE.Encodings.RGBEByteToRGBHalf = function( sourceArray, sourceOffset, destArray, destOffset ) {\n  var e = sourceArray[sourceOffset+3];\n  var scale = Math.pow(2.0, e - 128.0) / 255.0;\n\n  destArray[destOffset+0] = THREE.toHalf( sourceArray[sourceOffset+0] * scale );\n  destArray[destOffset+1] = THREE.toHalf( sourceArray[sourceOffset+1] * scale );\n  destArray[destOffset+2] = THREE.toHalf( sourceArray[sourceOffset+2] * scale );\n}\n"]}