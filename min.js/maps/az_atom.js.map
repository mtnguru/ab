{"version":3,"sources":["az_atom.js"],"names":["$","Drupal","atomizer","atomC","_viewer","activateNeutralProtons","side","nuclet","activate","show","np","p","length","az","protons","material","visible","active","createNuclet","id","nucletConf","parent","nucletOuterShell","viewer","nucletInnerShell","children","attachAngle","add","substr","parentId","slice","atom","nuclets","growId","attachId","initial_rotation_y","growPt","position","clone","angleOrigin","THREE","Vector3","origin","y","initialAxis","protonGeometry","vertices","normalize","alignAxis","attachAxis","sub","attachLen","base","alignObjectToAxis","attachPt","multiplyScalar","set","x","z","rotation","Math","PI","charAt","setValenceRings","activeColor","theme","get","inactiveColor","n","state","r","rings","hasOwnProperty","ring","color","grow","lock","numActive","setHex","parseInt","replace","showStats","numProtons","numNuclets","proton","numUnclassified","html","onSelectAtom","event","nid","target","split","loadAtom","preventDefault","extractStructure","addNucletToStructure","spacing","out","conf","i","grow0","grow1","addSelectAtomEventListeners","$selectAtoms","context","parents","addEventListener","loadCallback","atomInformation","$viewSelectAtom","callback","doAjax","doCreateAtom","results","result","command","innerHTML","data","teaser","jQuery","replaceWith","link","attachBehaviors","scene","remove","createAtom","atomConf","producer","atomLoaded","Group","name","render","savedYml","response","querySelector","click","toggleClass","behaviors","atomizer_atom","attach","settings","nodeForm","getElementsByClassName","getElementsByTagName","value","addNuclet","electrons","addProton","face","buttonClicked","button","changeNucletState","deleteNuclet","changeNucletAngle","angle","getNuclet","getYmlDirectory","overwriteYml","controls","currentSet","component","filename","ymlContents","saveYml"],"mappings":"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","file":"../az_atom.js","sourcesContent":["/**\n * @file - az_atom.js\n *\n * Manage atom's - load, save, create\n */\n\n(function ($) {\n\n  Drupal.atomizer.atomC = function (_viewer) {\n\n    var viewer = _viewer;\n    var atom;\n    var atomConf;\n    var atomInformation = $('#atom--information', viewer.context)[0];\n    var $viewSelectAtom = $('#view-select-atom');\n    var loadCallback;\n\n    /**\n     * Align an object to an internal axis (x, y or z) and then align that axis\n     * to an external axis in the scene.\n     *\n     * @param object\n     * @param initialAxis\n     * @param alignAxis\n     * @param finalAxis\n     */\n    function alignNuclet(object, initialAxis, alignAxis, finalAxis) {\n\n      initialAxis.normalize();\n      alignAxis.normalize();\n      finalAxis.normalize();\n\n      // Align nuclets Y axis to the attach point normal\n      Drupal.atomizer.base.alignObjectToAxis(\n        object.children[0],\n        initialAxis,\n        alignAxis,\n        false\n      );\n\n      // Align nuclets Y axis to the grow point normal\n      Drupal.atomizer.base.alignObjectToAxis(\n        object,\n        alignAxis,\n        finalAxis,\n        false\n      );\n    }\n\n    /**\n     * User has selected a new nuclet state, change the nuclet.\n     *\n     * @param value\n     */\n    function changeNucletState(nuclet, state) {\n      var id = nuclet.az.id;\n      var attachAngle = nuclet.az.attachAngle;\n      var parent = nuclet.parent.parent.parent;\n      viewer.nuclet.deleteNuclet(nuclet);\n\n      var nucletOuterShell = createNuclet(\n        id,\n        {state: state, attachAngle: attachAngle},\n        parent\n      );\n      nuclet = nucletOuterShell.children[0].children[0];\n      setValenceRings();\n\n      return nuclet;\n    }\n\n    function activateNeutralProtons(side, nuclet, activate, show) {\n      // Activate/Deactivate the neutral ending protons.\n      var np = (side == '0') ? [12,13,14,15,20] : [16,17,18,19,21];\n      for (var p = 0; p < np.length; p++) {\n        nuclet.az.protons[np[p]].material.visible = show;\n        nuclet.az.protons[np[p]].az.visible = show;\n        nuclet.az.protons[np[p]].az.active = activate;\n      }\n    }\n\n    function getNuclet(id) {\n      return (atom.az.nuclets[id]) ? atom.az.nuclets[id] : null;\n    }\n\n    /**\n     * When the user has clicked on an add nuclet button,\n     * create the new nuclet with a carbon ending.\n     *\n     * @param event\n     */\n    function addNuclet(id) {\n      /*  conf = {\n       state: 'final',\n       attachAngle: 3,\n       protons: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],\n       electrons: [0,1,2,3,4,5]\n       }; */\n\n      conf = {\n        state: 'lithium',\n        attachAngle: 3,\n        protons: [10, 1, 4, 5, 3, 11, 9],\n        electrons: [0,1,2]\n      };\n\n      // Find the parent nuclet\n      var parent = atom.az.nuclets[id.slice(0, -1)];\n\n      // Deactivate the neutral protons on the parent nuclet\n      activateNeutralProtons(id.charAt(id.length-1), parent, false, false);\n\n      // Create the new nuclet\n      var nucletOuterShell = createNuclet(id, conf, parent);\n      setValenceRings();\n      showStats();\n      return nucletOuterShell.children[0].children[0];\n    }\n\n    /**\n     * Delete a nuclet from the current atom.\n     *\n     * @param id\n     */\n    function deleteNuclet(id) {\n      var nuclet = atom.az.nuclets[id];\n      var parent = atom.az.nuclets[id.slice(0, -1)];\n\n      viewer.nuclet.deleteNuclet(nuclet);\n\n      // Activate the neutral ending protons on the parent but don't show.\n      activateNeutralProtons(id.charAt(id.length-1), parent, true, false);\n      setValenceRings();\n      showStats();\n    }\n\n    /**\n     * User has changed the slider to select the attachment angle.\n     *\n     * @param event\n     */\n    function changeNucletAngle(id, angle) {\n      var nuclet = atom.az.nuclets[id];\n      nuclet.parent.rotation.y = (nuclet.parent.initial_rotation_y + ((angle - 1) * 72)) / 180 *Math.PI;\n      nuclet.az.conf.attachAngle = angle;\n    }\n\n    /**\n     * Create a nuclet and rotate it into position.\n     *\n     * @param nucletConf\n     */\n    function createNuclet(id, nucletConf, parent) {\n      // Create Nuclet - get references to nuclet and shells\n      var nucletOuterShell = viewer.nuclet.createNuclet(id, nucletConf);\n      var nucletInnerShell = nucletOuterShell.children[0];\n      var nuclet = nucletOuterShell.children[0].children[0];\n      nuclet.az.attachAngle = nucletConf.attachAngle;\n      parent.add(nucletOuterShell);\n\n      // Rotate and position the nuclet onto it's parents grow point.\n      if (nuclet.az.id != 'N0') {\n        var side = nuclet.az.id.substr(nuclet.az.id.length - 1);\n        var parentId = nuclet.az.id.slice(0, -1);\n        activateNeutralProtons( side, atom.az.nuclets[parentId], false, false );\n        var growId;\n        var attachId;\n        if (side == 0) {  // left side\n          growId = 0;\n\n          // attach on 10\n          attachId = 10;\n          nucletInnerShell.initial_rotation_y = -18;\n\n          // attach on 11\n//      attachId = 11;\n//      nucletInnerShell.initial_rotation_y = -18;\n        } else {              // right side\n          growId = 2;\n\n          // attach on 10\n          attachId = 10;\n          nucletInnerShell.initial_rotation_y = -198;\n\n          // attach on 11\n//      attachId = 11;\n//      nucletInnerShell.initial_rotation_y = -162;\n        }\n\n        var growProton = atom.az.nuclets[parentId].az.protons[growId];\n        var growPt = growProton.position.clone();\n\n        // Create normalized axis of vector to rotate to.\n        //  The following 4 lines adjust the angle, position and length of the grow axis.\n        var angleOrigin = new THREE.Vector3(0, 31, 0);\n        var origin = new THREE.Vector3(0, 13, 0);\n        growPt.y = growPt.y + 11;\n//      var attachScale = 2.42;\n        var attachScale = 2.28;\n\n        var attachVertice = nuclet.az.protonGeometry.vertices[attachId];\n        var initialAxis = attachVertice.clone().normalize();\n        var alignAxis = new THREE.Vector3(0, 1, 0);\n        var attachAxis = angleOrigin.clone().sub(growPt);\n        var attachLen = attachAxis.length();\n        attachAxis.normalize();\n\n        // Align the axis through the attach vertice to the y axis.\n        Drupal.atomizer.base.alignObjectToAxis(\n          nuclet,\n          initialAxis,\n          alignAxis,\n          false\n        );\n\n        // Align the new y axis to the grow point axis.\n        Drupal.atomizer.base.alignObjectToAxis(\n          nucletOuterShell,\n          alignAxis,\n          attachAxis,\n          false\n        );\n\n        // Move the nuclet to the correct spot on the grow point axis.\n        var attachPt = origin.clone().add(attachAxis.multiplyScalar(-attachLen * attachScale));\n        nucletOuterShell.position.set(attachPt.x, attachPt.y, attachPt.z);\n\n        // Set the initial y rotation\n        nucletInnerShell.rotation.y = (nucletInnerShell.initial_rotation_y + (((nucletConf.attachAngle || 1) - 1) * 72)) / 180 *Math.PI;\n      }\n\n      atom.az.nuclets[nuclet.az.id] = nuclet;\n\n      if (nucletConf.nuclets) {\n        for (var id in nucletConf.nuclets) {\n          createNuclet(id, nucletConf.nuclets[id], nuclet);\n          activateNeutralProtons(id.charAt(id.length-1), nuclet, false, false);\n        }\n      }\n\n      return nucletOuterShell;\n    }\n\n    /**\n     * Execute AJAX command to load a new atom.\n     *\n     * @param nid\n     */\n    var loadAtom = function loadAtom (nid, callback) {\n      loadCallback = callback;\n      Drupal.atomizer.base.doAjax(\n        '/ajax-ab/loadAtom',\n        { nid: nid },\n        doCreateAtom\n      );\n    };\n\n    /**\n     * Create an atom\n     *\n     * @param results\n     */\n    var doCreateAtom = function doCreateAtom (results) {\n      var az;\n      for (var i = 0; i < results.length; i++) {\n        var result = results[i];\n        if (result.command == 'loadAtomCommand') {\n          if (atomInformation) {\n            atomInformation.innerHTML = result.data.teaser;\n          }\n          jQuery('#atom--save a').replaceWith(result.data.link);\n          if (Drupal.attachBehaviors) {\n            Drupal.attachBehaviors('#atom--save a');\n          }\n\n          if (atom) {\n            // Remove any atom's currently displayed\n            viewer.scene.remove(atom);\n            az = atom.az;\n          } else {\n            az = {nuclets: {}}\n          }\n\n          createAtom(result.data.atomConf['N0']);\n          atom.az.nid = result.data.nid;\n          viewer.producer.atomLoaded(atom);\n\n//        var link = document.getElementById('atom--save').querySelector('a');\n//        link.setAttribute('href', '/node/' + result.data.nid + '/edit');\n          if (loadCallback) {\n            loadCallback();\n          }\n        }\n      }\n    };\n\n    var createAtom = function createAtom (atomConf) {\n      // Create the atom group - create first nuclet, remaining nuclets are created recursively.\n      atom = new THREE.Group();\n      atom.name = 'atom';\n      atom.az = {nuclets: {}};\n      viewer.atom.atom = atom;\n      createNuclet('N0', atomConf, atom);\n      setValenceRings();\n      showStats();\n\n      viewer.scene.add(atom);\n      viewer.render();\n\n      return atom;\n    };\n\n    /**\n     * Check all valence rings and color active/inactive rings - count total Active and update atom information.\n     */\n    function setValenceRings() {\n      var numActive = 0;\n      var activeColor = viewer.theme.get('valence-active--color');\n      var inactiveColor = viewer.theme.get('valence-inactive--color');\n      for (var n in atom.az.nuclets) {\n        var nuclet = atom.az.nuclets[n];\n        if (nuclet.az.state === 'initial' || nuclet.az.state === 'final') {\n          for (var r in nuclet.az.rings) {\n            if (!nuclet.az.rings.hasOwnProperty(r)) continue;\n            var ring = nuclet.az.rings[r];\n            var gid = nuclet.az.id + ring.az.grow;\n            var color = activeColor;\n            if (atom.az.nuclets[nuclet.az.id + ring.az.grow] ||\n              (nuclet.az.protons[ring.az.lock[0]].az.visible && nuclet.az.protons[ring.az.lock[1]].az.visible)) {\n              color = inactiveColor;\n            } else {\n              numActive++;\n            }\n            ring.material.color.setHex(parseInt(color.replace(/#/, \"0x\")), 16);\n          }\n        }\n      }\n      return;\n    }\n\n    function showStats() {\n      var numProtons = 0;\n      var numNuclets = 0;\n      var numUnclassified = 0;\n      for (var n in atom.az.nuclets) {\n        numNuclets++;\n        var nuclet = atom.az.nuclets[n];\n        for (var p in nuclet.az.protons) {\n          var proton = nuclet.az.protons[p];\n          if (!proton.az) {\n            numUnclassified++;\n          }\n          else if (proton.az.visible) {\n            numProtons++;\n          }\n        }\n      }\n\n      $('#atom--num-protons .text-value').html(numProtons);\n    }\n\n    /**\n     * Add a single proton to the current atom.\n     *\n     * @param nuclet\n     * @param face\n     */\n    var addProton = function addProton (nuclet, face) {\n      // Ok, so we have our first proton to add.  We are adding it to an existing nuclet.\n    };\n\n    /**\n     * The atom has been saved, display a message to the user. @TODO\n     *\n     * @param response\n     */\n    var savedYml = function (response) {\n      var select = $('#theme--selectyml')[0].querySelector('select');\n      // Remove current options\n    }\n\n    /**\n     * Initiate the AJAX call to save the current atom as a new atom.\n     *\n     * @param controls\n     */\n    var saveYml = function (controls) {\n      // Verify they entered a name.  If not popup an alert. return\n      currentSet.name = controls.name;\n      currentSet.filename = controls.filename;\n      Drupal.atomizer.base.doAjax(\n        '/ajax-ab/saveYml',\n        { name: controls.name,\n          component: 'theme',\n          filename: controls.filename,\n          ymlContents: currentSet },\n        savedYml\n      );\n    };\n\n    /**\n     * Initiate the AJAX call to overwrite the current atom with changes.\n     *\n     * @param controls\n     */\n    var overwriteYml = function (controls) {\n      // Verify they entered a name.  If not popup an alert. return\n      Drupal.atomizer.base.doAjax(\n        '/ajax-ab/saveYml',\n        { name: currentSet.name,\n          component: 'theme',\n          filename: currentSet.filename,\n          ymlContents: currentSet },\n        null  // TODO: Put in useful error codes and have them be displayed.\n      );\n    };\n\n\n    /**\n     * User pressed a button on the main form - act on it.\n     *\n     * @param id\n     */\n    var buttonClicked = function buttonClicked(button) {\n      if (button.id == 'atom--select') {\n        $viewSelectAtom.toggleClass('enabled');\n      }\n\n//  location.href = 'ajax-ab/loadAtomForm';\n      /*\n       if (id == 'atom--new') {\n       Drupal.atomizer.base.doAjax(\n       '/ajax-ab/loadAtomForm',\n       { component: 'atom'\n       },\n       dialogDisplayed  // function to call on completion.\n       );\n       // Run AJAX command to popup node-atom-form\n       }\n       */\n    };\n\n    $('#atom--select-close').click(function () {\n      $viewSelectAtom.toggleClass('enabled');\n    });\n\n    /**\n     * User has selected an atom from the select popup, load the atom.\n     *\n     * @param event\n     */\n    function onSelectAtom(event) {\n      // Extract the node id from class nid\n      var nid = event.target.id.split('-')[1];\n      loadAtom(nid, null);\n      event.preventDefault();\n      return;\n    }\n\n    /**\n     * Extract the text description of the atom currently displayed.\n     *\n     * @returns {*}\n     */\n    function extractStructure () {\n\n      /**\n       * Recursive function to extract a nuclets information.\n       *\n       * @param id\n       * @param spacing\n       * @returns {string}\n       */\n      function addNucletToStructure(id, spacing) {\n        var nuclet = atom.az.nuclets[id];\n        var out = spacing + id + ':\\n';\n        spacing += '  ';\n        out += spacing + 'state: ' + nuclet.az.state + '\\n';\n        if (id !== 'N0') {\n          out += spacing + 'attachAngle: ' + nuclet.az.conf.attachAngle + '\\n';\n        }\n\n        // Add the protons.\n        out += spacing + 'protons: ['\n        var np = 0;\n        for (var i = 0; i < nuclet.az.protons.length; i++) {\n          if (nuclet.az.protons[i]) {\n            var proton = nuclet.az.protons[i];\n            if (proton.az.active && proton.az.visible) {\n              if (np++) {\n                out += ', ' ;\n              }\n              out += i;\n            }\n          }\n        }\n        out += ']\\n';\n\n        // Recursively add the children nuclets.\n        var grow0 = atom.az.nuclets[id + '0'];\n        var grow1 = atom.az.nuclets[id + '1'];\n        if (grow0 || grow1) {\n          out += spacing + 'nuclets:\\n';\n          if (grow0) { out += addNucletToStructure(id + '0', spacing + '  '); }\n          if (grow1) { out += addNucletToStructure(id + '1', spacing + '  '); }\n        }\n        return out;\n      }\n\n      return addNucletToStructure('N0', '');\n    }\n\n    function addSelectAtomEventListeners() {\n      // Add Event listeners to atoms to select.\n      var $selectAtoms = $('.select-atom', $(viewer.context).parents('article'));\n      if ($selectAtoms) {\n        for (var i = 0; i < $selectAtoms.length; i++) {\n          $selectAtoms[i].addEventListener('click', onSelectAtom, false);\n        }\n//    jQuery('#az-dialog').dialog('option', 'draggable', true);\n      }\n    }\n\n    /**\n     * Define Drupal behavior attach functions.\n     *\n     * Nuclet Edit form popup\n     *   Attach Listener to \"Add nuclet\" button\n     * Atom Edit form popup\n     *   Populate Atomic Structure field with current Viewer contents.\n     *\n     * @type {{attach: Drupal.behaviors.atomizer_atom.attach}}\n     */\n    Drupal.behaviors.atomizer_atom = {\n      attach: function (context, settings) {\n        var value = '';\n\n        addSelectAtomEventListeners();\n\n        // If this is the node-atom-form being opened then fill in the atomic structure field.\n        var nodeForm = $('.node-atom-form, .node-atom-edit-form')[0];\n        if (nodeForm) {\n          var atomicStructure = nodeForm.getElementsByClassName('field--name-field-atomic-structure')[0];\n          var textarea = atomicStructure.getElementsByTagName('textarea')[0];\n          textarea.value = extractStructure();\n        }\n      }\n    };\n\n    addSelectAtomEventListeners();\n\n    /**\n     * Interface to this atomC.\n     */\n    return {\n      addNuclet: addNuclet,\n      addProton: addProton,\n      az: function () { return atom.az; },\n      buttonClicked: buttonClicked,\n      changeNucletState: changeNucletState,\n      changeNucletAngle: changeNucletAngle,\n      createAtom: createAtom,\n      deleteNuclet: deleteNuclet,\n      getNuclet: getNuclet,\n      getYmlDirectory: function () { return 'config/atom'; },\n      loadAtom: loadAtom,\n      overwriteYml: overwriteYml,\n      saveYml: saveYml,\n      setValenceRings: setValenceRings,\n      showStats: showStats\n    };\n  };\n\n})(jQuery);\n"]}