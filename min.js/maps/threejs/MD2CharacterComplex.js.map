{"version":3,"sources":["threejs/MD2CharacterComplex.js"],"names":["THREE","MD2CharacterComplex","loadTextures","baseUrl","textureUrls","textureLoader","TextureLoader","textures","i","length","load","checkLoadingComplete","mapping","UVMapping","name","createPart","geometry","skinMap","materialWireframe","MeshLambertMaterial","color","wireframe","morphTargets","morphNormals","materialTexture","map","mesh","MorphBlendMesh","rotation","y","Math","PI","autoCreateAnimations","scope","animationFPS","loadCounter","onLoadComplete","exponentialEaseOut","k","pow","this","scale","transitionFrames","maxSpeed","maxReverseSpeed","frontAcceleration","backAcceleration","frontDecceleration","angularSpeed","root","Object3D","meshBody","meshWeapon","controls","skinsBody","skinsWeapon","weapons","currentSkin","undefined","meshes","animations","speed","bodyOrientation","walkSpeed","crouchSpeed","activeAnimation","oldAnimation","enableShadows","enable","castShadow","receiveShadow","setVisible","visible","shareParts","original","set","position","add","push","loadParts","config","skins","weaponsTextures","loader","MD2Loader","body","geo","computeBoundingBox","boundingBox","min","index","generateCallback","setPlaybackRate","rate","duration","baseDuration","setWireframe","wireframeEnabled","material","setSkin","setWeapon","activeWeapon","playAnimation","setAnimationTime","getAnimationTime","setAnimation","animationName","setAnimationWeight","blendCounter","update","delta","updateMovementModel","updateBehaviors","updateAnimations","mix","moveAnimation","idleAnimation","crouch","jump","attack","moveForward","moveBackward","moveLeft","moveRight","abs","setAnimationDirectionForward","setAnimationDirectionBackward","clamp","forwardDelta","x","sin","z","cos"],"mappings":"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","file":"../../threejs/MD2CharacterComplex.js","sourcesContent":["/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MD2CharacterComplex = function () {\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.scale = 1;\r\n\r\n\t// animation parameters\r\n\r\n\tthis.animationFPS = 6;\r\n\tthis.transitionFrames = 15;\r\n\r\n\t// movement model parameters\r\n\r\n\tthis.maxSpeed = 275;\r\n\tthis.maxReverseSpeed = - 275;\r\n\r\n\tthis.frontAcceleration = 600;\r\n\tthis.backAcceleration = 600;\r\n\r\n\tthis.frontDecceleration = 600;\r\n\r\n\tthis.angularSpeed = 2.5;\r\n\r\n\t// rig\r\n\r\n\tthis.root = new THREE.Object3D();\r\n\r\n\tthis.meshBody = null;\r\n\tthis.meshWeapon = null;\r\n\r\n\tthis.controls = null;\r\n\r\n\t// skins\r\n\r\n\tthis.skinsBody = [];\r\n\tthis.skinsWeapon = [];\r\n\r\n\tthis.weapons = [];\r\n\r\n\tthis.currentSkin = undefined;\r\n\r\n\t//\r\n\r\n\tthis.onLoadComplete = function () {};\r\n\r\n\t// internals\r\n\r\n\tthis.meshes = [];\r\n\tthis.animations = {};\r\n\r\n\tthis.loadCounter = 0;\r\n\r\n\t// internal movement control variables\r\n\r\n\tthis.speed = 0;\r\n\tthis.bodyOrientation = 0;\r\n\r\n\tthis.walkSpeed = this.maxSpeed;\r\n\tthis.crouchSpeed = this.maxSpeed * 0.5;\r\n\r\n\t// internal animation parameters\r\n\r\n\tthis.activeAnimation = null;\r\n\tthis.oldAnimation = null;\r\n\r\n\t// API\r\n\r\n\tthis.enableShadows = function ( enable ) {\r\n\r\n\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\r\n\r\n\t\t\tthis.meshes[ i ].castShadow = enable;\r\n\t\t\tthis.meshes[ i ].receiveShadow = enable;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setVisible = function ( enable ) {\r\n\r\n\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\r\n\r\n\t\t\tthis.meshes[ i ].visible = enable;\r\n\t\t\tthis.meshes[ i ].visible = enable;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tthis.shareParts = function ( original ) {\r\n\r\n\t\tthis.animations = original.animations;\r\n\t\tthis.walkSpeed = original.walkSpeed;\r\n\t\tthis.crouchSpeed = original.crouchSpeed;\r\n\r\n\t\tthis.skinsBody = original.skinsBody;\r\n\t\tthis.skinsWeapon = original.skinsWeapon;\r\n\r\n\t\t// BODY\r\n\r\n\t\tvar mesh = createPart( original.meshBody.geometry, this.skinsBody[ 0 ] );\r\n\t\tmesh.scale.set( this.scale, this.scale, this.scale );\r\n\r\n\t\tthis.root.position.y = original.root.position.y;\r\n\t\tthis.root.add( mesh );\r\n\r\n\t\tthis.meshBody = mesh;\r\n\r\n\t\tthis.meshes.push( mesh );\r\n\r\n\t\t// WEAPONS\r\n\r\n\t\tfor ( var i = 0; i < original.weapons.length; i ++ ) {\r\n\r\n\t\t\tvar meshWeapon = createPart( original.weapons[ i ].geometry, this.skinsWeapon[ i ] );\r\n\t\t\tmeshWeapon.scale.set( this.scale, this.scale, this.scale );\r\n\t\t\tmeshWeapon.visible = false;\r\n\r\n\t\t\tmeshWeapon.name = original.weapons[ i ].name;\r\n\r\n\t\t\tthis.root.add( meshWeapon );\r\n\r\n\t\t\tthis.weapons[ i ] = meshWeapon;\r\n\t\t\tthis.meshWeapon = meshWeapon;\r\n\r\n\t\t\tthis.meshes.push( meshWeapon );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.loadParts = function ( config ) {\r\n\r\n\t\tthis.animations = config.animations;\r\n\t\tthis.walkSpeed = config.walkSpeed;\r\n\t\tthis.crouchSpeed = config.crouchSpeed;\r\n\r\n\t\tthis.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\r\n\r\n\t\tvar weaponsTextures = [];\r\n\t\tfor ( var i = 0; i < config.weapons.length; i ++ ) weaponsTextures[ i ] = config.weapons[ i ][ 1 ];\r\n\r\n\t\t// SKINS\r\n\r\n\t\tthis.skinsBody = loadTextures( config.baseUrl + \"skins/\", config.skins );\r\n\t\tthis.skinsWeapon = loadTextures( config.baseUrl + \"skins/\", weaponsTextures );\r\n\r\n\t\t// BODY\r\n\r\n\t\tvar loader = new THREE.MD2Loader();\r\n\r\n\t\tloader.load( config.baseUrl + config.body, function( geo ) {\r\n\r\n\t\t\tgeo.computeBoundingBox();\r\n\t\t\tscope.root.position.y = - scope.scale * geo.boundingBox.min.y;\r\n\r\n\t\t\tvar mesh = createPart( geo, scope.skinsBody[ 0 ] );\r\n\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\r\n\r\n\t\t\tscope.root.add( mesh );\r\n\r\n\t\t\tscope.meshBody = mesh;\r\n\t\t\tscope.meshes.push( mesh );\r\n\r\n\t\t\tcheckLoadingComplete();\r\n\r\n\t\t} );\r\n\r\n\t\t// WEAPONS\r\n\r\n\t\tvar generateCallback = function ( index, name ) {\r\n\r\n\t\t\treturn function( geo ) {\r\n\r\n\t\t\t\tvar mesh = createPart( geo, scope.skinsWeapon[ index ] );\r\n\t\t\t\tmesh.scale.set( scope.scale, scope.scale, scope.scale );\r\n\t\t\t\tmesh.visible = false;\r\n\r\n\t\t\t\tmesh.name = name;\r\n\r\n\t\t\t\tscope.root.add( mesh );\r\n\r\n\t\t\t\tscope.weapons[ index ] = mesh;\r\n\t\t\t\tscope.meshWeapon = mesh;\r\n\t\t\t\tscope.meshes.push( mesh );\r\n\r\n\t\t\t\tcheckLoadingComplete();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0; i < config.weapons.length; i ++ ) {\r\n\r\n\t\t\tloader.load( config.baseUrl + config.weapons[ i ][ 0 ], generateCallback( i, config.weapons[ i ][ 0 ] ) );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPlaybackRate = function ( rate ) {\r\n\r\n\t\tif ( this.meshBody ) this.meshBody.duration = this.meshBody.baseDuration / rate;\r\n\t\tif ( this.meshWeapon ) this.meshWeapon.duration = this.meshWeapon.baseDuration / rate;\r\n\r\n\t};\r\n\r\n\tthis.setWireframe = function ( wireframeEnabled ) {\r\n\r\n\t\tif ( wireframeEnabled ) {\r\n\r\n\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialWireframe;\r\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialWireframe;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.meshBody ) this.meshBody.material = this.meshBody.materialTexture;\r\n\t\t\tif ( this.meshWeapon ) this.meshWeapon.material = this.meshWeapon.materialTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setSkin = function( index ) {\r\n\r\n\t\tif ( this.meshBody && this.meshBody.material.wireframe === false ) {\r\n\r\n\t\t\tthis.meshBody.material.map = this.skinsBody[ index ];\r\n\t\t\tthis.currentSkin = index;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setWeapon = function ( index ) {\r\n\r\n\t\tfor ( var i = 0; i < this.weapons.length; i ++ ) this.weapons[ i ].visible = false;\r\n\r\n\t\tvar activeWeapon = this.weapons[ index ];\r\n\r\n\t\tif ( activeWeapon ) {\r\n\r\n\t\t\tactiveWeapon.visible = true;\r\n\t\t\tthis.meshWeapon = activeWeapon;\r\n\r\n\t\t\tif ( this.activeAnimation ) {\r\n\r\n\t\t\t\tactiveWeapon.playAnimation( this.activeAnimation );\r\n\t\t\t\tthis.meshWeapon.setAnimationTime( this.activeAnimation, this.meshBody.getAnimationTime( this.activeAnimation ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setAnimation = function ( animationName ) {\r\n\r\n\t\tif ( animationName === this.activeAnimation || ! animationName ) return;\r\n\r\n\t\tif ( this.meshBody ) {\r\n\r\n\t\t\tthis.meshBody.setAnimationWeight( animationName, 0 );\r\n\t\t\tthis.meshBody.playAnimation( animationName );\r\n\r\n\t\t\tthis.oldAnimation = this.activeAnimation;\r\n\t\t\tthis.activeAnimation = animationName;\r\n\r\n\t\t\tthis.blendCounter = this.transitionFrames;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.meshWeapon ) {\r\n\r\n\t\t\tthis.meshWeapon.setAnimationWeight( animationName, 0 );\r\n\t\t\tthis.meshWeapon.playAnimation( animationName );\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\tthis.update = function ( delta ) {\r\n\r\n\t\tif ( this.controls ) this.updateMovementModel( delta );\r\n\r\n\t\tif ( this.animations ) {\r\n\r\n\t\t\tthis.updateBehaviors( delta );\r\n\t\t\tthis.updateAnimations( delta );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.updateAnimations = function ( delta ) {\r\n\r\n\t\tvar mix = 1;\r\n\r\n\t\tif ( this.blendCounter > 0 ) {\r\n\r\n\t\t\tmix = ( this.transitionFrames - this.blendCounter ) / this.transitionFrames;\r\n\t\t\tthis.blendCounter -= 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.meshBody ) {\r\n\r\n\t\t\tthis.meshBody.update( delta );\r\n\r\n\t\t\tthis.meshBody.setAnimationWeight( this.activeAnimation, mix );\r\n\t\t\tthis.meshBody.setAnimationWeight( this.oldAnimation,  1 - mix );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.meshWeapon ) {\r\n\r\n\t\t\tthis.meshWeapon.update( delta );\r\n\r\n\t\t\tthis.meshWeapon.setAnimationWeight( this.activeAnimation, mix );\r\n\t\t\tthis.meshWeapon.setAnimationWeight( this.oldAnimation,  1 - mix );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.updateBehaviors = function ( delta ) {\r\n\r\n\t\tvar controls = this.controls;\r\n\t\tvar animations = this.animations;\r\n\r\n\t\tvar moveAnimation, idleAnimation;\r\n\r\n\t\t// crouch vs stand\r\n\r\n\t\tif ( controls.crouch ) {\r\n\r\n\t\t\tmoveAnimation = animations[ \"crouchMove\" ];\r\n\t\t\tidleAnimation = animations[ \"crouchIdle\" ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmoveAnimation = animations[ \"move\" ];\r\n\t\t\tidleAnimation = animations[ \"idle\" ];\r\n\r\n\t\t}\r\n\r\n\t\t// actions\r\n\r\n\t\tif ( controls.jump ) {\r\n\r\n\t\t\tmoveAnimation = animations[ \"jump\" ];\r\n\t\t\tidleAnimation = animations[ \"jump\" ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( controls.attack ) {\r\n\r\n\t\t\tif ( controls.crouch ) {\r\n\r\n\t\t\t\tmoveAnimation = animations[ \"crouchAttack\" ];\r\n\t\t\t\tidleAnimation = animations[ \"crouchAttack\" ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmoveAnimation = animations[ \"attack\" ];\r\n\t\t\t\tidleAnimation = animations[ \"attack\" ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// set animations\r\n\r\n\t\tif ( controls.moveForward || controls.moveBackward || controls.moveLeft || controls.moveRight ) {\r\n\r\n\t\t\tif ( this.activeAnimation !== moveAnimation ) {\r\n\r\n\t\t\t\tthis.setAnimation( moveAnimation );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif ( Math.abs( this.speed ) < 0.2 * this.maxSpeed && ! ( controls.moveLeft || controls.moveRight || controls.moveForward || controls.moveBackward ) ) {\r\n\r\n\t\t\tif ( this.activeAnimation !== idleAnimation ) {\r\n\r\n\t\t\t\tthis.setAnimation( idleAnimation );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// set animation direction\r\n\r\n\t\tif ( controls.moveForward ) {\r\n\r\n\t\t\tif ( this.meshBody ) {\r\n\r\n\t\t\t\tthis.meshBody.setAnimationDirectionForward( this.activeAnimation );\r\n\t\t\t\tthis.meshBody.setAnimationDirectionForward( this.oldAnimation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.meshWeapon ) {\r\n\r\n\t\t\t\tthis.meshWeapon.setAnimationDirectionForward( this.activeAnimation );\r\n\t\t\t\tthis.meshWeapon.setAnimationDirectionForward( this.oldAnimation );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( controls.moveBackward ) {\r\n\r\n\t\t\tif ( this.meshBody ) {\r\n\r\n\t\t\t\tthis.meshBody.setAnimationDirectionBackward( this.activeAnimation );\r\n\t\t\t\tthis.meshBody.setAnimationDirectionBackward( this.oldAnimation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.meshWeapon ) {\r\n\r\n\t\t\t\tthis.meshWeapon.setAnimationDirectionBackward( this.activeAnimation );\r\n\t\t\t\tthis.meshWeapon.setAnimationDirectionBackward( this.oldAnimation );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.updateMovementModel = function ( delta ) {\r\n\r\n\t\tvar controls = this.controls;\r\n\r\n\t\t// speed based on controls\r\n\r\n\t\tif ( controls.crouch ) \tthis.maxSpeed = this.crouchSpeed;\r\n\t\telse this.maxSpeed = this.walkSpeed;\r\n\r\n\t\tthis.maxReverseSpeed = - this.maxSpeed;\r\n\r\n\t\tif ( controls.moveForward )  this.speed = THREE.Math.clamp( this.speed + delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed );\r\n\t\tif ( controls.moveBackward ) this.speed = THREE.Math.clamp( this.speed - delta * this.backAcceleration, this.maxReverseSpeed, this.maxSpeed );\r\n\r\n\t\t// orientation based on controls\r\n\t\t// (don't just stand while turning)\r\n\r\n\t\tvar dir = 1;\r\n\r\n\t\tif ( controls.moveLeft ) {\r\n\r\n\t\t\tthis.bodyOrientation += delta * this.angularSpeed;\r\n\t\t\tthis.speed = THREE.Math.clamp( this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed );\r\n\r\n\t\t}\r\n\r\n\t\tif ( controls.moveRight ) {\r\n\r\n\t\t\tthis.bodyOrientation -= delta * this.angularSpeed;\r\n\t\t\tthis.speed = THREE.Math.clamp( this.speed + dir * delta * this.frontAcceleration, this.maxReverseSpeed, this.maxSpeed );\r\n\r\n\t\t}\r\n\r\n\t\t// speed decay\r\n\r\n\t\tif ( ! ( controls.moveForward || controls.moveBackward ) ) {\r\n\r\n\t\t\tif ( this.speed > 0 ) {\r\n\r\n\t\t\t\tvar k = exponentialEaseOut( this.speed / this.maxSpeed );\r\n\t\t\t\tthis.speed = THREE.Math.clamp( this.speed - k * delta * this.frontDecceleration, 0, this.maxSpeed );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar k = exponentialEaseOut( this.speed / this.maxReverseSpeed );\r\n\t\t\t\tthis.speed = THREE.Math.clamp( this.speed + k * delta * this.backAcceleration, this.maxReverseSpeed, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// displacement\r\n\r\n\t\tvar forwardDelta = this.speed * delta;\r\n\r\n\t\tthis.root.position.x += Math.sin( this.bodyOrientation ) * forwardDelta;\r\n\t\tthis.root.position.z += Math.cos( this.bodyOrientation ) * forwardDelta;\r\n\r\n\t\t// steering\r\n\r\n\t\tthis.root.rotation.y = this.bodyOrientation;\r\n\r\n\t};\r\n\r\n\t// internal helpers\r\n\r\n\tfunction loadTextures( baseUrl, textureUrls ) {\r\n\r\n\t\tvar textureLoader = new THREE.TextureLoader();\r\n\t\tvar textures = [];\r\n\r\n\t\tfor ( var i = 0; i < textureUrls.length; i ++ ) {\r\n\r\n\t\t\ttextures[ i ] = textureLoader.load( baseUrl + textureUrls[ i ], checkLoadingComplete );\r\n\t\t\ttextures[ i ].mapping = THREE.UVMapping;\r\n\t\t\ttextures[ i ].name = textureUrls[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t}\r\n\r\n\tfunction createPart( geometry, skinMap ) {\r\n\r\n\t\tvar materialWireframe = new THREE.MeshLambertMaterial( { color: 0xffaa00, wireframe: true, morphTargets: true, morphNormals: true } );\r\n\t\tvar materialTexture = new THREE.MeshLambertMaterial( { color: 0xffffff, wireframe: false, map: skinMap, morphTargets: true, morphNormals: true } );\r\n\r\n\t\t//\r\n\r\n\t\tvar mesh = new THREE.MorphBlendMesh( geometry, materialTexture );\r\n\t\tmesh.rotation.y = - Math.PI / 2;\r\n\r\n\t\t//\r\n\r\n\t\tmesh.materialTexture = materialTexture;\r\n\t\tmesh.materialWireframe = materialWireframe;\r\n\r\n\t\t//\r\n\r\n\t\tmesh.autoCreateAnimations( scope.animationFPS );\r\n\r\n\t\treturn mesh;\r\n\r\n\t}\r\n\r\n\tfunction checkLoadingComplete() {\r\n\r\n\t\tscope.loadCounter -= 1;\r\n\t\tif ( scope.loadCounter === 0 ) \tscope.onLoadComplete();\r\n\r\n\t}\r\n\r\n\tfunction exponentialEaseOut( k ) {\r\n\r\n\t\treturn k === 1 ? 1 : - Math.pow( 2, - 10 * k ) + 1;\r\n\r\n\t}\r\n\r\n};\r\n"]}