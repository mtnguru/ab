THREE.TypedArrayUtils={},THREE.TypedArrayUtils.quicksortIP=function(t,n,e){for(var o,r,i=[],s=-1,h=0,c=t.length/n-1,u=0,l=0,f=0,a=function(e,o){for(e*=n,o*=n,f=0;f<n;f++)u=t[e+f],t[e+f]=t[o+f],t[o+f]=u},p=new Float32Array(n),y=new Float32Array(n);;)if(c-h<=25){for(r=h+1;r<=c;r++){for(l=0;l<n;l++)p[l]=t[r*n+l];for(o=r-1;o>=h&&t[o*n+e]>p[e];){for(l=0;l<n;l++)t[(o+1)*n+l]=t[o*n+l];o--}for(l=0;l<n;l++)t[(o+1)*n+l]=p[l]}if(-1==s)break;c=i[s--],h=i[s--]}else{for(r=c,a(h+c>>1,o=h+1),t[h*n+e]>t[c*n+e]&&a(h,c),t[o*n+e]>t[c*n+e]&&a(o,c),t[h*n+e]>t[o*n+e]&&a(h,o),l=0;l<n;l++)y[l]=t[o*n+l];for(;;){do{o++}while(t[o*n+e]<y[e]);do{r--}while(t[r*n+e]>y[e]);if(r<o)break;a(o,r)}for(l=0;l<n;l++)t[(h+1)*n+l]=t[r*n+l],t[r*n+l]=y[l];c-o+1>=r-h?(i[++s]=o,i[++s]=c,c=r-1):(i[++s]=h,i[++s]=r-1,h=o)}return t},THREE.TypedArrayUtils.Kdtree=function(t,n,e){function o(t,n,h,c){var u,l,f=n%e,a=t.length/e;return n>i&&(i=n),0===a?null:1===a?new r.Node(s(t,0),n,h,c):(THREE.TypedArrayUtils.quicksortIP(t,e,f),u=Math.floor(a/2),l=new r.Node(s(t,u),n,h,u+c),l.left=o(t.subarray(0,u*e),n+1,l,c),l.right=o(t.subarray((u+1)*e,t.length),n+1,l,c+u+1),l)}var r=this,i=0,s=function(t,n){return t.subarray(n*e,n*e+e)};this.root=o(t,0,null,0),this.getMaxDepth=function(){return i},this.nearest=function(t,o,i){function s(r){function i(t,n){u.push([t,n]),u.size()>o&&u.pop()}var h,c,l,f=r.depth%e,a=n(t,r.obj),p=0,y=[];for(l=0;l<e;l+=1)l===r.depth%e?y[l]=t[l]:y[l]=r.obj[l];p=n(y,r.obj),null!==r.right||null!==r.left?(s(h=null===r.right?r.left:null===r.left?r.right:t[f]<r.obj[f]?r.left:r.right),(u.size()<o||a<u.peek()[1])&&i(r,a),(u.size()<o||Math.abs(p)<u.peek()[1])&&null!==(c=h===r.left?r.right:r.left)&&s(c)):(u.size()<o||a<u.peek()[1])&&i(r,a)}var h,c,u;if(u=new THREE.TypedArrayUtils.Kdtree.BinaryHeap(function(t){return-t[1]}),i)for(h=0;h<o;h+=1)u.push([null,i]);for(s(r.root),c=[],h=0;h<o;h+=1)u.content[h][0]&&c.push([u.content[h][0],u.content[h][1]]);return c}},THREE.TypedArrayUtils.Kdtree.prototype.Node=function(t,n,e,o){this.obj=t,this.left=null,this.right=null,this.parent=e,this.depth=n,this.pos=o},THREE.TypedArrayUtils.Kdtree.BinaryHeap=function(t){this.content=[],this.scoreFunction=t},THREE.TypedArrayUtils.Kdtree.BinaryHeap.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,e=0;e<n;e++)if(this.content[e]==t){var o=this.content.pop();return void(e!=n-1&&(this.content[e]=o,this.scoreFunction(o)<this.scoreFunction(t)?this.bubbleUp(e):this.sinkDown(e)))}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var e=Math.floor((t+1)/2)-1,o=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(o)))break;this.content[e]=n,this.content[t]=o,t=e}},sinkDown:function(t){for(var n=this.content.length,e=this.content[t],o=this.scoreFunction(e);;){var r=2*(t+1),i=r-1,s=null;if(i<n){var h=this.content[i],c=this.scoreFunction(h);c<o&&(s=i)}if(r<n){var u=this.content[r];this.scoreFunction(u)<(null===s?o:c)&&(s=r)}if(null===s)break;this.content[t]=this.content[s],this.content[s]=e,t=s}}};
//# sourceMappingURL=../maps/threejs/TypedArrayUtils.js.map
