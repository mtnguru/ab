{"version":3,"sources":["az_animation.js"],"names":["$","Drupal","atomizer","animationC","_viewer","advanceOrbitals","rotSpeed","viewer","theme","get","x","camera","position","y","z","Math","cos","sin","lookAt","scene","play","currentFile","$selectAnimation","val","animateFile","base","doAjax","directory","animateDirectory","filepath","filename","component","loadYml","state","animate","startAnimation","stopTimers","timeout","animateConf","clearTimeout","timeouts","startTimers","timerName","timerConf","setTimeout","applyTimer","time","name","conf","currentAtom","atoms","length","atom","loadAtom","nid","timers","loadatoms","animations","requestAnimationFrame","rotation","render","$buttons","find","results","data","ymlContents","localStorage","setItem","buttonClicked","button","id","removeClass","addClass","jQuery"],"mappings":"CAOA,SAAUA,GACR,aAEAC,OAAOC,SAASC,WAAa,SAAUC,GA8BrC,SAASC,IAEP,IAAIC,EAAWC,EAAOC,MAAMC,IAAI,oBAAsB,IAElDC,EAAIH,EAAOI,OAAOC,SAASF,EAC7BG,EAAIN,EAAOI,OAAOC,SAASC,EAC3BC,EAAIP,EAAOI,OAAOC,SAASE,EAE7BP,EAAOI,OAAOC,SAASF,EAAIA,EAAIK,KAAKC,IAAIV,GAAYQ,EAAIC,KAAKE,IAAIX,GACjEC,EAAOI,OAAOC,SAASC,EAAIA,EAAIE,KAAKC,IAAIV,GAAYI,EAAIK,KAAKE,IAAIX,GACjEC,EAAOI,OAAOC,SAASE,EAAIA,EAAIC,KAAKC,IAAIV,GAAYI,EAAIK,KAAKE,IAAIX,GAEjEC,EAAOI,OAAOO,OAAOX,EAAOY,MAAMP,UAGpC,SAASQ,IACP,IAAIC,EAAcC,EAAiBC,MAC/BC,GAAeH,GAEjBG,EAAcH,EACdpB,OAAOC,SAASuB,KAAKC,OACnB,oBAEEC,UAAWpB,EAAOL,SAAS0B,iBAC3BC,SAAUtB,EAAOL,SAAS0B,iBAAmB,IAAMJ,EACnDM,SAAUN,EACVO,UAAW,aAEbC,IAGW,UAATC,GACFA,EAAQ,UACRC,KAEAC,IAKN,SAASC,IACP,IAAK,IAAIC,KAAWC,EAAoB,OACtCC,aAAaC,EAASH,IAExBG,KAGF,SAASC,IACP,IAAK,IAAIC,KAAaJ,EAAoB,OAAG,CAC3C,IAAIK,EAAYL,EAAoB,OAAEI,GACtCF,EAASE,GAAaE,WAAW,WAC/BC,EAAWH,EAAWC,IACrBA,EAAUG,OAIjB,SAASD,EAAWE,EAAMC,GACxB,OAAQD,GACN,IAAK,YACCE,GAAeD,EAAKE,MAAMC,OAAS,EACrCF,EAAc,EAEdA,IAGFb,IACAH,EAAQ,SACR1B,EAAO6C,KAAKC,SAASL,EAAKE,MAAMD,GAAaK,IAAK,WAC5CN,EAAKE,MAAMD,GAAaH,OACzBE,EAAKF,KAAOE,EAAKE,MAAMD,GAAaH,SAgB/C,SAASX,IACPF,EAAQ,UAEJK,EAAoB,SAClBA,EAAYiB,OAAOC,YACrBlB,EAAYiB,OAAOC,UAAUV,KAAOR,EAAYiB,OAAOC,UAAUN,MAAM,GAAGJ,MAE5EL,KAGEH,EAAYmB,aACdxB,EAAQ,UACRC,KAIJ,SAASA,IACM,WAATD,GACFyB,sBAAsBxB,GAEpBI,EAAYmB,WAAWE,UACoB,aAAzCrB,EAAYmB,WAAWE,SAASZ,MAClC1C,IAIJE,EAAOqD,SA5IT,IAGIpC,EACAc,EAJA/B,EAASH,EACT6B,EAAQ,UAIRX,EAAmBtB,EAAE,gCACrBwC,KACAS,GAAe,EAIfY,EADW7D,EAAE,+BACO8D,KAAK,cAEzB9B,EAAU,SAAU+B,GAEtBvC,EAAcuC,EAAQ,GAAGC,KAAKlC,SAC9BQ,EAAcyB,EAAQ,GAAGE,YACzBC,aAAaC,QAAQ,0BAA2B3C,GAGhDF,EAAiBC,IAAIC,GACrBW,KAwJF,OACEiC,cA/BkB,SAAuBC,GACzC,OAAQA,EAAOC,IACb,IAAK,kBACHlD,IACAyC,EAASU,YAAY,eACrBvE,EAAEqE,GAAQG,SAAS,eACnB,MAEF,IAAK,mBACHvC,EAAQ,SACRG,IACAyB,EAASU,YAAY,eACrBvE,EAAEqE,GAAQG,SAAS,eACnB,MAEF,IAAK,kBACHvC,EAAQ,UACRG,IACAyB,EAASU,YAAY,eACrBvE,EAAEqE,GAAQG,SAAS,iBAavBxC,QAASA,IAnLf,CAsLGyC","file":"../az_animation.js","sourcesContent":["/**\n * @file - az_animation.js\n *\n * Class to manage and apply settings\n * Sets the color, position, opacity, linewidth, or rendered items.\n */\n\n(function($) {\n  'use strict';\n\n  Drupal.atomizer.animationC = function (_viewer) {\n    var viewer = _viewer;\n    var state = 'stopped';\n    var animation;\n    var animateFile;\n    var animateConf;\n    var $selectAnimation = $('#animation--selectyml select');\n    var timeouts = {};\n    var currentAtom = -1;\n    var atomIndex = null;\n\n    var $wrapper = $('#blocks--animation--wrapper');\n    var $buttons = $wrapper.find('.az-button');\n\n    var loadYml = function (results) {\n      // Save the theme file name in browser local storage.\n      animateFile = results[0].data.filename;\n      animateConf = results[0].ymlContents;\n      localStorage.setItem('atomizer_animation_file', animateFile);\n\n      // Set the theme select list to the currently loaded file.\n      $selectAnimation.val(animateFile);\n      startAnimation();\n    };\n\n    /**\n     * Perform animations.\n     *\n     * @TODO - make this only executed when the mouse has been moved or clicked recently - otherwise deactivate it.\n     */\n    function advanceOrbitals() {\n\n      var rotSpeed = viewer.theme.get('animation--speed') / 1000;\n\n      var x = viewer.camera.position.x,\n        y = viewer.camera.position.y,\n        z = viewer.camera.position.z;\n\n      viewer.camera.position.x = x * Math.cos(rotSpeed) + z * Math.sin(rotSpeed);\n      viewer.camera.position.y = y * Math.cos(rotSpeed) - x * Math.sin(rotSpeed);\n      viewer.camera.position.z = z * Math.cos(rotSpeed) - x * Math.sin(rotSpeed);\n\n      viewer.camera.lookAt(viewer.scene.position);\n    };\n\n    function play() {\n      var currentFile = $selectAnimation.val();\n      if (animateFile != currentFile) {\n        // Check to see if file is loaded, load if necessary.\n        animateFile = currentFile;\n        Drupal.atomizer.base.doAjax(\n          '/ajax-ab/loadYml',\n          {\n            directory: viewer.atomizer.animateDirectory,\n            filepath: viewer.atomizer.animateDirectory + '/' + animateFile,\n            filename: animateFile,\n            component: 'animation'\n          },\n          loadYml\n        );\n      } else {\n        if (state == 'paused') {\n          state = 'running';\n          animate();\n        } else {\n          startAnimation();\n        }\n      }\n    }\n\n    function stopTimers() {\n      for (var timeout in animateConf['timers']) {\n        clearTimeout(timeouts[timeout]);\n      }\n      timeouts = {};\n    }\n\n    function startTimers() {\n      for (var timerName in animateConf['timers']) {\n        var timerConf = animateConf['timers'][timerName];\n        timeouts[timerName] = setTimeout(function() {\n          applyTimer(timerName, timerConf);\n        }, timerConf.time);\n      }\n    }\n\n    function applyTimer(name, conf) {\n      switch (name) {\n        case 'loadatoms':\n          if (currentAtom >= conf.atoms.length - 1) {\n            currentAtom = 0;\n          } else {\n            currentAtom++;\n          }\n\n          stopTimers();\n          state = 'paused';\n          viewer.atom.loadAtom(conf.atoms[currentAtom].nid, function() {\n            if (conf.atoms[currentAtom].time) {\n               conf.time = conf.atoms[currentAtom].time;\n            }\n            continueAnimation;\n          });\n          break;\n        case 'opacity':\n          break\n      }\n    }\n\n    function continueAnimation() {\n      startTimers();\n      state = 'running';\n      animate();\n    }\n\n    function startAnimation() {\n      state = 'running';\n      var key;\n      if (animateConf['timers']) {\n        if (animateConf.timers.loadatoms) {\n          animateConf.timers.loadatoms.time = animateConf.timers.loadatoms.atoms[0].time;\n        }\n        startTimers();\n      }\n\n      if (animateConf.animations) {\n        state = 'running';\n        animate();\n      }\n    }\n\n    function animate() {\n      if (state == 'running') {\n        requestAnimationFrame(animate);\n      }\n      if (animateConf.animations.rotation) {\n        if (animateConf.animations.rotation.name === 'orbitals') {\n          advanceOrbitals();\n        }\n      }\n\n      viewer.render();\n    }\n\n    var buttonClicked = function buttonClicked(button) {\n      switch (button.id) {\n        case 'animation--play':\n          play();\n          $buttons.removeClass('az-selected');\n          $(button).addClass('az-selected');\n          break;\n\n        case 'animation--pause':\n          state = 'paused';\n          stopTimers();\n          $buttons.removeClass('az-selected');\n          $(button).addClass('az-selected');\n          break;\n\n        case 'animation--stop':\n          state = 'stopped';\n          stopTimers();\n          $buttons.removeClass('az-selected');\n          $(button).addClass('az-selected');\n          break;\n\n        case 'animation--previous':\n          break;\n\n        case 'animation--next':\n          break;\n      }\n    };\n\n    return {\n      buttonClicked: buttonClicked,\n      loadYml: loadYml\n    };\n  };\n})(jQuery);\n\n"]}