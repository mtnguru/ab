THREE.BufferGeometryUtils={computeTangents:function(r){function e(r){q.fromArray(E,3*r),F.copy(q),b=f[r],B.copy(b),B.sub(q.multiplyScalar(q.dot(b))).normalize(),G.crossVectors(F,b),h=G.dot(u[r]),z=h<0?-1:1,i[4*r]=B.x,i[4*r+1]=B.y,i[4*r+2]=B.z,i[4*r+3]=z}var t=r.index,o=r.attributes;if(null!==t&&void 0!==o.position&&void 0!==o.normal&&void 0!==o.uv){var n=t.array,a=o.position.array,E=o.normal.array,c=o.uv.array,y=a.length/3;void 0===o.tangent&&r.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*y),4));for(var i=o.tangent.array,f=[],u=[],d=0;d<y;d++)f[d]=new THREE.Vector3,u[d]=new THREE.Vector3;var s=new THREE.Vector3,T=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector2,w=new THREE.Vector2,H=new THREE.Vector2,R=new THREE.Vector3,v=new THREE.Vector3,V=r.groups;0===V.length&&(V=[{start:0,count:n.length}]);for(var g=0,x=V.length;g<x;++g)for(var A=S=(M=V[g]).start,p=S+(U=M.count);A<p;A+=3)!function(r,e,t){s.fromArray(a,3*r),T.fromArray(a,3*e),l.fromArray(a,3*t),m.fromArray(c,2*r),w.fromArray(c,2*e),H.fromArray(c,2*t);var o=T.x-s.x,n=l.x-s.x,E=T.y-s.y,y=l.y-s.y,i=T.z-s.z,d=l.z-s.z,V=w.x-m.x,g=H.x-m.x,x=w.y-m.y,A=H.y-m.y,p=1/(V*A-g*x);R.set((A*o-x*n)*p,(A*E-x*y)*p,(A*i-x*d)*p),v.set((V*n-g*o)*p,(V*y-g*E)*p,(V*d-g*i)*p),f[r].add(R),f[e].add(R),f[t].add(R),u[r].add(v),u[e].add(v),u[t].add(v)}(n[A+0],n[A+1],n[A+2]);for(var z,b,h,B=new THREE.Vector3,G=new THREE.Vector3,q=new THREE.Vector3,F=new THREE.Vector3,g=0,x=V.length;g<x;++g)for(var M=V[g],S=M.start,U=M.count,A=S,p=S+U;A<p;A+=3)e(n[A+0]),e(n[A+1]),e(n[A+2])}else console.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}};
//# sourceMappingURL=../maps/threejs/BufferGeometryUtils.js.map
