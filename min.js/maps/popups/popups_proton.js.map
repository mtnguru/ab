{"version":3,"sources":["popups/popups_proton.js"],"names":["$","localStorage","getItem","setItem","Drupal","imager","popups","infoC","spec","popup","editField","Popups","Viewer","viewer","dspec","extend","name","autoOpen","title","zIndex","width","height","dialogClass","cssId","resizable","position","my","at","of","$selectButton","open","append","create","this","closest","find","click","e","dialogClose","preventDefault","baseC","dialogOnCreate","dialogOpen","dialogOnOpen","dialogUpdate","imagerShowInfo","dialogOnClose","dialogInit","$busy","show","core","ajaxProcess","settings","actions","displayEntity","url","action","uri","getImage","src","response","hide","$elem","removeClass","html","evt","id","replace","edit","dialogSelect","jQuery"],"mappings":"CAmBA,SAAWA,GACT,aAE+C,OAA3CC,aAAaC,QAAQ,mBACvBD,aAAaE,QAAQ,kBAAkB,GAazCC,OAAOC,OAAOC,OAAOC,MAAQ,SAAeC,GAC1C,IAEIC,EACAC,EAHAC,EAASP,OAAOC,OAAOC,OACvBM,EAASR,OAAOC,OAAOQ,OAIvBC,EAAQd,EAAEe,QACZC,KAAM,OACNC,UAAU,EACVC,MAAO,mBACPC,OAAQ,KACRC,MAAO,OACPC,OAAQ,OACRC,YAAa,mCACbC,MAAO,cACPC,WAAW,EACXC,UACEC,GAAI,OACJC,GAAI,QACJC,GAAIpB,EAAKqB,eAEXC,KAAM,WACW9B,EAAE,6BACR+B,OAAO,qHAElBC,OAAQ,WACNhC,EAAEiC,MAAMC,QAAQ,iBACbC,KAAK,6BACLC,MAAM,SAAUC,GACf5B,EAAM6B,cACND,EAAEE,qBAGP/B,GA8CH,OA5CAC,EAAQE,EAAO6B,MAAM1B,GAErBL,EAAMgC,eAAiB,WACrBhC,EAAMiC,cAGRjC,EAAMkC,aAAe,WACnBlC,EAAMmC,eACN3C,aAAa4C,eAAiB,QAGhCpC,EAAMqC,cAAgB,WACpB7C,aAAa4C,eAAiB,SAMhCpC,EAAMsC,WAAa,aAGnBtC,EAAMmC,aAAe,WACnBjC,EAAOqC,MAAMC,OACb7C,OAAOC,OAAO6C,KAAKC,YAAYlB,KAC7B7B,OAAOC,OAAO+C,SAASC,QAAQC,cAAcC,KAE3CC,OAAQ,iBACRC,IAAK7C,EAAO8C,WAAWC,KACtB,SAAUC,GACXjD,EAAOqC,MAAMa,OACbpD,EAAMD,KAAKsD,MAAMC,YAAY,SAASd,OAClCW,EAAe,OACjB5D,EAAE,wBAAwBgE,KAAKJ,EAAe,MAC9C5D,EAAE,qBAAqBoC,MAAM,SAAU6B,GACrCvD,EAAYuB,KAAKiC,GAAGC,QAAQ,UAAW,IACvCxD,EAAOyD,KAAKC,cACV3D,UAAWA,EACXmB,cAAe7B,EAAEiC,cAOtBxB,GAhGX,CAkGG6D","file":"../../popups/popups_proton.js","sourcesContent":["/**\n * @file\n * Create the file_entity Information dialog.\n */\n\n/*\n * Note: Variables ending with capital C or M designate Classes and Modules.\n * They can be found in their own files using the following convention:\n *   i.e. Drupal.imager.coreM is in file imager/js/imager.core.inc\n *        Drupal.imager.popups.baseC is in file imager/js/popups/imager.base.inc\n * Variables starting with $ are only used for jQuery 'wrapped sets' of objects.\n */\n\n\n/**\n * Wrap file in JQuery();.\n *\n * @param $\n */\n(function ($) {\n  'use strict';\n\n  if (localStorage.getItem('imagerShowInfo') === null) {\n    localStorage.setItem('imagerShowInfo', false);\n  }\n\n  /**\n   * Define the Information dialog class.\n   *\n   * @param {object} spec\n   *   Specifications for opening dialog, can also have ad-hoc properties\n   *   not used by jQuery dialog but needed for other purposes.\n   *\n   * @return {dialog}\n   *  Return the information dialog.\n   */\n  Drupal.imager.popups.infoC = function infoC(spec) {\n    var Popups = Drupal.imager.popups;\n    var Viewer = Drupal.imager.viewer;\n    var popup;\n    var editField;\n\n    var dspec = $.extend({\n      name: 'Info',\n      autoOpen: false,\n      title: 'File Information',\n      zIndex: 1015,\n      width: 'auto',\n      height: 'auto',\n      dialogClass: 'imager-dialog imager-info-dialog',\n      cssId: 'imager-info',\n      resizable: true,\n      position: {\n        my: 'left',\n        at: 'right',\n        of: spec.$selectButton\n      },\n      open: function () {\n        var closeBtn = $('.ui-dialog-titlebar-close');\n        closeBtn.append('<span class=\"ui-button-icon-primary ui-icon ui-icon-closethick\"></span><span class=\"ui-button-text\">close</span>');\n      },\n      create: function () {\n        $(this).closest('div.ui-dialog')\n          .find('.ui-dialog-titlebar-close')\n          .click(function (e) {\n            popup.dialogClose();\n            e.preventDefault();\n          });\n      }\n    }, spec);\n    // Initialize the popup.\n    popup = Popups.baseC(dspec);\n\n    popup.dialogOnCreate = function dialogOnCreate() {\n      popup.dialogOpen();\n    };\n\n    popup.dialogOnOpen = function dialogOnOpen() {\n      popup.dialogUpdate();\n      localStorage.imagerShowInfo = 'true';\n    };\n\n    popup.dialogOnClose = function dialogOnClose() {\n      localStorage.imagerShowInfo = 'false';\n    };\n\n    /**\n     * Initialize checkboxes from localStorage\n     */\n    popup.dialogInit = function dialogInit() {\n    };\n\n    popup.dialogUpdate = function dialogUpdate() {\n      Popups.$busy.show();\n      Drupal.imager.core.ajaxProcess(this,\n        Drupal.imager.settings.actions.displayEntity.url,\n        {\n          action: 'display-entity',\n          uri: Viewer.getImage().src\n        }, function (response) {\n          Popups.$busy.hide();\n          popup.spec.$elem.removeClass('error').show();\n          if (response['data']) {\n            $('#imager-info-content').html(response['data']);\n            $('.imager-info-edit').click(function (evt) {\n              editField = this.id.replace('imager-', '');\n              Popups.edit.dialogSelect({\n                editField: editField,\n                $selectButton: $(this)\n              });\n            });\n          }\n        });\n    };\n\n    return popup;\n  };\n})(jQuery);\n"]}