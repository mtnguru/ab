{"version":3,"sources":["physijs/physijs_worker.js"],"names":["transferableMessage","self","webkitPostMessage","postMessage","MESSAGE_TYPES","WORLDREPORT","COLLISIONREPORT","VEHICLEREPORT","CONSTRAINTREPORT","_object","_vector","_transform","public_functions","getShapeFromCache","setShapeCache","createShape","reportWorld","reportVehicles","reportCollisions","reportConstraints","fixedTimeStep","rateLimit","last_simulation_time","last_simulation_duration","world","transform","_vec3_1","_vec3_2","_vec3_3","_quat","_objects","_vehicles","_constraints","_materials","_objects_ammo","_num_objects","_num_wheels","_num_constraints","_object_shapes","_motion_states","_noncached_shapes","_compound_shapes","REPORT_CHUNKSIZE","WORLDREPORT_ITEMSIZE","worldreport","COLLISIONREPORT_ITEMSIZE","collisionreport","VEHICLEREPORT_ITEMSIZE","vehiclereport","CONSTRAINTREPORT_ITEMSIZE","constraintreport","ab","ArrayBuffer","SUPPORT_TRANSFERABLE","byteLength","cache_key","undefined","shape","description","setIdentity","type","normal","x","y","z","setX","setY","setZ","Ammo","btStaticPlaneShape","width","height","depth","btBoxShape","radius","btSphereShape","btCylinderShape","btCapsuleShape","btConeShape","triangle","triangle_mesh","btTriangleMesh","triangles","length","i","addTriangle","btBvhTriangleMeshShape","id","point","btConvexHullShape","points","addPoint","ptr","allocate","xpts","ypts","ALLOC_NORMAL","f","setValue","btHeightfieldTerrainShape","absMaxHeight","xsize","ysize","setLocalScaling","init","params","importScripts","ammo","btTransform","btVector3","btQuaternion","reportsize","Float32Array","broadphase","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","solver","btSequentialImpulseConstraintSolver","aabbmin","aabbmax","btAxisSweep3","btDbvtBroadphase","btDiscreteDynamicsWorld","cmd","registerMaterial","unRegisterMaterial","setFixedTimeStep","setGravity","addObject","motionState","rbInfo","body","children","_child","compound_shape","btCompoundShape","addChildShape","trans","position_offset","setOrigin","rotation","setW","w","setRotation","destroy","calculateLocalInertia","mass","position","btDefaultMotionState","btRigidBodyConstructionInfo","materialId","set_m_friction","friction","set_m_restitution","restitution","btRigidBody","collision_flags","setCollisionFlags","addRigidBody","a","addVehicle","vehicle","vehicle_tuning","btVehicleTuning","set_m_suspensionStiffness","suspension_stiffness","set_m_suspensionCompression","suspension_compression","set_m_suspensionDamping","suspension_damping","set_m_maxSuspensionTravelCm","max_suspension_travel","set_m_maxSuspensionForce","max_suspension_force","btRaycastVehicle","rigidBody","btDefaultVehicleRaycaster","tuning","setActivationState","setCoordinateSystem","removeVehicle","addWheel","connection_point","wheel_direction","wheel_axle","suspension_rest_length","wheel_radius","is_front_wheel","setSteering","details","setSteeringValue","steering","wheel","setBrake","brake","applyEngineForce","force","removeObject","removeRigidBody","updateTransform","getMotionState","getWorldTransform","pos","quat","setWorldTransform","activate","updateMass","setMassProps","applyCentralImpulse","applyImpulse","impulse_x","impulse_y","impulse_z","applyTorque","torque_x","torque_y","torque_z","applyCentralForce","applyForce","force_x","force_y","force_z","onSimulationResume","Date","now","setAngularVelocity","setLinearVelocity","setAngularFactor","setLinearFactor","setDamping","linear","angular","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","addConstraint","constraint","objectb","positiona","btPoint2PointConstraint","objecta","positionb","axis","btHingeConstraint","transforma","getRotation","setEuler","transformb","btSliderConstraint","setEulerZYX","axisa","axisb","btConeTwistConstraint","setLimit","Math","PI","btGeneric6DofConstraint","enableFeedback","removeConstraint","constraint_setBreakingImpulseThreshold","undefind","setBreakingImpulseThreshold","simulate","timeStep","maxSubSteps","ceil","stepSimulation","hinge_setLimits","low","high","bias_factor","relaxation_factor","hinge_enableAngularMotor","enableAngularMotor","velocity","acceleration","getRigidBodyA","getRigidBodyB","hinge_disableMotor","enableMotor","slider_setLimits","setLowerLinLimit","lin_lower","setUpperLinLimit","lin_upper","setLowerAngLimit","ang_lower","setUpperAngLimit","ang_upper","slider_setRestitution","setSoftnessLimLin","setSoftnessLimAng","slider_enableLinearMotor","setTargetLinMotorVelocity","setMaxLinMotorForce","setPoweredLinMotor","slider_disableLinearMotor","slider_enableAngularMotor","setTargetAngMotorVelocity","setMaxAngMotorForce","setPoweredAngMotor","slider_disableAngularMotor","conetwist_setLimit","conetwist_enableMotor","conetwist_setMaxMotorImpulse","setMaxMotorImpulse","max_impulse","conetwist_setMotorTarget","setMotorTarget","conetwist_disableMotor","dof_setLinearLowerLimit","setLinearLowerLimit","dof_setLinearUpperLimit","setLinearUpperLimit","dof_setAngularLowerLimit","setAngularLowerLimit","dof_setAngularUpperLimit","setAngularUpperLimit","dof_enableAngularMotor","getRotationalLimitMotor","which","set_m_enableMotor","dof_configureAngularMotor","motor","set_m_loLimit","low_angle","set_m_hiLimit","high_angle","set_m_targetVelocity","set_m_maxMotorForce","max_force","dof_disableAngularMotor","index","object","origin","offset","hasOwnProperty","getCenterOfMassTransform","getOrigin","getLinearVelocity","getAngularVelocity","buffer","manifold","num_contacts","j","pt","dp","getDispatcher","num","getNumManifolds","getManifoldByIndexInternal","getNumContacts","getContactPoint","getBody0","getBody1","get_m_normalWorldOnB","getNumWheels","getWheelInfo","get_m_worldTransform","offset_body","getFrameOffsetA","getX","getY","getZ","getAppliedImpulse","onmessage","event","data"],"mappings":"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","file":"../../physijs/physijs_worker.js","sourcesContent":["'use strict';\nvar\n\ttransferableMessage = self.webkitPostMessage || self.postMessage,\n\n\t// enum\n\tMESSAGE_TYPES = {\n\t\tWORLDREPORT: 0,\n\t\tCOLLISIONREPORT: 1,\n\t\tVEHICLEREPORT: 2,\n\t\tCONSTRAINTREPORT: 3\n\t},\n\n\t// temp variables\n\t_object,\n\t_vector,\n\t_transform,\n\n\t// functions\n\tpublic_functions = {},\n\tgetShapeFromCache,\n\tsetShapeCache,\n\tcreateShape,\n\treportWorld,\n\treportVehicles,\n\treportCollisions,\n\treportConstraints,\n\n\t// world variables\n\tfixedTimeStep, // used when calling stepSimulation\n\trateLimit, // sets whether or not to sync the simulation rate with fixedTimeStep\n\tlast_simulation_time,\n\tlast_simulation_duration = 0,\n\tworld,\n\ttransform,\n\t_vec3_1,\n\t_vec3_2,\n\t_vec3_3,\n\t_quat,\n\t// private cache\n\t_objects = {},\n\t_vehicles = {},\n\t_constraints = {},\n\t_materials = {},\n\t_objects_ammo = {},\n\t_num_objects = 0,\n\t_num_wheels = 0,\n\t_num_constraints = 0,\n\t_object_shapes = {},\n\n\t// The following objects are to track objects that ammo.js doesn't clean\n\t// up. All are cleaned up when they're corresponding body is destroyed.\n\t// Unfortunately, it's very difficult to get at these objects from the\n\t// body, so we have to track them ourselves.\n\t_motion_states = {},\n\t// Don't need to worry about it for cached shapes.\n    _noncached_shapes = {},\n\t// A body with a compound shape always has a regular shape as well, so we\n\t// have track them separately.\n    _compound_shapes = {},\n\n\t// object reporting\n\tREPORT_CHUNKSIZE, // report array is increased in increments of this chunk size\n\n\tWORLDREPORT_ITEMSIZE = 14, // how many float values each reported item needs\n\tworldreport,\n\n\tCOLLISIONREPORT_ITEMSIZE = 5, // one float for each object id, and a Vec3 contact normal\n\tcollisionreport,\n\n\tVEHICLEREPORT_ITEMSIZE = 9, // vehicle id, wheel index, 3 for position, 4 for rotation\n\tvehiclereport,\n\n\tCONSTRAINTREPORT_ITEMSIZE = 6, // constraint id, offset object, offset, applied impulse\n\tconstraintreport;\n\nvar ab = new ArrayBuffer( 1 );\n\ntransferableMessage( ab, [ab] );\nvar SUPPORT_TRANSFERABLE = ( ab.byteLength === 0 );\n\ngetShapeFromCache = function ( cache_key ) {\n\tif ( _object_shapes[ cache_key ] !== undefined ) {\n\t\treturn _object_shapes[ cache_key ];\n\t}\n\treturn null;\n};\n\nsetShapeCache = function ( cache_key, shape ) {\n\t_object_shapes[ cache_key ] = shape;\n}\n\ncreateShape = function( description ) {\n\tvar cache_key, shape;\n\n\t_transform.setIdentity();\n\tswitch ( description.type ) {\n\t\tcase 'plane':\n\t\t\tcache_key = 'plane_' + description.normal.x + '_' + description.normal.y + '_' + description.normal.z;\n\t\t\tif ( ( shape = getShapeFromCache( cache_key ) ) === null ) {\n\t\t\t\t_vec3_1.setX(description.normal.x);\n\t\t\t\t_vec3_1.setY(description.normal.y);\n\t\t\t\t_vec3_1.setZ(description.normal.z);\n\t\t\t\tshape = new Ammo.btStaticPlaneShape(_vec3_1, 0 );\n\t\t\t\tsetShapeCache( cache_key, shape );\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'box':\n\t\t\tcache_key = 'box_' + description.width + '_' + description.height + '_' + description.depth;\n\t\t\tif ( ( shape = getShapeFromCache( cache_key ) ) === null ) {\n\t\t\t\t_vec3_1.setX(description.width / 2);\n\t\t\t\t_vec3_1.setY(description.height / 2);\n\t\t\t\t_vec3_1.setZ(description.depth / 2);\n\t\t\t\tshape = new Ammo.btBoxShape(_vec3_1);\n\t\t\t\tsetShapeCache( cache_key, shape );\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'sphere':\n\t\t\tcache_key = 'sphere_' + description.radius;\n\t\t\tif ( ( shape = getShapeFromCache( cache_key ) ) === null ) {\n\t\t\t\tshape = new Ammo.btSphereShape( description.radius );\n\t\t\t\tsetShapeCache( cache_key, shape );\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'cylinder':\n\t\t\tcache_key = 'cylinder_' + description.width + '_' + description.height + '_' + description.depth;\n\t\t\tif ( ( shape = getShapeFromCache( cache_key ) ) === null ) {\n\t\t\t\t_vec3_1.setX(description.width / 2);\n\t\t\t\t_vec3_1.setY(description.height / 2);\n\t\t\t\t_vec3_1.setZ(description.depth / 2);\n\t\t\t\tshape = new Ammo.btCylinderShape(_vec3_1);\n\t\t\t\tsetShapeCache( cache_key, shape );\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'capsule':\n\t\t\tcache_key = 'capsule_' + description.radius + '_' + description.height;\n\t\t\tif ( ( shape = getShapeFromCache( cache_key ) ) === null ) {\n\t\t\t\t// In Bullet, capsule height excludes the end spheres\n\t\t\t\tshape = new Ammo.btCapsuleShape( description.radius, description.height - 2 * description.radius );\n\t\t\t\tsetShapeCache( cache_key, shape );\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'cone':\n\t\t\tcache_key = 'cone_' + description.radius + '_' + description.height;\n\t\t\tif ( ( shape = getShapeFromCache( cache_key ) ) === null ) {\n\t\t\t\tshape = new Ammo.btConeShape( description.radius, description.height );\n\t\t\t\tsetShapeCache( cache_key, shape );\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'concave':\n\t\t\tvar i, triangle, triangle_mesh = new Ammo.btTriangleMesh;\n\t\t\tif (!description.triangles.length) return false\n\n\t\t\tfor ( i = 0; i < description.triangles.length; i++ ) {\n\t\t\t\ttriangle = description.triangles[i];\n\n\t\t\t\t_vec3_1.setX(triangle[0].x);\n\t\t\t\t_vec3_1.setY(triangle[0].y);\n\t\t\t\t_vec3_1.setZ(triangle[0].z);\n\n\t\t\t\t_vec3_2.setX(triangle[1].x);\n\t\t\t\t_vec3_2.setY(triangle[1].y);\n\t\t\t\t_vec3_2.setZ(triangle[1].z);\n\n\t\t\t\t_vec3_3.setX(triangle[2].x);\n\t\t\t\t_vec3_3.setY(triangle[2].y);\n\t\t\t\t_vec3_3.setZ(triangle[2].z);\n\n\t\t\t\ttriangle_mesh.addTriangle(\n\t\t\t\t\t_vec3_1,\n\t\t\t\t\t_vec3_2,\n\t\t\t\t\t_vec3_3,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tshape = new Ammo.btBvhTriangleMeshShape(\n\t\t\t\ttriangle_mesh,\n\t\t\t\ttrue,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\t_noncached_shapes[description.id] = shape;\n\t\t\tbreak;\n\n\t\tcase 'convex':\n\t\t\tvar i, point, shape = new Ammo.btConvexHullShape;\n\t\t\tfor ( i = 0; i < description.points.length; i++ ) {\n\t\t\t\tpoint = description.points[i];\n\n\t\t\t\t_vec3_1.setX(point.x);\n\t\t\t\t_vec3_1.setY(point.y);\n\t\t\t\t_vec3_1.setZ(point.z);\n\n\t\t\t\tshape.addPoint(_vec3_1);\n\n\t\t\t}\n\t\t\t_noncached_shapes[description.id] = shape;\n\t\t\tbreak;\n\n\t\tcase 'heightfield':\n\n\t\t\tvar ptr = Ammo.allocate(4 * description.xpts * description.ypts, \"float\", Ammo.ALLOC_NORMAL);\n\n\t\t\tfor (var f = 0; f < description.points.length; f++) {\n\t\t\t\tAmmo.setValue(ptr + f,  description.points[f]  , 'float');\n\t\t\t}\n\n\t\t\tshape = new Ammo.btHeightfieldTerrainShape(\n\t\t\t\t\tdescription.xpts,\n\t\t\t\t\tdescription.ypts,\n\t\t\t\t\tptr,\n\t\t\t\t\t1,\n\t\t\t\t\t-description.absMaxHeight,\n\t\t\t\t\tdescription.absMaxHeight,\n\t\t\t\t\t2,\n\t\t\t\t\t0,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\n\t\t\t_vec3_1.setX(description.xsize/(description.xpts - 1));\n\t\t\t_vec3_1.setY(description.ysize/(description.ypts - 1));\n\t\t\t_vec3_1.setZ(1);\n\n\t\t\tshape.setLocalScaling(_vec3_1);\n\t\t\t_noncached_shapes[description.id] = shape;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t// Not recognized\n\t\t\treturn;\n\t\t\tbreak;\n\t}\n\n\treturn shape;\n};\n\npublic_functions.init = function( params ) {\n\timportScripts( params.ammo );\n\n\t_transform = new Ammo.btTransform;\n\t_vec3_1 = new Ammo.btVector3(0,0,0);\n\t_vec3_2 = new Ammo.btVector3(0,0,0);\n\t_vec3_3 = new Ammo.btVector3(0,0,0);\n\t_quat = new Ammo.btQuaternion(0,0,0,0);\n\n\tREPORT_CHUNKSIZE = params.reportsize || 50;\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t// Transferable messages are supported, take advantage of them with TypedArrays\n\t\tworldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object\n\t\tcollisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object\n\t\tvehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object\n\t\tconstraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object\n\t} else {\n\t\t// Transferable messages are not supported, send data as normal arrays\n\t\tworldreport = [];\n\t\tcollisionreport = [];\n\t\tvehiclereport = [];\n\t\tconstraintreport = [];\n\t}\n\tworldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n\tcollisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n\tvehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n\tconstraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\n\tvar collisionConfiguration = new Ammo.btDefaultCollisionConfiguration,\n\t\tdispatcher = new Ammo.btCollisionDispatcher( collisionConfiguration ),\n\t\tsolver = new Ammo.btSequentialImpulseConstraintSolver,\n\t\tbroadphase;\n\n\tif ( !params.broadphase ) params.broadphase = { type: 'dynamic' };\n\tswitch ( params.broadphase.type ) {\n\t\tcase 'sweepprune':\n\n\t\t\t_vec3_1.setX(params.broadphase.aabbmin.x);\n\t\t\t_vec3_1.setY(params.broadphase.aabbmin.y);\n\t\t\t_vec3_1.setZ(params.broadphase.aabbmin.z);\n\n\t\t\t_vec3_2.setX(params.broadphase.aabbmax.x);\n\t\t\t_vec3_2.setY(params.broadphase.aabbmax.y);\n\t\t\t_vec3_2.setZ(params.broadphase.aabbmax.z);\n\n\t\t\tbroadphase = new Ammo.btAxisSweep3(\n\t\t\t\t_vec3_1,\n\t\t\t\t_vec3_2\n\t\t\t);\n\n\t\t\tbreak;\n\n\t\tcase 'dynamic':\n\t\tdefault:\n\t\t\tbroadphase = new Ammo.btDbvtBroadphase;\n\t\t\tbreak;\n\t}\n\n\tworld = new Ammo.btDiscreteDynamicsWorld( dispatcher, broadphase, solver, collisionConfiguration );\n\n\tfixedTimeStep = params.fixedTimeStep;\n\trateLimit = params.rateLimit;\n\n\ttransferableMessage({ cmd: 'worldReady' });\n};\n\npublic_functions.registerMaterial = function( description ) {\n\t_materials[ description.id ] = description;\n};\n\npublic_functions.unRegisterMaterial = function( description ) {\n\tdelete _materials[ description.id ];\n};\n\npublic_functions.setFixedTimeStep = function( description ) {\n\tfixedTimeStep = description;\n};\n\npublic_functions.setGravity = function( description ) {\n\t_vec3_1.setX(description.x);\n\t_vec3_1.setY(description.y);\n\t_vec3_1.setZ(description.z);\n\tworld.setGravity(_vec3_1);\n};\n\npublic_functions.addObject = function( description ) {\n\n\tvar i,\n\tlocalInertia, shape, motionState, rbInfo, body;\n\nshape = createShape( description );\nif (!shape) return\n// If there are children then this is a compound shape\nif ( description.children ) {\n\tvar compound_shape = new Ammo.btCompoundShape, _child;\n\tcompound_shape.addChildShape( _transform, shape );\n\n\tfor ( i = 0; i < description.children.length; i++ ) {\n\t\t_child = description.children[i];\n\n\t\tvar trans = new Ammo.btTransform;\n\t\ttrans.setIdentity();\n\n\t\t_vec3_1.setX(_child.position_offset.x);\n\t\t_vec3_1.setY(_child.position_offset.y);\n\t\t_vec3_1.setZ(_child.position_offset.z);\n\t\ttrans.setOrigin(_vec3_1);\n\n\t\t_quat.setX(_child.rotation.x);\n\t\t_quat.setY(_child.rotation.y);\n\t\t_quat.setZ(_child.rotation.z);\n\t\t_quat.setW(_child.rotation.w);\n\t\ttrans.setRotation(_quat);\n\n\t\tshape = createShape( description.children[i] );\n\t\tcompound_shape.addChildShape( trans, shape );\n\t\tAmmo.destroy(trans);\n\t}\n\n\tshape = compound_shape;\n    _compound_shapes[ description.id ] = shape;\n\t}\n\t_vec3_1.setX(0);\n\t_vec3_1.setY(0);\n\t_vec3_1.setZ(0);\n\tshape.calculateLocalInertia( description.mass, _vec3_1 );\n\n\t_transform.setIdentity();\n\n\t_vec3_2.setX(description.position.x);\n\t_vec3_2.setY(description.position.y);\n\t_vec3_2.setZ(description.position.z);\n\t_transform.setOrigin(_vec3_2);\n\n\t_quat.setX(description.rotation.x);\n\t_quat.setY(description.rotation.y);\n\t_quat.setZ(description.rotation.z);\n\t_quat.setW(description.rotation.w);\n\t_transform.setRotation(_quat);\n\n\tmotionState = new Ammo.btDefaultMotionState( _transform ); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement\n\trbInfo = new Ammo.btRigidBodyConstructionInfo( description.mass, motionState, shape, _vec3_1 );\n\n\tif ( description.materialId !== undefined ) {\n\t\trbInfo.set_m_friction( _materials[ description.materialId ].friction );\n\t\trbInfo.set_m_restitution( _materials[ description.materialId ].restitution );\n\t}\n\n\tbody = new Ammo.btRigidBody( rbInfo );\n\tAmmo.destroy(rbInfo);\n\n\tif ( typeof description.collision_flags !== 'undefined' ) {\n\t\tbody.setCollisionFlags( description.collision_flags );\n\t}\n\n\tworld.addRigidBody( body );\n\n\tbody.id = description.id;\n\t_objects[ body.id ] = body;\n\t_motion_states[ body.id ] = motionState;\n\n\tvar ptr = body.a != undefined ? body.a : body.ptr;\n\t_objects_ammo[ptr] = body.id;\n\t_num_objects++;\n\n\ttransferableMessage({ cmd: 'objectReady', params: body.id });\n};\n\npublic_functions.addVehicle = function( description ) {\n\tvar vehicle_tuning = new Ammo.btVehicleTuning(),\n\t\tvehicle;\n\n\tvehicle_tuning.set_m_suspensionStiffness( description.suspension_stiffness );\n\tvehicle_tuning.set_m_suspensionCompression( description.suspension_compression );\n\tvehicle_tuning.set_m_suspensionDamping( description.suspension_damping );\n\tvehicle_tuning.set_m_maxSuspensionTravelCm( description.max_suspension_travel );\n\tvehicle_tuning.set_m_maxSuspensionForce( description.max_suspension_force );\n\n\tvehicle = new Ammo.btRaycastVehicle( vehicle_tuning, _objects[ description.rigidBody ], new Ammo.btDefaultVehicleRaycaster( world ) );\n\tvehicle.tuning = vehicle_tuning;\n\n\t_objects[ description.rigidBody ].setActivationState( 4 );\n\tvehicle.setCoordinateSystem( 0, 1, 2 );\n\n\tworld.addVehicle( vehicle );\n\t_vehicles[ description.id ] = vehicle;\n};\npublic_functions.removeVehicle = function( description ) {\n\tdelete _vehicles[ description.id ];\n};\n\npublic_functions.addWheel = function( description ) {\n\tif ( _vehicles[description.id] !== undefined ) {\n\t\tvar tuning = _vehicles[description.id].tuning;\n\t\tif ( description.tuning !== undefined ) {\n\t\t\ttuning = new Ammo.btVehicleTuning();\n\t\t\ttuning.set_m_suspensionStiffness( description.tuning.suspension_stiffness );\n\t\t\ttuning.set_m_suspensionCompression( description.tuning.suspension_compression );\n\t\t\ttuning.set_m_suspensionDamping( description.tuning.suspension_damping );\n\t\t\ttuning.set_m_maxSuspensionTravelCm( description.tuning.max_suspension_travel );\n\t\t\ttuning.set_m_maxSuspensionForce( description.tuning.max_suspension_force );\n\t\t}\n\n\t\t_vec3_1.setX(description.connection_point.x);\n\t\t_vec3_1.setY(description.connection_point.y);\n\t\t_vec3_1.setZ(description.connection_point.z);\n\n\t\t_vec3_2.setX(description.wheel_direction.x);\n\t\t_vec3_2.setY(description.wheel_direction.y);\n\t\t_vec3_2.setZ(description.wheel_direction.z);\n\n\t\t_vec3_3.setX(description.wheel_axle.x);\n\t\t_vec3_3.setY(description.wheel_axle.y);\n\t\t_vec3_3.setZ(description.wheel_axle.z);\n\n\t\t_vehicles[description.id].addWheel(\n\t\t\t_vec3_1,\n\t\t\t_vec3_2,\n\t\t\t_vec3_3,\n\t\t\tdescription.suspension_rest_length,\n\t\t\tdescription.wheel_radius,\n\t\t\ttuning,\n\t\t\tdescription.is_front_wheel\n\t\t);\n\t}\n\n\t_num_wheels++;\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\tvehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n\t\tvehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n\t} else {\n\t\tvehiclereport = [ MESSAGE_TYPES.VEHICLEREPORT ];\n\t}\n};\n\npublic_functions.setSteering = function( details ) {\n\tif ( _vehicles[details.id] !== undefined ) {\n\t\t_vehicles[details.id].setSteeringValue( details.steering, details.wheel );\n\t}\n};\npublic_functions.setBrake = function( details ) {\n\tif ( _vehicles[details.id] !== undefined ) {\n\t\t_vehicles[details.id].setBrake( details.brake, details.wheel );\n\t}\n};\npublic_functions.applyEngineForce = function( details ) {\n\tif ( _vehicles[details.id] !== undefined ) {\n\t\t_vehicles[details.id].applyEngineForce( details.force, details.wheel );\n\t}\n};\n\npublic_functions.removeObject = function( details ) {\n\tworld.removeRigidBody( _objects[details.id] );\n\tAmmo.destroy(_objects[details.id]);\n\tAmmo.destroy(_motion_states[details.id]);\n    if (_compound_shapes[details.id]) Ammo.destroy(_compound_shapes[details.id]);\n\tif (_noncached_shapes[details.id]) Ammo.destroy(_noncached_shapes[details.id]);\n\tvar ptr = _objects[details.id].a != undefined ? _objects[details.id].a : _objects[details.id].ptr;\n\tdelete _objects_ammo[ptr];\n\tdelete _objects[details.id];\n\tdelete _motion_states[details.id];\n    if (_compound_shapes[details.id]) delete _compound_shapes[details.id];\n\tif (_noncached_shapes[details.id]) delete _noncached_shapes[details.id];\n\t_num_objects--;\n};\n\npublic_functions.updateTransform = function( details ) {\n\t_object = _objects[details.id];\n\t_object.getMotionState().getWorldTransform( _transform );\n\n\tif ( details.pos ) {\n\t\t_vec3_1.setX(details.pos.x);\n\t\t_vec3_1.setY(details.pos.y);\n\t\t_vec3_1.setZ(details.pos.z);\n\t\t_transform.setOrigin(_vec3_1);\n\t}\n\n\tif ( details.quat ) {\n\t\t_quat.setX(details.quat.x);\n\t\t_quat.setY(details.quat.y);\n\t\t_quat.setZ(details.quat.z);\n\t\t_quat.setW(details.quat.w);\n\t\t_transform.setRotation(_quat);\n\t}\n\n\t_object.setWorldTransform( _transform );\n\t_object.activate();\n};\n\npublic_functions.updateMass = function( details ) {\n\t// #TODO: changing a static object into dynamic is buggy\n\t_object = _objects[details.id];\n\n\t// Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816\n\tworld.removeRigidBody( _object );\n\n\t_vec3_1.setX(0);\n\t_vec3_1.setY(0);\n\t_vec3_1.setZ(0);\n\n\t_object.setMassProps( details.mass, _vec3_1 );\n\tworld.addRigidBody( _object );\n\t_object.activate();\n};\n\npublic_functions.applyCentralImpulse = function ( details ) {\n\n\t_vec3_1.setX(details.x);\n\t_vec3_1.setY(details.y);\n\t_vec3_1.setZ(details.z);\n\n\t_objects[details.id].applyCentralImpulse(_vec3_1);\n\t_objects[details.id].activate();\n};\n\npublic_functions.applyImpulse = function ( details ) {\n\n\t_vec3_1.setX(details.impulse_x);\n\t_vec3_1.setY(details.impulse_y);\n\t_vec3_1.setZ(details.impulse_z);\n\n\t_vec3_2.setX(details.x);\n\t_vec3_2.setY(details.y);\n\t_vec3_2.setZ(details.z);\n\n\t_objects[details.id].applyImpulse(\n\t\t_vec3_1,\n\t\t_vec3_2\n\t);\n\t_objects[details.id].activate();\n};\n\npublic_functions.applyTorque = function ( details ) {\n\n\t_vec3_1.setX(details.torque_x);\n\t_vec3_1.setY(details.torque_y);\n\t_vec3_1.setZ(details.torque_z);\n\n\t_objects[details.id].applyTorque(\n\t\t_vec3_1\n\t);\n\t_objects[details.id].activate();\n};\n\npublic_functions.applyCentralForce = function ( details ) {\n\n\t_vec3_1.setX(details.x);\n\t_vec3_1.setY(details.y);\n\t_vec3_1.setZ(details.z);\n\n\t_objects[details.id].applyCentralForce(_vec3_1);\n\t_objects[details.id].activate();\n};\n\npublic_functions.applyForce = function ( details ) {\n\n\t_vec3_1.setX(details.force_x);\n\t_vec3_1.setY(details.force_y);\n\t_vec3_1.setZ(details.force_z);\n\n\t_vec3_2.setX(details.x);\n\t_vec3_2.setY(details.y);\n\t_vec3_2.setZ(details.z);\n\n\t_objects[details.id].applyForce(\n\t\t_vec3_1,\n\t\t_vec3_2\n\t);\n\t_objects[details.id].activate();\n};\n\npublic_functions.onSimulationResume = function( params ) {\n\tlast_simulation_time = Date.now();\n};\n\npublic_functions.setAngularVelocity = function ( details ) {\n\n\t_vec3_1.setX(details.x);\n\t_vec3_1.setY(details.y);\n\t_vec3_1.setZ(details.z);\n\n\t_objects[details.id].setAngularVelocity(\n\t\t_vec3_1\n\t);\n\t_objects[details.id].activate();\n};\n\npublic_functions.setLinearVelocity = function ( details ) {\n\n\t_vec3_1.setX(details.x);\n\t_vec3_1.setY(details.y);\n\t_vec3_1.setZ(details.z);\n\n\t_objects[details.id].setLinearVelocity(\n\t\t_vec3_1\n\t);\n\t_objects[details.id].activate();\n};\n\npublic_functions.setAngularFactor = function ( details ) {\n\n\t_vec3_1.setX(details.x);\n\t_vec3_1.setY(details.y);\n\t_vec3_1.setZ(details.z);\n\n\t_objects[details.id].setAngularFactor(\n\t\t\t_vec3_1\n\t);\n};\n\npublic_functions.setLinearFactor = function ( details ) {\n\n\t_vec3_1.setX(details.x);\n\t_vec3_1.setY(details.y);\n\t_vec3_1.setZ(details.z);\n\n\t_objects[details.id].setLinearFactor(\n\t\t_vec3_1\n\t);\n};\n\npublic_functions.setDamping = function ( details ) {\n\t_objects[details.id].setDamping( details.linear, details.angular );\n};\n\npublic_functions.setCcdMotionThreshold = function ( details ) {\n\t_objects[details.id].setCcdMotionThreshold( details.threshold );\n};\n\npublic_functions.setCcdSweptSphereRadius = function ( details ) {\n\t_objects[details.id].setCcdSweptSphereRadius( details.radius );\n};\n\npublic_functions.addConstraint = function ( details ) {\n\tvar constraint;\n\n\tswitch ( details.type ) {\n\n\t\tcase 'point':\n\t\t\tif ( details.objectb === undefined ) {\n\n\t\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\t\tconstraint = new Ammo.btPoint2PointConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\t_vec3_1\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\t\t_vec3_2.setX(details.positionb.x);\n\t\t\t\t_vec3_2.setY(details.positionb.y);\n\t\t\t\t_vec3_2.setZ(details.positionb.z);\n\n\t\t\t\tconstraint = new Ammo.btPoint2PointConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\t_objects[ details.objectb ],\n\t\t\t\t\t_vec3_1,\n\t\t\t\t\t_vec3_2\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'hinge':\n\t\t\tif ( details.objectb === undefined ) {\n\n\t\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\t\t_vec3_2.setX(details.axis.x);\n\t\t\t\t_vec3_2.setY(details.axis.y);\n\t\t\t\t_vec3_2.setZ(details.axis.z);\n\n\t\t\t\tconstraint = new Ammo.btHingeConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\t_vec3_1,\n\t\t\t\t\t_vec3_2\n\t\t\t\t);\n\t\t\t} else {\n\n\t\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\t\t_vec3_2.setX(details.positionb.x);\n\t\t\t\t_vec3_2.setY(details.positionb.y);\n\t\t\t\t_vec3_2.setZ(details.positionb.z);\n\n\t\t\t\t_vec3_3.setX(details.axis.x);\n\t\t\t\t_vec3_3.setY(details.axis.y);\n\t\t\t\t_vec3_3.setZ(details.axis.z);\n\n\t\t\t\tconstraint = new Ammo.btHingeConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\t_objects[ details.objectb ],\n\t\t\t\t\t_vec3_1,\n\t\t\t\t\t_vec3_2,\n\t\t\t\t\t_vec3_3,\n\t\t\t\t\t_vec3_3\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'slider':\n\t\t\tvar transforma, transformb, rotation;\n\n\t\t\ttransforma = new Ammo.btTransform();\n\n\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\ttransforma.setOrigin(_vec3_1);\n\n\t\t\tvar rotation = transforma.getRotation();\n\t\t\trotation.setEuler( details.axis.x, details.axis.y, details.axis.z );\n\t\t\ttransforma.setRotation( rotation );\n\n\t\t\tif ( details.objectb ) {\n\t\t\t\ttransformb = new Ammo.btTransform();\n\n\t\t\t\t_vec3_2.setX(details.positionb.x);\n\t\t\t\t_vec3_2.setY(details.positionb.y);\n\t\t\t\t_vec3_2.setZ(details.positionb.z);\n\n\t\t\t\ttransformb.setOrigin(_vec3_2);\n\n\t\t\t\trotation = transformb.getRotation();\n\t\t\t\trotation.setEuler( details.axis.x, details.axis.y, details.axis.z );\n\t\t\t\ttransformb.setRotation( rotation );\n\n\t\t\t\tconstraint = new Ammo.btSliderConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\t_objects[ details.objectb ],\n\t\t\t\t\ttransforma,\n\t\t\t\t\ttransformb,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconstraint = new Ammo.btSliderConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\ttransforma,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tAmmo.destroy(transforma);\n\t\t\tif (transformb != undefined) {\n\t\t\t\tAmmo.destroy(transformb);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'conetwist':\n\t\t\tvar transforma, transformb;\n\n\t\t\ttransforma = new Ammo.btTransform();\n\t\t\ttransforma.setIdentity();\n\n\t\t\ttransformb = new Ammo.btTransform();\n\t\t\ttransformb.setIdentity();\n\n\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\t_vec3_2.setX(details.positionb.x);\n\t\t\t_vec3_2.setY(details.positionb.y);\n\t\t\t_vec3_2.setZ(details.positionb.z);\n\n\t\t\ttransforma.setOrigin(_vec3_1);\n\t\t\ttransformb.setOrigin(_vec3_2);\n\n\t\t\tvar rotation = transforma.getRotation();\n\t\t\trotation.setEulerZYX( -details.axisa.z, -details.axisa.y, -details.axisa.x );\n\t\t\ttransforma.setRotation( rotation );\n\n\t\t\trotation = transformb.getRotation();\n\t\t\trotation.setEulerZYX( -details.axisb.z, -details.axisb.y, -details.axisb.x );\n\t\t\ttransformb.setRotation( rotation );\n\n\t\t\tconstraint = new Ammo.btConeTwistConstraint(\n\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t_objects[ details.objectb ],\n\t\t\t\ttransforma,\n\t\t\t\ttransformb\n\t\t\t);\n\n\t\t\tconstraint.setLimit( Math.PI, 0, Math.PI );\n\n\t\t\tAmmo.destroy(transforma);\n\t\t\tAmmo.destroy(transformb);\n\n\t\t\tbreak;\n\n\t\tcase 'dof':\n\t\t\tvar transforma, transformb, rotation;\n\n\t\t\ttransforma = new Ammo.btTransform();\n\t\t\ttransforma.setIdentity();\n\n\t\t\t_vec3_1.setX(details.positiona.x);\n\t\t\t_vec3_1.setY(details.positiona.y);\n\t\t\t_vec3_1.setZ(details.positiona.z);\n\n\t\t\ttransforma.setOrigin(_vec3_1 );\n\n\t\t\trotation = transforma.getRotation();\n\t\t\trotation.setEulerZYX( -details.axisa.z, -details.axisa.y, -details.axisa.x );\n\t\t\ttransforma.setRotation( rotation );\n\n\t\t\tif ( details.objectb ) {\n\t\t\t\ttransformb = new Ammo.btTransform();\n\t\t\t\ttransformb.setIdentity();\n\n\t\t\t\t_vec3_2.setX(details.positionb.x);\n\t\t\t\t_vec3_2.setY(details.positionb.y);\n\t\t\t\t_vec3_2.setZ(details.positionb.z);\n\n\t\t\t\ttransformb.setOrigin(_vec3_2);\n\n\t\t\t\trotation = transformb.getRotation();\n\t\t\t\trotation.setEulerZYX( -details.axisb.z, -details.axisb.y, -details.axisb.x );\n\t\t\t\ttransformb.setRotation( rotation );\n\n\t\t\t\tconstraint = new Ammo.btGeneric6DofConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\t_objects[ details.objectb ],\n\t\t\t\t\ttransforma,\n\t\t\t\t\ttransformb\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconstraint = new Ammo.btGeneric6DofConstraint(\n\t\t\t\t\t_objects[ details.objecta ],\n\t\t\t\t\ttransforma\n\t\t\t\t);\n\t\t\t}\n\t\t\tAmmo.destroy(transforma);\n\t\t\tif (transformb != undefined) {\n\t\t\t\tAmmo.destroy(transformb);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn;\n\n\t};\n\n\tworld.addConstraint( constraint );\n\n\tconstraint.enableFeedback();\n\t_constraints[ details.id ] = constraint;\n\t_num_constraints++;\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\tconstraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n\t\tconstraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\t} else {\n\t\tconstraintreport = [ MESSAGE_TYPES.CONSTRAINTREPORT ];\n\t}\n};\n\npublic_functions.removeConstraint = function( details ) {\n\tvar constraint = _constraints[ details.id ];\n\tif ( constraint !== undefined ) {\n\t\tworld.removeConstraint( constraint );\n\t\tdelete _constraints[ details.id ];\n\t\t_num_constraints--;\n\t}\n};\n\npublic_functions.constraint_setBreakingImpulseThreshold = function( details ) {\n\tvar constraint = _constraints[ details.id ];\n\tif ( constraint !== undefind ) {\n\t\tconstraint.setBreakingImpulseThreshold( details.threshold );\n\t}\n};\n\npublic_functions.simulate = function simulate( params ) {\n\tif ( world ) {\n\t\tparams = params || {};\n\n\t\tif ( !params.timeStep ) {\n\t\t\tif ( last_simulation_time ) {\n\t\t\t\tparams.timeStep = 0;\n\t\t\t\twhile ( params.timeStep + last_simulation_duration <= fixedTimeStep ) {\n\t\t\t\t\tparams.timeStep = ( Date.now() - last_simulation_time ) / 1000; // time since last simulation\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparams.timeStep = fixedTimeStep; // handle first frame\n\t\t\t}\n\t\t} else {\n\t\t\tif ( params.timeStep < fixedTimeStep ) {\n\t\t\t\tparams.timeStep = fixedTimeStep;\n\t\t\t}\n\t\t}\n\n\t\tparams.maxSubSteps = params.maxSubSteps || Math.ceil( params.timeStep / fixedTimeStep ); // If maxSubSteps is not defined, keep the simulation fully up to date\n\n\t\tlast_simulation_duration = Date.now();\n\t\tworld.stepSimulation( params.timeStep, params.maxSubSteps, fixedTimeStep );\n\n\t\treportVehicles();\n\t\treportCollisions();\n\t\treportConstraints();\n\t\treportWorld();\n\n\t\tlast_simulation_duration = ( Date.now() - last_simulation_duration ) / 1000;\n\t\tlast_simulation_time = Date.now();\n\t}\n};\n\n\n// Constraint functions\npublic_functions.hinge_setLimits = function( params ) {\n\t_constraints[ params.constraint ].setLimit( params.low, params.high, 0, params.bias_factor, params.relaxation_factor );\n};\npublic_functions.hinge_enableAngularMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.enableAngularMotor( true, params.velocity, params.acceleration );\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.hinge_disableMotor = function( params ) {\n\t_constraints[ params.constraint ].enableMotor( false );\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\n\npublic_functions.slider_setLimits = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setLowerLinLimit( params.lin_lower || 0 );\n\tconstraint.setUpperLinLimit( params.lin_upper || 0 );\n\n\tconstraint.setLowerAngLimit( params.ang_lower || 0 );\n\tconstraint.setUpperAngLimit( params.ang_upper || 0 );\n};\npublic_functions.slider_setRestitution = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setSoftnessLimLin( params.linear || 0 );\n\tconstraint.setSoftnessLimAng( params.angular || 0 );\n};\npublic_functions.slider_enableLinearMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setTargetLinMotorVelocity( params.velocity );\n\tconstraint.setMaxLinMotorForce( params.acceleration );\n\tconstraint.setPoweredLinMotor( true );\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.slider_disableLinearMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setPoweredLinMotor( false );\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.slider_enableAngularMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setTargetAngMotorVelocity( params.velocity );\n\tconstraint.setMaxAngMotorForce( params.acceleration );\n\tconstraint.setPoweredAngMotor( true );\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.slider_disableAngularMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setPoweredAngMotor( false );\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\n\npublic_functions.conetwist_setLimit = function( params ) {\n\t_constraints[ params.constraint ].setLimit( params.z, params.y, params.x ); // ZYX order\n};\npublic_functions.conetwist_enableMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.enableMotor( true );\n\tconstraint.getRigidBodyA().activate();\n\tconstraint.getRigidBodyB().activate();\n};\npublic_functions.conetwist_setMaxMotorImpulse = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.setMaxMotorImpulse( params.max_impulse );\n\tconstraint.getRigidBodyA().activate();\n\tconstraint.getRigidBodyB().activate();\n};\npublic_functions.conetwist_setMotorTarget = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\t_quat.setX(params.x);\n\t_quat.setY(params.y);\n\t_quat.setZ(params.z);\n\t_quat.setW(params.w);\n\n\tconstraint.setMotorTarget(_quat);\n\n\tconstraint.getRigidBodyA().activate();\n\tconstraint.getRigidBodyB().activate();\n};\npublic_functions.conetwist_disableMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\tconstraint.enableMotor( false );\n\tconstraint.getRigidBodyA().activate();\n\tconstraint.getRigidBodyB().activate();\n};\n\npublic_functions.dof_setLinearLowerLimit = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\t_vec3_1.setX(params.x);\n\t_vec3_1.setY(params.y);\n\t_vec3_1.setZ(params.z);\n\n\tconstraint.setLinearLowerLimit(_vec3_1);\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.dof_setLinearUpperLimit = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\t_vec3_1.setX(params.x);\n\t_vec3_1.setY(params.y);\n\t_vec3_1.setZ(params.z);\n\n\tconstraint.setLinearUpperLimit(_vec3_1);\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.dof_setAngularLowerLimit = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\t_vec3_1.setX(params.x);\n\t_vec3_1.setY(params.y);\n\t_vec3_1.setZ(params.z);\n\n\tconstraint.setAngularLowerLimit(_vec3_1);\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.dof_setAngularUpperLimit = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\t_vec3_1.setX(params.x);\n\t_vec3_1.setY(params.y);\n\t_vec3_1.setZ(params.z);\n\n\tconstraint.setAngularUpperLimit(_vec3_1);\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.dof_enableAngularMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\tvar motor = constraint.getRotationalLimitMotor( params.which );\n\tmotor.set_m_enableMotor( true );\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.dof_configureAngularMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\tvar motor = constraint.getRotationalLimitMotor( params.which );\n\n\tmotor.set_m_loLimit( params.low_angle );\n\tmotor.set_m_hiLimit( params.high_angle );\n\tmotor.set_m_targetVelocity( params.velocity );\n\tmotor.set_m_maxMotorForce( params.max_force );\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\npublic_functions.dof_disableAngularMotor = function( params ) {\n\tvar constraint = _constraints[ params.constraint ];\n\n\tvar motor = constraint.getRotationalLimitMotor( params.which );\n\tmotor.set_m_enableMotor( false );\n\n\tconstraint.getRigidBodyA().activate();\n\tif ( constraint.getRigidBodyB() ) {\n\t\tconstraint.getRigidBodyB().activate();\n\t}\n};\n\nreportWorld = function() {\n\tvar index, object,\n\t\ttransform, origin, rotation,\n\t\toffset = 0,\n\t\ti = 0;\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\tif ( worldreport.length < 2 + _num_objects * WORLDREPORT_ITEMSIZE ) {\n\t\t\tworldreport = new Float32Array(\n\t\t\t\t2 + // message id & # objects in report\n\t\t\t\t( Math.ceil( _num_objects / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * WORLDREPORT_ITEMSIZE // # of values needed * item size\n\t\t\t);\n\t\t\tworldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n\t\t}\n\t}\n\n\tworldreport[1] = _num_objects; // record how many objects we're reporting on\n\n\t//for ( i = 0; i < worldreport[1]; i++ ) {\n\tfor ( index in _objects ) {\n\t\tif ( _objects.hasOwnProperty( index ) ) {\n\t\t\tobject = _objects[index];\n\n\t\t\t// #TODO: we can't use center of mass transform when center of mass can change,\n\t\t\t//        but getMotionState().getWorldTransform() screws up on objects that have been moved\n\t\t\t//object.getMotionState().getWorldTransform( transform );\n\t\t\ttransform = object.getCenterOfMassTransform();\n\n\t\t\torigin = transform.getOrigin();\n\t\t\trotation = transform.getRotation();\n\n\t\t\t// add values to report\n\t\t\toffset = 2 + (i++) * WORLDREPORT_ITEMSIZE;\n\n\t\t\tworldreport[ offset ] = object.id;\n\n\t\t\tworldreport[ offset + 1 ] = origin.x();\n\t\t\tworldreport[ offset + 2 ] = origin.y();\n\t\t\tworldreport[ offset + 3 ] = origin.z();\n\n\t\t\tworldreport[ offset + 4 ] = rotation.x();\n\t\t\tworldreport[ offset + 5 ] = rotation.y();\n\t\t\tworldreport[ offset + 6 ] = rotation.z();\n\t\t\tworldreport[ offset + 7 ] = rotation.w();\n\n\t\t\t_vector = object.getLinearVelocity();\n\t\t\tworldreport[ offset + 8 ] = _vector.x();\n\t\t\tworldreport[ offset + 9 ] = _vector.y();\n\t\t\tworldreport[ offset + 10 ] = _vector.z();\n\n\t\t\t_vector = object.getAngularVelocity();\n\t\t\tworldreport[ offset + 11 ] = _vector.x();\n\t\t\tworldreport[ offset + 12 ] = _vector.y();\n\t\t\tworldreport[ offset + 13 ] = _vector.z();\n\t\t}\n\t}\n\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\ttransferableMessage( worldreport.buffer, [worldreport.buffer] );\n\t} else {\n\t\ttransferableMessage( worldreport );\n\t}\n\n};\n\nreportCollisions = function() {\n\tvar i, offset,\n\t\tdp = world.getDispatcher(),\n\t\tnum = dp.getNumManifolds(),\n\t\tmanifold, num_contacts, j, pt,\n\t\t_collided = false;\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\tif ( collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE ) {\n\t\t\tcollisionreport = new Float32Array(\n\t\t\t\t2 + // message id & # objects in report\n\t\t\t\t( Math.ceil( _num_objects / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * COLLISIONREPORT_ITEMSIZE // # of values needed * item size\n\t\t\t);\n\t\t\tcollisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n\t\t}\n\t}\n\n\tcollisionreport[1] = 0; // how many collisions we're reporting on\n\n\tfor ( i = 0; i < num; i++ ) {\n\t\tmanifold = dp.getManifoldByIndexInternal( i );\n\n\t\tnum_contacts = manifold.getNumContacts();\n\t\tif ( num_contacts === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor ( j = 0; j < num_contacts; j++ ) {\n\t\t\tpt = manifold.getContactPoint( j );\n\t\t\t//if ( pt.getDistance() < 0 ) {\n\t\t\t\toffset = 2 + (collisionreport[1]++) * COLLISIONREPORT_ITEMSIZE;\n\t\t\t\tcollisionreport[ offset ] = _objects_ammo[ manifold.getBody0() ];\n\t\t\t\tcollisionreport[ offset + 1 ] = _objects_ammo[ manifold.getBody1() ];\n\n\t\t\t\t_vector = pt.get_m_normalWorldOnB();\n\t\t\t\tcollisionreport[ offset + 2 ] = _vector.x();\n\t\t\t\tcollisionreport[ offset + 3 ] = _vector.y();\n\t\t\t\tcollisionreport[ offset + 4 ] = _vector.z();\n\t\t\t\tbreak;\n\t\t\t//}\n\n\t\t\t\ttransferableMessage( _objects_ammo );\n\n\t\t}\n\t}\n\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\ttransferableMessage( collisionreport.buffer, [collisionreport.buffer] );\n\t} else {\n\t\ttransferableMessage( collisionreport );\n\t}\n};\n\nreportVehicles = function() {\n\tvar index, vehicle,\n\t\ttransform, origin, rotation,\n\t\toffset = 0,\n\t\ti = 0, j = 0;\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\tif ( vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE ) {\n\t\t\tvehiclereport = new Float32Array(\n\t\t\t\t2 + // message id & # objects in report\n\t\t\t\t( Math.ceil( _num_wheels / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * VEHICLEREPORT_ITEMSIZE // # of values needed * item size\n\t\t\t);\n\t\t\tvehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n\t\t}\n\t}\n\n\tfor ( index in _vehicles ) {\n\t\tif ( _vehicles.hasOwnProperty( index ) ) {\n\t\t\tvehicle = _vehicles[index];\n\n\t\t\tfor ( j = 0; j < vehicle.getNumWheels(); j++ ) {\n\n\t\t\t\t//vehicle.updateWheelTransform( j, true );\n\n\t\t\t\t//transform = vehicle.getWheelTransformWS( j );\n\t\t\t\ttransform = vehicle.getWheelInfo( j ).get_m_worldTransform();\n\n\t\t\t\torigin = transform.getOrigin();\n\t\t\t\trotation = transform.getRotation();\n\n\t\t\t\t// add values to report\n\t\t\t\toffset = 1 + (i++) * VEHICLEREPORT_ITEMSIZE;\n\n\t\t\t\tvehiclereport[ offset ] = index;\n\t\t\t\tvehiclereport[ offset + 1 ] = j;\n\n\t\t\t\tvehiclereport[ offset + 2 ] = origin.x();\n\t\t\t\tvehiclereport[ offset + 3 ] = origin.y();\n\t\t\t\tvehiclereport[ offset + 4 ] = origin.z();\n\n\t\t\t\tvehiclereport[ offset + 5 ] = rotation.x();\n\t\t\t\tvehiclereport[ offset + 6 ] = rotation.y();\n\t\t\t\tvehiclereport[ offset + 7 ] = rotation.z();\n\t\t\t\tvehiclereport[ offset + 8 ] = rotation.w();\n\n\t\t\t}\n\n\t\t}\n\t}\n\n\tif ( j !== 0 ) {\n\t\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t\ttransferableMessage( vehiclereport.buffer, [vehiclereport.buffer] );\n\t\t} else {\n\t\t\ttransferableMessage( vehiclereport );\n\t\t}\n\t}\n};\n\nreportConstraints = function() {\n\tvar index, constraint,\n\t\toffset_body,\n\t\ttransform, origin,\n\t\toffset = 0,\n\t\ti = 0;\n\n\tif ( SUPPORT_TRANSFERABLE ) {\n\t\tif ( constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE ) {\n\t\t\tconstraintreport = new Float32Array(\n\t\t\t\t2 + // message id & # objects in report\n\t\t\t\t( Math.ceil( _num_constraints / REPORT_CHUNKSIZE ) * REPORT_CHUNKSIZE ) * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size\n\t\t\t);\n\t\t\tconstraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\t\t}\n\t}\n\n\tfor ( index in _constraints ) {\n\t\tif ( _constraints.hasOwnProperty( index ) ) {\n\t\t\tconstraint = _constraints[index];\n\t\t\toffset_body = constraint.getRigidBodyA();\n\t\t\ttransform = constraint.getFrameOffsetA();\n\t\t\torigin = transform.getOrigin();\n\n\t\t\t// add values to report\n\t\t\toffset = 1 + (i++) * CONSTRAINTREPORT_ITEMSIZE;\n\n\t\t\tconstraintreport[ offset ] = index;\n\t\t\tconstraintreport[ offset + 1 ] = offset_body.id;\n\t\t\tconstraintreport[ offset + 2 ] = origin.getX();\n\t\t\tconstraintreport[ offset + 3 ] = origin.getY();\n\t\t\tconstraintreport[ offset + 4 ] = origin.getZ();\n\t\t\tconstraintreport[ offset + 5 ] = constraint.getAppliedImpulse();\n\t\t}\n\t}\n\n\n\tif ( i !== 0 ) {\n\t\tif ( SUPPORT_TRANSFERABLE ) {\n\t\t\ttransferableMessage( constraintreport.buffer, [constraintreport.buffer] );\n\t\t} else {\n\t\t\ttransferableMessage( constraintreport );\n\t\t}\n\t}\n\n};\n\nself.onmessage = function( event ) {\n\n\tif ( event.data instanceof Float32Array ) {\n\t\t// transferable object\n\n\t\tswitch ( event.data[0] ) {\n\t\t\tcase MESSAGE_TYPES.WORLDREPORT:\n\t\t\t\tworldreport = new Float32Array( event.data );\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPES.COLLISIONREPORT:\n\t\t\t\tcollisionreport = new Float32Array( event.data );\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPES.VEHICLEREPORT:\n\t\t\t\tvehiclereport = new Float32Array( event.data );\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPES.CONSTRAINTREPORT:\n\t\t\t\tconstraintreport = new Float32Array( event.data );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( event.data.cmd && public_functions[event.data.cmd] ) {\n\t\t//if ( event.data.params.id !== undefined && _objects[event.data.params.id] === undefined && event.data.cmd !== 'addObject' && event.data.cmd !== 'registerMaterial' ) return;\n\t\tpublic_functions[event.data.cmd]( event.data.params );\n\t}\n\n};\n"]}