{"version":3,"sources":["popups/popups_color.js"],"names":["$","Drupal","imager","popups","colorC","spec","popup","Popups","Viewer","viewer","hue","saturation","lightness","dspec","extend","name","autoOpen","title","zIndex","width","dialogClass","draggable","cssId","height","resizable","position","my","at","of","$selectButton","baseC","dialogOnCreate","dialogOpen","dialogOnOpen","setInitialImage","dialogInit","dialogOnClose","init","updateStatus","dialogIsOpen","change","adjustColor","$canvas2","$canvas","val","$cvssrc","$cvsdst","parseInt","satMul","w","attr","h","ctxsrc","getContext","ctxdst","dataDesc","getImageData","data","hue6","light255","lightp1","lightm1","p","pix","pix1","pix2","h_","s","v","r","g","b","vs","ms","vm","l","m","sextant","putImageData","dialogReset","dialogApply","applyFilter","dialogUpdate","status","Apply","Reset","Cancel","dialogClose","jQuery"],"mappings":"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","file":"../../popups/popups_color.js","sourcesContent":["/**\n * @file\n * Declare Imager module Color dialog - Drupal.imager.popups.colorC.\n */\n\n/*\n * Note: Variables ending with capital C or M designate Classes and Modules.\n * They can be found in their own files using the following convention:\n *   i.e. Drupal.imager.coreM is in file imager/js/imager.core.js\n *        Drupal.imager.popups.baseC is in file imager/js/popups/imager.base.js\n * Variables starting with $ are only used for jQuery 'wrapped sets' of objects.\n */\n\n(function ($) {\n  'use strict';\n\n  /**\n   * Define the color dialog - Hue/Saturation/Lightness.\n   *\n   * @param {object} spec\n   *   Specifications for opening dialog, can also have ad-hoc properties\n   *   not used by jQuery dialog but needed for other purposes.\n   *\n   * @return {dialog}\n   *   Return the color dialog.\n   */\n  Drupal.imager.popups.colorC = function colorC(spec) {\n    var Popups = Drupal.imager.popups;\n    var Viewer = Drupal.imager.viewer;\n    var hue = 0;\n    var saturation = 0;\n    var lightness = 0;\n    var popup;\n\n    var dspec = $.extend({\n      name: 'Color',\n      autoOpen: false,\n      title: 'Hue/Saturation/Lightness',\n      zIndex: 1015,\n      width: 'auto',\n      dialogClass: 'imager-dialog imager-color-dialog imager-noclose',\n      draggable: true,\n      cssId: 'imager-color',\n      height: 'auto',\n      resizable: false,\n      position: {\n        my: 'left',\n        at: 'right',\n        of: spec.$selectButton\n      }\n    }, spec);\n    // Initialize the popup.\n    popup = Popups.baseC(dspec);\n\n    popup.dialogOnCreate = function dialogOnCreate() {\n      popup.dialogOpen();\n      popup.draggable();\n    };\n\n    popup.dialogOnOpen = function dialogOnOpen() {\n      Viewer.setInitialImage();\n      popup.dialogInit();\n    };\n\n    popup.dialogOnClose = function dialogOnClose() {\n    };\n\n    popup.init = function init() {\n      hue = 0;\n      saturation = 0;\n      lightness = 0;\n      popup.updateStatus();\n    };\n\n    popup.dialogInit = function dialogInit() {\n      popup.init();\n      if (popup.dialogIsOpen()) {\n        $('#slider-hue').change(function () {\n          popup.adjustColor(Viewer.$canvas2, Viewer.$canvas);\n        });\n        $('#slider-saturation').change(function () {\n          popup.adjustColor(Viewer.$canvas2, Viewer.$canvas);\n        });\n        $('#slider-lightness').change(function () {\n          popup.adjustColor(Viewer.$canvas2, Viewer.$canvas);\n        });\n        $('#slider-hue').val(hue);\n        $('#slider-saturation').val(saturation);\n        $('#slider-lightness').val(0);\n      }\n    };\n\n    popup.adjustColor = function adjustColor($cvssrc, $cvsdst) {\n      hue = parseInt($('#slider-hue').val() * 100) / 100;\n      saturation = parseInt($('#slider-saturation').val() * 100) / 9000;\n      lightness = parseInt($('#slider-lightness').val() * 100) / 10000;\n      popup.updateStatus();\n\n      var w = $cvssrc.attr('width');\n      var h = $cvssrc.attr('height');\n\n      var ctxsrc = $cvssrc[0].getContext('2d');\n      var ctxdst = $cvsdst[0].getContext('2d');\n\n      var dataDesc = ctxsrc.getImageData(0, 0, w, h);\n      // left, top, width, height.\n      var data = dataDesc.data;\n\n      // This seems to give the same result as Photoshop.\n      var satMul;\n      if (saturation < 0) {\n        satMul = 1 + saturation;\n      }\n      else {\n        satMul = 1 + saturation * 2;\n      }\n\n      hue = (hue % 360) / 360;\n      var hue6 = hue * 6;\n\n      var light255 = lightness * 255;\n      var lightp1 = 1 + lightness;\n      var lightm1 = 1 - lightness;\n\n      var p = w * h;\n      var pix = p * 4;\n      var pix1 = pix + 1;\n      var pix2 = pix + 2;\n\n      while (p--) {\n\n        var r = data[pix -= 4];\n        var g = data[pix1 = pix + 1];\n        var b = data[pix2 = pix + 2];\n\n        var h_;\n        var s;\n        var v;\n\n        if (hue !== 0 || saturation !== 0) {\n          // ok, here comes rgb to hsl + adjust + hsl to rgb, all in one jumbled mess.\n          // It's not so pretty, but it's been optimized to get somewhat decent performance.\n          // The transforms were originally adapted from the ones found in Graphics Gems, but have been heavily modified.\n          var vs = r;\n          if (g > vs) {\n            vs = g;\n          }\n          if (b > vs) {\n            vs = b;\n          }\n          var ms = r;\n          if (g < ms) {\n            ms = g;\n          }\n          if (b < ms) {\n            ms = b;\n          }\n          var vm = (vs - ms);\n          var l = (ms + vs) / 510;\n          if (l > 0) {\n            if (vm > 0) {\n              if (l <= 0.5) {\n                s = vm / (vs + ms) * satMul;\n                if (s > 1) {\n                  s = 1;\n                }\n                v = (l * (1 + s));\n              }\n              else {\n                s = vm / (510 - vs - ms) * satMul;\n                if (s > 1) {\n                  s = 1;\n                }\n                v = (l + s - l * s);\n              }\n              if (r === vs) {\n                if (g === ms) {\n                  h_ = 5 + ((vs - b) / vm) + hue6;\n                }\n                else {\n                  h_ = 1 - ((vs - g) / vm) + hue6;\n                }\n              }\n              else {\n                if (g === vs) {\n                  if (b === ms) {\n                    h_ = 1 + ((vs - r) / vm) + hue6;\n                  }\n                  else {\n                    h_ = 3 - ((vs - b) / vm) + hue6;\n                  }\n                }\n                else {\n                  if (r === ms) {\n                    h_ = 3 + ((vs - g) / vm) + hue6;\n                  }\n                  else {\n                    h_ = 5 - ((vs - r) / vm) + hue6;\n                  }\n                }\n              }\n              if (h_ < 0) {\n                h_ += 6;\n              }\n              if (h_ >= 6) {\n                h_ -= 6;\n              }\n              var m = (l + l - v);\n              var sextant = h_ >> 0;\n              if (sextant === 0) {\n                r = v * 255;\n                g = (m + ((v - m) * (h_ - sextant))) * 255;\n                b = m * 255;\n              }\n              else {\n                if (sextant === 1) {\n                  r = (v - ((v - m) * (h_ - sextant))) * 255;\n                  g = v * 255;\n                  b = m * 255;\n                }\n                else {\n                  if (sextant === 2) {\n                    r = m * 255;\n                    g = v * 255;\n                    b = (m + ((v - m) * (h_ - sextant))) * 255;\n                  }\n                  else {\n                    if (sextant === 3) {\n                      r = m * 255;\n                      g = (v - ((v - m) * (h_ - sextant))) * 255;\n                      b = v * 255;\n                    }\n                    else {\n                      if (sextant === 4) {\n                        r = (m + ((v - m) * (h_ - sextant))) * 255;\n                        g = m * 255;\n                        b = v * 255;\n                      }\n                      else {\n                        if (sextant === 5) {\n                          r = v * 255;\n                          g = m * 255;\n                          b = (v - ((v - m) * (h_ - sextant))) * 255;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (lightness < 0) {\n          r *= lightp1;\n          g *= lightp1;\n          b *= lightp1;\n        }\n        else {\n          if (lightness > 0) {\n            r = r * lightm1 + light255;\n            g = g * lightm1 + light255;\n            b = b * lightm1 + light255;\n          }\n        }\n\n        if (r < 0) {\n          data[pix] = 0;\n        }\n        else {\n          if (r > 255) {\n            data[pix] = 255;\n          }\n          else {\n            data[pix] = r;\n          }\n        }\n\n        if (g < 0) {\n          data[pix1] = 0;\n        }\n        else {\n          if (g > 255) {\n            data[pix1] = 255;\n          }\n          else {\n            data[pix1] = g;\n          }\n        }\n\n        if (b < 0) {\n          data[pix2] = 0;\n        }\n        else {\n          if (b > 255) {\n            data[pix2] = 255;\n          }\n          else {\n            data[pix2] = b;\n          }\n        }\n\n      }\n      ctxdst.putImageData(dataDesc, 0, 0);\n    };\n\n    popup.dialogReset = function dialogReset() {\n      popup.init();\n      if (popup.dialogIsOpen()) {\n        $('#slider-hue').val(0);\n        $('#slider-saturation').val(0);\n        $('#slider-lightness').val(0);\n        popup.adjustColor(Viewer.$canvas2, Viewer.$canvas);\n      }\n    };\n\n    popup.dialogApply = function dialogApply() {\n      Viewer.applyFilter(popup.adjustColor);\n    };\n\n    popup.dialogUpdate = function dialogUpdate() {\n    };\n\n    popup.updateStatus = function updateStatus() {\n      Popups.status.dialogUpdate({\n        hue: parseInt(hue * 100) / 100,\n        saturation: parseInt(saturation * 100) / 100,\n        lightness: parseInt(lightness * 100) / 100\n      });\n    };\n\n    // Dialog buttons are defined last to ensure methods are defined.\n    popup.spec['buttons'] = {\n      Apply: popup.dialogApply,\n      Reset: popup.dialogReset,\n      Cancel: popup.dialogClose\n    };\n    return popup;\n  };\n})(jQuery);\n"]}